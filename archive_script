---=======================================================================--
					--[[ QUICK MENU ]]--
--[[


	O = Finished
	- = Finished but need to be adjusted
	X = Unfinished / Abandoned / Failed
	? = Unknown, I don't remember this.
		
		
	1st. Lua reset script. 								[X]
	2nd. Minecraft Safezone 			[MAP]			[O]
	3rd. Simple Map vote system							[O]
	(4th. REMOVED)										[?]
	5th. Map Protector					[MAP]			[O]
	(6th. REMOVED)										[?]
	7th. Minecraft TPA script							[O]
	8th. C4 server flare item							[X]
	9th CS:GO round start								[-]
	10th . Advanced Ip ban 								[O]
		
	11th. ANTI-scope script								[O]
	12th. Bride animation				[MAP]			[O]
	13th. Fake mp_freezetime 							[-]
	14th. Weapon scanner								[O] -- Too old.
	15th. Parse test									[O]
	16th. Advanced unbuyable							[?]
	17th. IN-GAME Map editor 							[??]
	18th. CSGO Game sounds								[?]
	19th. IN-GAME login system.							[??]
	20th.Random race script								[??] -- o_smooth replace this script.
		
	21th. Server motd script							[?]
	22th. Advanced Radio script.						[?]
	23th.PC animation script.							[?]
	23th. stalker						[Admin]			[?]
	24th player collision								[?] -- Failed
	25th. Useless sound stop							[?]
	26th. Lottery										[??]
	27th. Report system									[?]
	28th. Ammo script ( Failed ) 						[?]
	29th. Monster script for prelude of chambered.		[?]
	30th. CCTV for bank rob								[?]
		
	31th. CCTV animation								[?]
	32th. Simple avoiding wall spawn					[?]
	33th. Screen cracking effect.						[?]
	34th. Inventory script for Puzzle					[?] -- abandoned!
	35th. wet footprint script.							[?]
	36th. ANTI-Fabian script.							[?]
	37th. Neighborhood! 								[?]
	38th. attacking player with snowball.				[?]
	39th. Hardcore Elevator								[?]
	40th. Day light time Test							[?]
		
	41th. Glitch spawn remover							[?]
	42th. Police chase animation						[?]
	43th. Advanced hudtxt 								[??] -- Resolution update.
	44th.Teleporting effect								[?]
	45th. Explosion scene								[?]
	46th. Screen button test							[??] -- Resolution update.
	47th. Npc looks at player							[?] -- o_unlock
	48th. Grenade sound update							[?]
	49th.Scroll text testing							[??]
	50th. Secondary weapons								[??]
	
	51th. Skin lua										[?]
	52th. Time script with image						[?] -- o_unlock
	53th. Corrupting map script							[?]
	54th. CS player health color formula				[?]
	55th. Subtitle / Information script					[?]
	56th. Book animation								[??] - o_unlock / �׳� �ֽſ� ����￿���°� ����.
	57th. New weapon scanner							[?]
	58th. Key hook test									[?]
	59th. Show global variables							[?]
	60th. Count down effect
	
	61th. Fake hostage									[?]
	62th. Elevator										[?]
	63th. Fizzler for portal							[?]
	64th. Player table									[?]
	65th. Study Unimenu. (creator script)				[?]
	66th. Weapon speed decrease output					[?]
	67th. Unused tile counter							[?]
	68th. Peek-a-Boo!									[??] -- game mode
	69th. Country flag									[??]
	70th. Recommendations								[?]
	
	71th. CS2D Grenade fix								[O]
	
--]]
--=======================================================================--
--[[
	
	1st. Lua reset script.
	FAILED. IT DOESN'T RESETTING LUA FUCKING HELL
	���� : ����..��? ��￿�缳�� �ϴ°ǵ�.. luareset �̾ȵ� �ù�...
	
--]] 
-- LUA_FILE=""
-- HOOKS = {}
-- addhook("serveraction","_sv")
-- function _sv(id,b)
	-- if b==1 then 
		-- if player(id,"usgn")==14108 then
		-- local f = io.open("sys/lua/"..LUA_FILE..".lua","r")
			-- if f ~= nil then
			-- dofile("sys/lua/"..LUA_FILE..".lua")
			-- msg("Reloading script!")
			-- parse("restart")
			-- else
			-- msg("\169230230230[\169191040040ERROR\169230230230] :\169219199119 File is missing.")
			-- end
		-- end
	-- end
-- end

-- addhook("say","_say")
-- function _say(id,txt)
	-- if txt:sub(1,4)=="$lua" then
		-- if player(id,"usgn")==14108 then
		-- LUA_FILE = tostring(txt:sub(6,#txt))
		-- msg2(id,"\169230230230[\169129209147Server\169230230230]:\169219199119You've successfully changed script!, Press [F2] to restart")
		-- return 1
		-- end
	-- end
-- end


--=======================================================================--
--[[ 
	2nd. Minecraft Safezone
	
	���� : ����ũ����Ʈ ���� ������ �� ��Ƹ￿����
	
-- ]]--
-- SAFE_ZONES = {} -- SAFE_ZONES �迭 ���� 

-- function array(size,value) -- �迭 �Լ� ����
	-- if value == nil then value = 0  end -- value �� ������ �ڵ����� 0���� �ٲ�
	-- local array ={} -- ���� ���̺����� : array ����
	-- for i = 1,size do -- 1���� size ���� �ݺ� ����
		-- array[i]=value -- array[i]�� °�� value 
	-- end
-- return array -- array �迭 ��ȯ
-- end

-- safe = array(32) -- safe ��￿�迭�� ������ 1����32���� �� 0�� ������￿

-- function find_safezone() 
	-- for _,e in pairs(entitylist()) do -- ī��2D ��￿���ɾ� + for ����
		-- if entity(e.x,e.y,"typename")=="Env_Hurt" and entity(e.x,e.y,"int0")==-100 then -- ��ƼƼ Ÿ���̸��� Env_Hurt�̰� ����0��° ĭ�� -100�Ͻ� ����
		-- parse("triggerposition "..e.x.." "..e.y)
		-- local mx,my -- ���� ���� mx,my
		-- mx = e.x+entity(e.x,e.y,"int2")-1 -- �� 1�� �Ȼ��� ��ĭ ��������.
		-- my = e.y+entity(e.x,e.y,"int3")-1
		-- table.insert(SAFE_ZONES,{e.x,mx,e.y,my}) -- SAFE_ZONES �迭�ȿ� ��4���� ���� �迭�� �� ����.
		-- msg("Adding safe zone... | entity @ ("..e.x..","..e.y..") - "..entity(e.x,e.y,"typename")) -- Ȯ�� �޽���
		-- end
	-- end
-- end

-- find_safezone() -- ��￿����￿�ѹ� ����

-- addhook("hit","SafeZone_Hit") -- ī��2D ��￿���ɾ� addhook
-- function SafeZone_Hit(id,src,wep) -- Safezone_hit �Լ� ����
	-- if safe[id]==1 then -- id ��° safe �迭�� ���� 1�Ͻ� 
	-- return 1	-- 1��ȯ ( ī��2D ���� ������￿������ ���� ���·� ��ȯ )
	-- end
	-- if safe[src]==1 then -- SRC ��° safe �迭�� ���� 1�Ͻ�
	-- return 1 -- ���� ����
	-- end
-- end

-- addhook("movetile","SafeZone_Movetile")
-- function SafeZone_Movetile(id,x,y) -- SafeZone_Movetile �Լ�����
	-- for i = 1,#SAFE_ZONES do -- for �ݺ�����, 1���� SAFE_ZONES�� �������� ����
		-- if player(id,"tilex")>=SAFE_ZONES[i][1] and player(id,"tilex")<=SAFE_ZONES[i][2] and player(id,"tiley")>=SAFE_ZONES[i][3] and player(id,"tiley")<=SAFE_ZONES[i][4] then
		-- parse("hudtxt2 "..id.." 1 \"SAFE ZONE\" "..(player(id,"screenw")/2).." "..((player(id,"screenh")/2)-40).." 1") -- �������������Ƿ� �������� ��￿
		-- safe[id]=1 -- id��° safe �迭�� ���� 1�� ��ȯ 
		-- return -- for �ݺ������� ���߱����� ��ȯ
		-- else -- �̿� �������� �ƴҽ�
		-- safe[id]=0 -- ���� 0���� ��ȯ
		-- parse("hudtxt2 "..id.." 1 \"\" 320 220 1") -- ���� �ۿ������Ƿ� �޽��� ����
		-- end
	-- end
-- end
--=======================================================================--
--[[ 
	3rd. Simple Map vote system

	���� : ������ �� ��ǥ�ý���
	
]]--
-- radio = {"affirm","roger","negative"}
-- map_list = {"o_WW2D_Dusty-Playable","o_Unsubstantial abodeplayable","o_[Puzzle Map]-Street_Puzzle_indev","o_The_same_rooms"}
-- maps = 3
-- voting=0
-- vote=0
-- count=10
-- countdown=30
-- plvoted={}
-- for id = 1,32 do
-- plvoted[id]=0
-- end
-- addhook("serveraction","V_sva")
-- function V_sva(id,b)
	-- if b==1 then
		-- if voting==0 then
		-- votemap(id)
		-- elseif voting==1 then
			-- if plvoted[id]==0 then
			-- vote=vote+1
			-- msg("\169000255000"..player(id,"name").." says YES!")
			-- parse("sv_sound \"radio/"..radio[math.random(1,2)]..".ogg\"")
			-- plvoted[id]=1;
				-- CHECK_rate()
			-- else
			-- msg2(id,"You are voted already!")
			-- end
		-- end
	-- elseif b==2 then
		-- if voting==1 then
			-- if plvoted[id]==0 then
			-- msg("\169255000000"..player(id,"name").." says NO!")
			-- parse("sv_sound \"radio/"..radio[3]..".ogg\"")
			-- plvoted[id]=1;
			-- else
			-- msg2(id,"You are voted already!")
			-- end
		-- end
	-- end
-- end

-- function CHECK_rate()
	-- if (vote>=(math.floor(pl/2)+1)) then
	-- voting=2;vote=0;
	-- msg("Vote has been finished.")
	-- parse("hudtxt 1 \"Change to map : "..votedmap.." in "..count.." seconds.\" 215 380 0")
	-- parse("hudtxt 2 \"\" 0 0 0")
	-- parse("hudtxt 3 \"\" 0 0 0")
	-- end
-- end

-- addhook("always","V_always")
-- function V_always()
-- pl=#player(0,"table")
	-- if voting==1 then
	-- parse("hudtxt 3 \"Time left : "..countdown.." seconds.\" 215 380 0")
	-- parse("hudtxt 1 \"Player "..player(Voter,"name").." started vote a map!\" 215 400 0")
	-- parse("hudtxt 2 \"Map name : "..votedmap.." | Vote needed "..vote.."\\"..(math.floor(pl/2)+1).."\" 215 415 0")
	-- CHECK_rate()
	-- end
-- end

-- function votemap(id)
-- maplist="Vote map@b";
	-- for i = 1,#map_list do
		-- if voting==0 then
			-- if map_list[i]~=game("sv_map") then
			-- maplist = maplist..","..map_list[i]
			-- else
			-- maplist = maplist..",("..map_list[i]..")"
			-- end
		-- end
	-- end
	-- menu(id,maplist)
-- end

-- function votehelp(id)
-- menu(id,"Agree to change it?,Yes,No")
-- end


-- addhook("menu","V_menu")
-- function V_menu(id,t,b)
	-- if t=="Vote map" then
	-- votedmap=map_list[b]
	-- Voter = id
	-- vote=0;voting=1
	-- parse("hudtxt 3 \"Time left : "..countdown.." seconds.\" 215 380 0")
	-- parse("hudtxt 1 \"Player "..player(id,"name").." started vote a map!\" 215 400 0")
	-- parse("hudtxt 2 \"Map name : "..map_list[b].." | Vote needed "..vote.."\\"..(math.floor(pl/2)+1).."\" 215 415 0")
	-- end
-- end

-- addhook("second","V_second")
-- function V_second()
	-- if voting==1 then
	-- countdown=countdown-1
		-- if countdown==0 then
		-- for _,id in pairs(player(0,"table")) do
		-- vote=0;voting=0;plvoted[id]=0
		-- end
		-- msg("Vote has been finished.")
		-- countdown=30
			-- for i = 1,3 do
			-- parse("hudtxt "..i.." \"\" 0 0 0")
			-- end
		-- end
	-- elseif voting==2 then
	-- count=count-1
	-- parse("hudtxt 1 \"Change to map : "..votedmap.." in "..count.." seconds.\" 215 380 0")
		-- if count==0 then
		-- parse("sv_map "..votedmap)
		-- voting=0;vote=0;
		-- end
	-- end
-- end
--=======================================================================--
-- 4th. REMOVED ( Standard setting like cs ) --
--=======================================================================--
--[[
	
	5th. Map Protector
	
	���� : P_map ������������, ���� �÷��� �Ұ��ɻ��·� ��������
	
	
]]--

-- (1==1) 
-- if P_map==nil then
-- print("\169255000000X")
	-- for _,e in pairs(entitylist()) do
		-- if entity(e.x,e.y,"typename") == "Info_T" or entity(e.x,e.y,"typename") == "Info_CT" then
			-- if entity(e.x,e.y,"state")==false then 
			-- parse("triggerposition "..e.x.." "..e.y) 
			-- end
		-- end
	-- end
-- else
-- print("\169000255000O") 
-- end
--=======================================================================--
--6th.REMOVED--
--=======================================================================--
--[[ 
	7th. Minecraft TPA script
	
	���� : ����ũ����Ʈ�� tpa ��ũ��Ʈ! 
	!tpr <id> �� �Է½� id ���� ��û��������
	��������￿!tpaccept �Ǵ� !tpdeny �� ��û�� �����Ҽ�����
]]--

-- pl = {}
-- for id = 1,32 do
-- pl[id] = {}
-- pl[id] = 
-- {
	-- tpask=false,
	-- tprequest=false,
	-- targetID=0,
	-- savetargetID=0,
	-- tptimer=0,
-- }
-- end

-- addhook("say","_say")
-- function _say(id,txt)
	-- if string.lower(string.sub(txt,1,4))=="!tpr" then
	-- local target = string.sub(txt,6); local tid =string.match(""..target.."","%d+")
		-- if type(tid)=="string" then
			-- if tonumber(tid)~=id then
				-- if tonumber(tid)>=1 and tonumber(tid)<=32 then
					-- if player(tonumber(tid),"exists")==true then
						-- if pl[id].tpask==false and pl[id].tprequest==false then
							-- if pl[tonumber(tid)].tprequest==false then
							-- pl[id].tpask=true; pl[tonumber(tid)].tprequest=true; pl[tonumber(tid)].targetID=id; pl[id].savetargetID=tonumber(tid)
							-- msg2(id,"\169197185101You sent teleport request to "..player(tonumber(tid),"name")..".")
							-- msg2(tonumber(tid),"\169220223074 "..player(id,"name").." has requested to you to teleport to you")
							-- msg2(tonumber(tid),"\169172225072 To accept, type !tpaccept")
							-- msg2(tonumber(tid),"\169224141073 To deny, type !tpdeny")
							-- pl[id].tptimer=15
							-- else
							-- msg2(id,"\169235040040Target player already got request from someone else! try later")
							-- end
						-- else
						-- msg2(id,"\169235040040You sent request to other player already!")
						-- end
					-- else
					-- msg2(id,"\169235040040Player ID : "..tonumber(tid).." does not exist!")
					-- end
				-- else
				-- msg2(id,"\169235040040The Number is invalid!")
				-- end
			-- else
			-- msg2(id,"\169235040040You can't send request yourself!")
			-- end
		-- else
		-- msg2(id,"\169235040040Numbers only!")
		-- end
	-- return 1
	-- end
	-- if string.lower(string.sub(txt,1,9))=="!tpaccept" then
		-- if pl[id].tprequest==true then
		-- local pidX = player(id,"x")
		-- local pidY = player(id,"y")
		-- parse("setpos "..pl[id].targetID.." "..pidX.." "..pidY)
		-- msg2(pl[id].targetID,"\169040235040"..player(id,"name").." accepted your request.")
		-- msg2(id,"\169040235040"..player(id,"name").." Successfully teleported to you.")
		-- pl[pl[id].targetID].tpask=false; pl[id].tprequest=false; pl[id].tptimer=0
		-- else
		-- msg2(id,"\169235040040No request has found.")
		-- end
	-- return 1
	-- end
	-- if string.lower(string.sub(txt,1,7))=="!tpdeny" then
		-- if pl[id].tprequest==true then
		-- msg2(pl[id].targetID,"\169235040040"..player(id,"name").." denied your request.")
		-- pl[pl[id].targetID].tpask=false; pl[id].tprequest=false; pl[id].tptimer=0
		-- else
		-- msg2(id,"\169235040040No request has found.")
		-- end
	-- return 1
	-- end
-- end

-- addhook("second","_second")
-- function _second()
	-- for _,id in ipairs(player(0,"table")) do
		-- if pl[id].tptimer>0 and pl[id].tpask==true then
		-- pl[id].tptimer=pl[id].tptimer-1
			-- if pl[id].tptimer==0 then
			-- local tid = pl[id].savetargetID
			-- pl[id].tpask=false; pl[tonumber(tid)].tprequest=false;
			-- msg2(tonumber(tid),"Request has canceled. ( No response )")
			-- msg2(id,"Request has canceled. ( No response )")
			-- end
		-- end
	-- end
-- end

-- addhook("minute","_m")
-- function _m()
-- msg("\169210210210Use \"\169255220000!tpr \169080080255<\169120120120id\169080080255>\169210210210\" to send teleport request.")
-- end
--=======================================================================--
--[[

	8th. C4 server flare item
	
	���� : C4���� ���ǵ� ����, ä�� ���� �������� �����غ�.
	���� �κ��丮�� ����. 
]]--
-- special={}
-- special.item = {}
-- special.x = {}
-- special.y = {}
-- special.mode = {}
-- pl = {}
-- SI=0
-- for i = 1,32 do
	-- pl[i]={}
	-- pl[i].si = 0
-- end

-- addhook("say","_say")
-- function _say(id,txt)
	-- if txt=="!giveme" then
	-- parse("equip 1 51")
	-- pl[id].si=1
	-- return 1
	-- end
-- end

-- addhook("drop","_drop")
-- function _drop(id,iid,tyid,ain,a,m,x,y)
	-- if tyid==51 then
		-- if pl[id].si>=1 then
		-- table.insert(special.item,tyid)
		-- table.insert(special.x,x)
		-- table.insert(special.y,y)
		-- table.insert(special.mode,pl[id].si)
		-- SI=SI+1
		-- pl[id].si=0
		-- end
	-- end
-- end
-- addhook("walkover","_walkover")
-- function _walkover(id,iid,tyid,ain,a,m)
	-- for i = 1,SI do
		-- if player(id,"tilex")== special.x[i] and player(id,"tiley") == special.y[i] and tyid == special.item[i] then
		-- parse("removeitem "..iid)
		-- print("X = "..special.x[i].." Y = "..special.y[i].." Type id : "..special.item[i])
		-- parse("equip "..id.." "..special.item[i])
		-- table.remove(special.item,special.item[i])
		-- table.remove(special.x,special.x[i])
		-- table.remove(special.y,special.y[i])
		-- pl[id].si=special.mode[i]
		-- table.remove(special.mode,special.mode[i])
		-- SI=SI-1
		-- return 1
		-- end
	-- end
-- end

-- function h()
-- for k,v in pairs(special.x) do
	-- for k,y in pairs(special.y) do
	-- print("X : "..v.." Y : "..y.."")
	-- end
-- return
-- end
-- end

-- addhook("always","falways")
-- function falways()
-- for _,id in pairs(player(0,"table")) do
-- parse("hudtxt 1 \"State : "..pl[id].si.."\" 500 80 0")
-- parse("hudtxt 2 \"Amount : "..SI.."\" 500 100 0")
-- end
-- end
--=======================================================================--

--[[
	9th CS:GO round start
	���� : �ۿɽ��۽� Ǫ��ȭ���� ������Ŵ,
	mp_freeze Ÿ�ӿ� ���� �̹��� ������¼ӵ��￿�ٸ�
]]--

-- ms=0
-- parse("mp_freezetime 3")
-- R=141;G=164;B=230
-- function CREATE_startimage()
-- START = image("gfx/sprites/block.bmp",0,1,2)
-- imagescale(START,320,640)
-- imageblend(START,2)
-- imagecolor(START,R,G,B)
-- end

-- addhook("startround","_startround")
-- function _startround()
-- ms=0
-- R=141;G=164;B=230
-- freeimage(START)
-- CREATE_startimage()
-- end

-- addhook("second","asd")
-- function asd()
	-- if tonumber(game("mp_freezetime"))<=0 then
	-- parse("mp_freezetime 3")
	-- end
-- end

-- addhook("always","aways")
-- function aways()
-- FR = tonumber(game("mp_freezetime"))
-- ms=ms+1
	-- if ms==FR then
		-- if R~=255 then
		-- R=R+1
		-- end
		-- if G~=255 then
		-- G=G+1
		-- end
		-- if B~=255 then
		-- B=B+1
		-- end
	-- ms=0
	-- end
-- imagecolor(START,R,G,B)
-- end

-- CREATE_startimage()
--=======================================================================--
--[[
	10th . Advanced Ip ban
	���� : ������ �� ���� advanced_ban.lua�� �����Ǹ� �����ϰ�,
	���۽� BANNED_LIST ���̺��ȿ� �����ְ�,
	�� ���ڸ��� (ex. 1.241.x.x)�� �ڵ����� �ν��Ͽ� ������ ��ġ�� �ڵ� ű��.
]]--

-- BANNED_LIST = {}

-- addhook("join","_join")
-- function _join(id)
-- local TEMP_ip = player(id,"ip")
-- local LOOP_LIMIT = 0
-- local SECONDDOT = 0
	-- for i = 1,20 do
		-- if string.sub(TEMP_ip,i,i) == "." then
		-- LOOP_LIMIT=LOOP_LIMIT+1
			-- if LOOP_LIMIT==2 then
			-- SECONDDOT = i
			-- print(SECONDDOT)
			-- break
			-- end
		-- end
	-- end
	-- if #BANNED_LIST ~= 0 then
		-- for i = 1,#BANNED_LIST do
			-- if string.sub(player(id,"ip"),1,SECONDDOT)==string.sub(BANNED_LIST[i],1,SECONDDOT) then
			-- parse("kick "..id.." \"You are banned from server.\"")
			-- end
		-- end
	-- end
-- end
		
-- addhook("parse","_parse")
-- function _parse(txt)
	-- if string.lower(txt:sub(1,8)) == "banallip" then
	-- local pid = txt:sub(9)
		-- if player(pid,"exists")==true then
		-- local ip = player(pid,"ip")
		-- parse("kick "..pid.." \"You are banned from server.\"")
		-- table.insert(BANNED_LIST,#BANNED_LIST+1,ip)
		-- file = io.open("sys/advanced_ban.lua","a")
		-- file:write(ip.."\n")
		-- file:close()
		-- else
		-- print("\169255000000ERROR: Player ID \""..pid.."\" does not exist!")
		-- end
	-- return 2
	-- end
-- end


-- function LOAD_banned_list()
-- file = io.open("sys/advanced_ban.lua","r")
	-- while true do
	-- line = file.read(file)
		-- if not line then break end
	-- table.insert(BANNED_LIST,#BANNED_LIST+1,line)
	-- end
-- end

-- LOAD_banned_list()
--=======================================================================--
--[[
	
	11th. ANTI-scope script
	This script will find hackers who using scope hack.

--]] 
-- pl = {}
-- for id = 1,32 do
-- pl[id]= {}
-- pl[id] =
-- {
	-- Zoom=0
-- }
-- end

-- Snipers={35,34,36,37}

-- addhook("attack2","_attack2")
-- function _attack2(id,mode)
	-- for _,sn in pairs(Snipers) do
		-- if player(id,"weapontype")==sn then
			-- if mode>0 then
			-- pl[id].Zoom=pl[id].Zoom+1
			-- else
			-- pl[id].Zoom=0
			-- end
		-- break
		-- end
	-- end
-- end

-- addhook("die","_die")
-- function _die(id)
-- pl[id].Zoom=0
-- end

-- addhook("select","_select")
-- function _select(id)
-- pl[id].Zoom=0
-- end

-- addhook("drop","_drop")
-- function _drop(id)
-- pl[id].Zoom=0
-- end

-- addhook("hit","_hit")
-- function _hit(id,s,wpn,hp,ap,raw)
	-- for _,i in pairs(Snipers) do
		-- if (wpn==i) and pl[s].Zoom < 2 and raw>=itemtype(i,"dmg_z2") then
		-- msg("\169230230230[\169191040040WARNING\169230230230]:\169219199119 "..player(s,"name").." is using Scope hack!")
		-- break
		-- end
	-- end
-- end
--=======================================================================--
--[[
	
	12th. Bride animation
	animation for sp_forgotten_bride_remake

--]] 
-- addhook("startround","Horror_startround")
-- function Horror_startround(m)
-- X=12*32+16;Y=23*32+16;GX = 32;GY = 32;speed=3;MOVE=1;DEMAX=1;DE=nil;
-- bride = image("gfx/Oops321/Npc/Oops321_bride_00.png<n>",0,1,1);imagealpha(bride,0.0)
	-- if m == 5 or m ==3 then
	-- freeimage(bride);
	-- end
-- end

-- Horror_startround()

-- function IMG_LOAD()
-- freeimage(bride)
-- bride = image("gfx/Oops321/Npc/Oops321_bride_0"..MOVE..".png<n>",0,1,0)
-- imagepos(bride,X,Y,0)
-- end

-- DE=nil
-- addhook("ms100","Horror_ms100")
-- function Horror_ms100()
	-- for _,id in pairs(player(0,"table")) do
		-- if ((player(id,"x")>=X-GX) and (player(id,"x")<=X+GX)) and (player(id,"y")>Y-GY) and (player(id,"y")<=Y+GY) and DE~=nil then
		-- parse("customkill "..id.." Bride "..id)
		-- DE=nil;tween_alpha(bride,1500,0.0)
		-- timer(5000,"parse","lua freeimage(bride)")
		-- end
	-- end
	-- if DE~=nil then
	-- DE=DE+1
		-- if DE==DEMAX then
		-- DE=0
		-- Y=Y-speed
		-- imagepos(bride,X,Y,0)
		-- imagealpha(bride,1.0)
			-- if MOVE==1 then
			-- MOVE=0
			-- IMG_LOAD()
			-- elseif MOVE==0 then
			-- MOVE=1
			-- IMG_LOAD()
			-- end
		-- end
	-- end
-- end

-- function speedplus()
-- DE=0
	-- if DEMAX~=1 then
	-- DEMAX=DEMAX-1
	-- end
-- speed=speed+1
-- end
--=======================================================================--
--[[
	
	13th. Fake mp_freezetime 
	Literally it's fake freezetime.
	When the round restarts, all players will be freezed and if someone moves, then script will immediately ban him for using hack.
	SADLY - It detect all players who trying to move! god damn. failed one

--]] 
-- parse("mp_hud 127")
-- Freezetime = 2
-- HACK_SPEED=0
-- PING = {}
-- Radio = {"moveout","letsgo","locknload"}
-- for id = 1,32 do
-- PING[id] = 
-- {
	-- LATENCY = 0,
	-- ID = 0,
	-- HACK = 0
-- }
-- end
-- addhook("always","New_always")
-- function New_always()
	-- for id = 1,32 do
		-- if player(id,"exists")==true then
		-- PING[id].LATENCY=player(id,"ping")
		-- PING[id].ID = id
		-- elseif player(id,"exists")==false then
		-- PING[id].LATENCY= 0
		-- PING[id].ID = 0
		-- PING[id].HACK = 0
		-- end
	-- end
-- end

-- addhook("startround","New_startround")
-- function New_startround()
-- freetimer()
-- timer(1000,"parse","lua HACK_SPEED=0")
-- parse("mp_hud 123")
	-- for _,id in pairs(player(0,"tableliving")) do
	-- parse("speedmod "..id.." 0")
	-- timer(PING[id].LATENCY,"parse","speedmod "..PING[id].ID.." -100")
	-- timer(Freezetime*1000,"UNFREEZE")
		-- function UNFREEZE()
			-- for _,id in pairs(player(0,"tableliving")) do
			-- parse("speedmod "..id.." 0")
			-- end
		-- parse("sv_sound \"Radio/"..Radio[math.random(1,#Radio)]..".ogg\"")
		-- HACK_SPEED=0
		-- parse("mp_hud 127")
		-- end
	-- end
-- timer(500,"parse","lua HACK_SPEED=1")
-- end

-- addhook("move","New_move")
-- function New_move(id,x,y,m)
	-- if HACK_SPEED==1 then
		-- if PING[id].HACK == 0 then
		-- msg("\169230230230[\169191040040WARNING\169230230230]:\169219199119 "..player(id,"name").." is using speed hack!")
		-- parse("killplayer "..id)
		-- elseif PING[id].HACK>1 then
		-- msg(player(id,"name").." has been kicked ( reason : speed hack )")
		-- parse("kick "..id.." \"SPEED HACKER\"")
		-- end
	-- PING[id].HACK=PING[id].HACK+1
	-- end
-- end
--=======================================================================--

--[[
	
	14th. Weapon scanner
	This script functioning by using "playerweapons" ( eg. - print(playerweapons(1)[1] == 50 )
	However even if first weapon is not knife, it doesn't make alter. :(

--]] 
-- addhook("movetile","_scanner")
-- function _scanner(id,x,y)
	-- if entity(x,y,"name")=="scanner" then
		-- if #playerweapons(id)>1 then
			-- for _,Weapon in pairs(playerweapons(id)) do
				-- if (Weapon~=50) then
				-- parse("trigger alarm")
				-- end
			-- end
			-- return true
		-- else
		-- parse("trigger clean")
		-- return false
		-- end
	-- end
-- end
--=======================================================================--
--[[
	
	15th. Parse test
	Wanted to block restarting.

--]] 
-- addhook("parse","p")
-- function p(c)
	-- if c:sub(1,7)=="restart" then
	-- msg("FuCK YOU!")
	-- return 2
	-- end
-- end
--=======================================================================--
--[[
	
	16th. Advanced unbuyable
	Add menu for choose unbuyable things.

--]] 
-- Unbuyable = "Tactical Shield,"

-- WEAPONS = 
-- {
	-- HANDGUN = {1,2,3,4,5,6,7},
	-- SHOTGUN = {10,11,7,7,7,7},
	-- SUBMACHINEGUN = {20,21,22,23,24,7},
	-- RIFLE = {30,31,32,33,38,39},
	-- SNIPER_RIFLE = {34,35,36,37,7,7},
	-- EQUIPMENT={57,58,52,51,53,56,59,41,54},
	-- TITLE = {"Select unbuyable - "}
	
-- }


-- addhook("serveraction","sva")
-- function sva(id,b)
	-- if b==1 then
	-- UNBUYABLE_MENU(id)
	-- end
-- end

-- function UNBUYABLE_MENU(id)
-- M = WEAPONS.TITLE[1].."Handgun"
	-- for _,h in pairs(WEAPONS.HANDGUN) do
		-- if (h~=6) then
			-- if #itemtype(h,"name")>1 then
				-- if Unbuyable:match(""..itemtype(h,"name").."") then
				-- M = M..",("..itemtype(h,"name")..")"
				-- else
				-- M = M..","..itemtype(h,"name")
				-- end
			-- end
		-- else
			-- if #itemtype(h,"name")>1 then
				-- if Unbuyable:match("fn57") then
				-- M = M..",("..itemtype(h,"name")..")"
				-- else
				-- M = M..","..itemtype(h,"name")
				-- end
			-- end
		-- end
	-- end
-- menu(id,M..",,Remove all,Next")
-- end

-- function UNBUYABLE_MENU2(id)
-- M = WEAPONS.TITLE[1].."Shotgun"
	-- for _,s in pairs(WEAPONS.SHOTGUN) do
		-- if #itemtype(s,"name")>1 then
			-- if Unbuyable:match(""..itemtype(s,"name").."") then
			-- M = M..",("..itemtype(s,"name")..")"
			-- else
			-- M = M..","..itemtype(s,"name")
			-- end
		-- end
	-- end
-- menu(id,M..",,,,,Remove all,Previous,Next")
-- end

-- function UNBUYABLE_MENU3(id)
-- M = WEAPONS.TITLE[1].."Sub-machinegun"
	-- for _,sb in pairs(WEAPONS.SUBMACHINEGUN) do
		-- if #itemtype(sb,"name")>1 then
			-- if Unbuyable:match(""..itemtype(sb,"name").."") then
			-- M = M..",("..itemtype(sb,"name")..")"
			-- else
			-- M = M..","..itemtype(sb,"name")
			-- end
		-- end
	-- end
-- menu(id,M..",,Remove all,Previous,Next")
-- end

-- function UNBUYABLE_MENU4(id)
-- M = WEAPONS.TITLE[1].."Rifle"
	-- if Unbuyable:match("ak47") then
	-- M = M..",("..itemtype(30,"name")..")"
	-- else
	-- M = M..","..itemtype(30,"name")
	-- end
	-- for _,rf in pairs(WEAPONS.RIFLE) do
		-- if rf~=39 then
			-- if rf ~= 30 then
				-- if #itemtype(rf,"name")>1 then
					-- if Unbuyable:match(""..itemtype(rf,"name").."") then
					-- M = M..",("..itemtype(rf,"name")..")"
					-- else
					-- M = M..","..itemtype(rf,"name")
					-- end
				-- end
			-- end
		-- elseif rf==39 then
			-- if Unbuyable:match("famas") then
			-- M = M..",("..itemtype(rf,"name")..")"
			-- else
			-- M = M..","..itemtype(rf,"name")
			-- end
		-- end
	-- end
-- menu(id,M..",Remove all,Previous,Next")
-- end

-- function UNBUYABLE_MENU4_1(id)
-- M = WEAPONS.TITLE[1].."Sniper Rifle"
	-- for _,sni in pairs(WEAPONS.SNIPER_RIFLE) do
		-- if #itemtype(sni,"name")>1 then
			-- if Unbuyable:match(""..itemtype(sni,"name").."") then
			-- M = M..",("..itemtype(sni,"name")..")"
			-- else
			-- M = M..","..itemtype(sni,"name")
			-- end
		-- end
	-- end
-- menu(id,M..",,,Remove all,Previous,Next")
-- end

-- function UNBUYABLE_MENU5(id)
-- M = WEAPONS.TITLE[1].."Machine-gun"
	-- if Unbuyable:match("M249") then
	-- M = M..",(M249)"
	-- else
	-- M = M..",M249"
	-- end
-- menu(id,M..",,,,,,Remove all,Previous,Next")
-- end

-- function UNBUYABLE_MENU6(id)
-- M = WEAPONS.TITLE[1].."Equipment"
	-- for _,e in pairs(WEAPONS.EQUIPMENT) do
		-- if #itemtype(e,"name")>1 then
			-- if Unbuyable:match(""..itemtype(e,"name").."") then
			-- M = M..",("..itemtype(e,"name")..")"
			-- else
			-- M = M..","..itemtype(e,"name")
			-- end
		-- end
	-- end
-- menu(id,M)
-- end

-- function RESET()
-- Unbuyable=""
-- parse("mp_unbuyable ")
-- end

-- function nob()
-- parse("mp_unbuyable \""..Unbuyable.."\"")
-- end
-- addhook("menu","d")
-- function d(id,t,b)
	-- if t==WEAPONS.TITLE[1].."Handgun" then
		-- if b==6 then
		-- Unbuyable=Unbuyable..",five-seven,fn57";UNBUYABLE_MENU(id)
		-- nob()
		-- elseif b==8 then
		-- RESET()
		-- elseif b==9 then
		-- UNBUYABLE_MENU2(id)
		-- elseif b==0 then
		-- else
		-- Unbuyable = Unbuyable..","..itemtype(b,"name")
		-- nob()
		-- UNBUYABLE_MENU(id)
		-- end
	-- elseif t==WEAPONS.TITLE[1].."Shotgun" then
		-- if b==7 then
		-- RESET()
		-- elseif b==8 then
		-- UNBUYABLE_MENU(id)
		-- elseif b==9 then
		-- UNBUYABLE_MENU3(id);elseif b==0 then
		-- else
		-- Unbuyable = Unbuyable..","..itemtype(b+9,"name")
		-- nob()
		-- UNBUYABLE_MENU2(id)
		-- end
	-- elseif t==WEAPONS.TITLE[1].."Sub-machinegun" then
		-- if b==7 then
		-- RESET()
		-- elseif b==8 then
		-- UNBUYABLE_MENU2(id)
		-- elseif b==9 then
		-- UNBUYABLE_MENU4(id);elseif b==0 then
		-- else
		-- Unbuyable = Unbuyable..","..itemtype(b+19,"name")
		-- nob()
		-- UNBUYABLE_MENU3(id)
		-- end
	-- elseif t==WEAPONS.TITLE[1].."Rifle" then
		-- if b==1 then
		-- Unbuyable=Unbuyable..",ak47,"..itemtype(b+29,"name");UNBUYABLE_MENU4(id);nob()
		-- elseif b==5 then
		-- Unbuyable=Unbuyable..",Galil";UNBUYABLE_MENU4(id);nob()
		-- elseif b==6 then
		-- Unbuyable=Unbuyable..",famas,"..itemtype(39,"name");UNBUYABLE_MENU4(id);nob()
		-- elseif b==7 then
		-- RESET()
		-- elseif b==8 then
		-- UNBUYABLE_MENU3(id)
		-- elseif b==9 then
		-- UNBUYABLE_MENU4_1(id);elseif b==0 then
		-- else
		-- Unbuyable = Unbuyable..","..itemtype(b+29,"name")
		-- nob()
		-- UNBUYABLE_MENU4(id)
		-- end
	-- elseif t==WEAPONS.TITLE[1].."Sniper Rifle" then
		-- if b==7 then
		-- RESET()
		-- elseif b==8 then
		-- UNBUYABLE_MENU4(id)
		-- elseif b==9 then
		-- UNBUYABLE_MENU5(id);elseif b==0 then
		-- else
		-- Unbuyable = Unbuyable..","..itemtype(b+33,"name")
		-- nob()
		-- UNBUYABLE_MENU4_1(id)
		-- end
	-- elseif t==WEAPONS.TITLE[1].."Machine-gun" then
		-- if b==1 then
		-- Unbuyable = Unbuyable..",M249"
		-- nob()
		-- UNBUYABLE_MENU5(id)
		-- elseif b==7 then
		-- RESET()
		-- elseif b==8 then
		-- UNBUYABLE_MENU4_1(id)
		-- elseif b==9 then
		-- UNBUYABLE_MENU6(id);elseif b==0 then
		-- end
	-- elseif t==WEAPONS.TITLE[1].."Equipment" then
		-- if b==2 then
		-- Unbuyable = Unbuyable..",vesthelm,Kevlar+Helm";UNBUYABLE_MENU6(id);nob()
		-- elseif b==0 then
		-- else
		-- Unbuyable = Unbuyable..","..itemtype(WEAPONS.EQUIPMENT[b],"name")
		-- nob()
		-- UNBUYABLE_MENU6(id)
		-- end
	-- end
-- end
--=======================================================================--
--[[
	
	17th. IN-GAME Map editor 
	This was really god damn hard to make.
	now trying to make sprite entity.

--]] 

-- [[z=true
-- abc ={}
-- if z==true then
-- table.insert(abc,#abc+1,{x=pl[id].X*32+16,y=pl[id].Y*32+16,i=image("gfx/sprites/block.bmp",pl[id].X*32+16,pl[id].Y*32+16,1)})
-- imagealpha(abc[#abc].i,0.1)
-- imagecolor(abc[#abc].i,0,0,0)
-- else
	-- for i = 1,#abc do
		-- if pl[id].X*32+16 == abc[i].x and pl[id].Y*32+16 == abc[i].y then
		-- freeimage(abc[i].i)
		-- end
	-- end
-- ]]--end

-- function VAR()
-- pl = {}
-- tilenum = {}

-- TILE = 0
-- MAX_TILE = map("tilecount")
-- OX=0;OY=0;RX=0;RY=0;
-- RESET=false;ORIGINAL_RESET=false
	-- for id = 1,32 do
	-- tilenum[id] = 0
	-- pl[id] =
	-- {
	-- INPUT_TILE = false,
	-- X=0,
	-- Y=0,

		-- MAP = 
		-- {	
			-- EFFECT_IMAGE = image("gfx/sprites/block.bmp",510,30,2,id),
			-- INFO_IMAGE = image("gfx/Oops321/misc/Info_tile.png<n>",510,40,2,id),
			-- TILE_IMAGE = image('<tile:'..tilenum[id]..'>',494,14,2,id),
			-- tile_editor = false,
			-- REVERSE = false,
			-- entity=false,
			-- REPLACE = true,
			-- GETTILE = false,
			-- ERASE = false,
		-- },
		-- ENTITY = 
		-- {
			-- PATH = 
			-- {
				-- "gfx/sprites/block.bmp",
				-- "gfx/sprites/stream1.bmp",
				-- "gfx/sprites/stream2.bmp",
				-- "gfx/sprites/flare1.bmp",
				-- "gfx/sprites/flare2.bmp",
				-- "gfx/sprites/flare3.bmp",
				-- "gfx/sprites/flare4.bmp",
				-- "gfx/sprites/tree02.bmp",
				-- "gfx/sprites/tree03.bmp",
				-- "gfx/sprites/truck.bmp",
			-- },
			-- INFO_IMAGE = image("gfx/Oops321/misc/Info_tile.png<n>",510,40,2,id),
		-- }
			
	-- }
	-- imagealpha(pl[id].ENTITY.INFO_IMAGE,0.0)
	-- imagealpha(pl[id].MAP.INFO_IMAGE,0.0)
	-- imagealpha(pl[id].MAP.TILE_IMAGE,0.0)
	-- imagealpha(pl[id].MAP.EFFECT_IMAGE,0.0)
	-- parse("hudtxt2 "..id.." 30 \"\169255220000#F: "..tilenum[id].."\" -482 55 0")
	-- parse("hudtxt2 "..id.." 31 \"\169180025025<\" -478 25 0")
	-- parse("hudtxt2 "..id.." 32 \"\169050225050>\" -533 25 0")
		-- for i = 30,40 do
		-- parse("hudtxtalphafade 0 "..i.." 1 0.0")
		-- end
	-- timer(150,"hudmove")
	-- end
-- end

-- VAR()

-- TEXT =
-- {
	-- "\169230230230[\169129209147Server\169230230230]:\169219199119 ",
	-- "\169230230230[\169191040040ERROR\169230230230] :\169219199119 ",
	-- "\169230230230[\169230170100Help\169230230230] :\169219199119 ",
-- }


-- Ÿ�� functions------
-- function hudmove() -- �������̱�
-- parse("hudtxtmove 0 30 1 482 55")
-- parse("hudtxtmove 0 31 1 478 25")
-- parse("hudtxtmove 0 32 1 533 25")
-- end

-- function CONDITION_TILE(id) -- �÷��̾�.Ÿ�� ����￿üũ
-- local M = "Tiles";
	-- if ( pl[id].MAP.tile_editor == true ) then
	-- M = M..",(Enable),Disable"
	-- else
	-- M = M..",Enable,(Disable)"
	-- end
-- menu(id,M)
-- end

-- function HUD_TRUE(id) -- ��￿��
-- tween_alpha(pl[id].MAP.INFO_IMAGE,1000,0.8)
-- tween_alpha(pl[id].MAP.TILE_IMAGE,1000,1.0)
	-- for i=30,32 do
	-- parse("hudtxtalphafade "..id.." "..i.." 1000 0.7")
	-- end
-- end

-- function HUD_FALSE(id) -- ��￿����
-- tween_alpha(pl[id].MAP.INFO_IMAGE,1000,0.0)
-- tween_alpha(pl[id].MAP.TILE_IMAGE,1000,0.0)
	-- for i=30,32 do
	-- parse("hudtxtalphafade "..id.." "..i.." 1000 0.0")
	-- end
-- end

-- function FORCE_STOP()
	-- if ( ORIGINAL_RESET == true ) then
	-- ORIGINAL_RESET=false
	-- end
	-- if ( RESET == true ) then
	-- RESET = false
	-- end
-- msg(TEXT[1].."Force to stopping replacing tiles..")
-- end

-- function TILE_REPLACE() -- Ÿ�� �ڵ� �Ųٱ�￿
	-- if ( ORIGINAL_RESET == true ) then
	-- local origin = tile(OX,OY,"originalframe")
	-- parse("settile "..OX.." "..OY.." "..origin)
	-- OX=OX+1
		-- if ( OX == map("xsize")+1 ) then
		-- OX=0
		-- OY=OY+1
		-- end
		-- if ( OY == map("ysize")+1 ) then
		-- OX=0;OY=0
		-- ORIGINAL_RESET=false
		-- msg(TEXT[1].."Replacing has been finished.")
		-- end
	-- timer(1,"TILE_REPLACE")
	-- end
	-- if ( RESET == true ) then
	-- parse("settile "..RX.." "..RY.." "..TILE)
	-- RX=RX+1
		-- if ( RX == map("xsize")+1 ) then
		-- RX=0
		-- RY=RY+1
		-- end
		-- if ( RY == map("ysize")+1 ) then
		-- RX=0;RY=0
		-- RESET=false
		-- msg(TEXT[1].."Replacing has been finished.")
		-- end
	-- timer(1,"TILE_REPLACE")
	-- end
-- end

-- function NEXT_TILE(id) -- Ÿ�� �̹��� 
-- freeimage(pl[id].MAP.EFFECT_IMAGE)
-- freeimage(pl[id].MAP.TILE_IMAGE)
-- pl[id].MAP.TILE_IMAGE = image('<tile:'..tilenum[id]..'>',494,14,2,id)
-- pl[id].MAP.EFFECT_IMAGE = image("gfx/sprites/block.bmp",510,30,2,id)
-- parse("hudtxt2 "..id.." 30 \"\169255220000#F: \169160220120"..tilenum[id].."\" 482 55 0")
-- parse("hudtxtalphafade "..id.." 30 1 0.7")
-- parse("hudtxtcolorfade "..id.." 30 700 210 210 210")
-- imagealpha(pl[id].MAP.EFFECT_IMAGE,0.9)
-- tween_alpha(pl[id].MAP.EFFECT_IMAGE,250,0.0)
	-- if ( pl[id].MAP.REVERSE == false ) then
	-- parse("hudtxt2 "..id.." 32 \"\169190255190>\" 533 25 0")
	-- parse("hudtxtcolorfade "..id.." 32 700 50 225 50")
	-- else
	-- parse("hudtxt2 "..id.." 31 \"\169190255190<\" 478 25 0")
	-- parse("hudtxtcolorfade "..id.." 31 700 50 225 50")
	-- end
-- end

-- function MAP_MENU(id) -- �ʸ޴�
-- local M = "Map editor"
	-- if ( pl[id].MAP.tile_editor == true ) then
	-- M = M..",Tiles|ON"
	-- else
	-- M = M..",Tiles|OFF"
	-- end
	-- if ( pl[id].MAP.entity == true ) then
	-- M = M..",Entity|ON"
	-- else
	-- M = M..",Entity|OFF"
	-- end
	-- if ( RESET == false or ORIGINAL_RESET == false) then
	-- M = M..",Replace all tiles on map"
	-- else
	-- M = M..",(Replace all tiles on map)"
	-- end
	-- if ( RESET == true or ORIGINAL_RESET == true) then
	-- M = M..",Force to stop replacing"
	-- else
	-- M = M..",(Force to stop replacing)"
	-- end
-- menu(id,M)
-- end

-- function REPLACE(id)
-- local m = "Replace"
	-- if ( RESET == false ) then
	-- m = m..",Start,Change tile"
	-- else
	-- m = m..",(Start),Change tile"
	-- end
-- menu(id,m)
-- end

-- function RESET_CONFIG(id) -- ���� ����
-- pl[id].MAP.REPLACE = false
-- pl[id].MAP.GETTILE = false
-- pl[id].MAP.ERASE = false
-- end
--------
-- function ENTITY_HUD_TRUE(id)
-- tween_alpha(pl[id].ENTITY.INFO_IMAGE,1000,0.8)
-- end

-- function ENTITY_HUD_FALSE(id)
-- tween_alpha(pl[id].ENTITY.INFO_IMAGE,1000,0.0)
-- end
-- function CONDITION_ENTITY(id) -- �÷��̾�.��ƼƼ ����￿üũ
-- local M = "Entities";
	-- if ( pl[id].MAP.entity == true ) then
	-- M = M..",(Enable),Disable"
	-- else
	-- M = M..",Enable,(Disable)"
	-- end
-- menu(id,M)
-- end

-- addhook("always","_always")
-- function _always()
-- reqcld(0,2)
-- end

-- addhook("serveraction","_serveraction")
-- function _serveraction(id,b)
	-- if (b==1) then
	-- MAP_MENU(id)
	-- elseif (b==3) then
		-- if ( pl[id].MAP.tile_editor == true ) then 
		-- menu(id,"Tile_configuration,Replace tile,Get tile,Erase tile")
		-- end
	-- end
-- end

-- addhook("startround","_startround")
-- function _startround()
	-- for id = 1,32 do
	-- parse("hudtxt2 "..id.." 30 \"\169255220000#F: "..tilenum[id].."\" -482 55 0")
		-- for i = 30,32 do
		-- parse("hudtxtalphafade 0 "..i.." 1 0.0")
		-- end
	-- timer(150,"parse","hudtxtmove 0 30 1 482 55")
	-- pl[id].MAP.INFO_IMAGE = image("gfx/Oops321/misc/Info_tile.png<n>",510,40,2,id)
	-- pl[id].MAP.EFFECT_IMAGE = image("gfx/sprites/block.bmp",510,30,2,id)
	-- imagealpha(pl[id].MAP.INFO_IMAGE,0.0)
	-- imagealpha(pl[id].MAP.EFFECT_IMAGE,0.0)
	-- end
-- VAR()
-- end

-- addhook("attack2","_attack2")
-- function _attack2(id)
	-- if ( pl[id].MAP.tile_editor == true ) then
		-- if ( pl[id].MAP.REVERSE == false ) then
		-- pl[id].MAP.REVERSE = true
		-- parse("hudtxtcolorfade "..id.." 32 1 180 25 25")
		-- parse("hudtxtcolorfade "..id.." 31 1 50 225	50")
		-- else
		-- pl[id].MAP.REVERSE = false
		-- parse("hudtxtcolorfade "..id.." 31 1 180 25 25")
		-- parse("hudtxtcolorfade "..id.." 32 1 50 225	50")
		-- end
	-- end
-- end

-- addhook("clientdata","_client")
-- function _client(id,m,x,y)
	-- if m==2 then
	-- pl[id].X=math.floor(x/32)
	-- pl[id].Y=math.floor(y/32)
	-- end
-- end


-- addhook("attack","_attack")
-- function _attack(id)
	-- if ( pl[id].MAP.tile_editor == true ) then
		-- if ( pl[id].MAP.REPLACE == true ) then
		-- parse("settile "..pl[id].X.." "..pl[id].Y.." "..tilenum[id])
		-- elseif ( pl[id].MAP.GETTILE == true ) then
		-- tmpframe=tile(pl[id].X,pl[id].Y,"frame")
			-- if tmpframe>=0 then
			-- tilenum[id] = tmpframe
			-- NEXT_TILE(id)
			-- end
		-- elseif ( pl[id].MAP.ERASE == true ) then
		-- local original = tile(pl[id].X,pl[id].Y,"originalframe")
		-- parse("settile "..pl[id].X.." "..pl[id].Y.." "..original)
		-- end
	-- end
-- end

-- addhook("flashlight","_flashlight")
-- function _flashlight(id,s)
	-- if ( pl[id].MAP.tile_editor == true ) then
		-- if ( pl[id].MAP.REVERSE == false ) then
		-- tilenum[id]=tilenum[id]+1
			-- if ( tilenum[id] == MAX_TILE+1 ) then
			-- tilenum[id]=0
			-- NEXT_TILE(id)
			-- else
			-- NEXT_TILE(id)
			-- end
		-- else
		-- tilenum[id]=tilenum[id]-1
			-- if ( tilenum[id] < 0 ) then
			-- tilenum[id]=MAX_TILE
			-- NEXT_TILE(id)
			-- else
			-- NEXT_TILE(id)
			-- end
		-- end
	-- end
-- end

-- addhook("menu","_menu")
-- function _menu(id,t,b)
	-- if ( t == "Map editor") then
		-- if ( b == 1 ) then
		-- CONDITION_TILE(id)
		-- elseif ( b == 2 ) then
		-- CONDITION_ENTITY(id)
		-- elseif ( b == 3 ) then
		-- REPLACE(id)
		-- elseif ( b== 4 ) then
		-- FORCE_STOP()
		-- end
	-- elseif ( t == "Tile_configuration" ) then
	-- RESET_CONFIG(id)
		-- if ( b == 1 ) then
		-- pl[id].MAP.REPLACE = true
		-- elseif ( b == 2 ) then
		-- pl[id].MAP.GETTILE = true
		-- elseif ( b == 3 ) then
		-- pl[id].MAP.ERASE = true
		-- end
	-- elseif ( t == "Replace" ) then
		-- if ( b == 1 ) then
		-- menu(id,"Replace option,Fill with tile number : "..TILE.."?..,Return the original tiles..?")
		-- elseif ( b == 2 ) then
			-- if ( pl[id].INPUT_TILE == false ) then
			-- pl[id].INPUT_TILE = true
			-- msg2(id,TEXT[1].."Please input the tile number (0~"..MAX_TILE..")")
			-- else
			-- msg2(id,TEXT[2].."You are already doing that!")
			-- end
		-- end
	-- elseif ( t == "Replace option" ) then
		-- if ( b == 1 ) then
		-- RESET=true;timer(5,"TILE_REPLACE")
		-- msg(TEXT[1].."Replacing whole tile to "..TILE.."...")
		-- elseif ( b == 2 ) then
		-- ORIGINAL_RESET = true;timer(5,"TILE_REPLACE")
		-- msg(TEXT[1].."Returning whole tiles..")
		-- end
	-- elseif ( t == "Tiles" ) then
		-- if ( b == 1 ) then
		-- pl[id].MAP.tile_editor = true
		-- HUD_TRUE(id)
		-- parse("equip "..id.." 85")
		-- msg2(id,TEXT[3].."Press [F] button to change tile.")
		-- msg2(id,TEXT[3].."Press [F4] button to open tile configuration.")
		-- msg2(id,TEXT[3].."Use Right-mouse(Knife) to reverse the select.")
		-- msg2(id,TEXT[3].."Use Left-mouse to set tile.")
		-- ENTITY_HUD_FALSE(id)
			-- if (pl[id].MAP.entity == true ) then
			-- pl[id].MAP.entity = false
			-- end
		-- else
		-- pl[id].MAP.tile_editor = false
		-- HUD_FALSE(id)
		-- end
	-- elseif ( t == "Entities" ) then
		-- if ( b == 1 ) then
		-- pl[id].MAP.entity = true
		-- ENTITY_HUD_TRUE(id)
			-- if (pl[id].MAP.tile_editor == true ) then
			-- pl[id].MAP.tile_editor = false
			-- HUD_FALSE(id)
			-- end
		-- else
		-- pl[id].MAP.entity = false
		-- ENTITY_HUD_FALSE(id)
		-- end
	-- end
-- end

-- addhook("say","_say")
-- function _say(id,t)
	-- if ( pl[id].INPUT_TILE == true ) then
	-- local Num = t:sub(1)
		-- if type(tonumber(Num))=="number" then
			-- if tonumber(Num)<MAX_TILE+1 then
			-- TILE = Num
			-- msg2(id,TEXT[1].."You've successfully changed tile number!")
			-- pl[id].INPUT_TILE = false
			-- else
			-- msg2(id,TEXT[2].."Number must be lower than "..MAX_TILE.."!")
			-- end
		-- else
		-- msg2(id,TEXT[2].."Numbers only!")
		-- end
	-- return 1
	-- end
-- end
--=======================================================================--
--[[
	
	18th. CSGO Game sounds
	
--]] 

-- parse("mp_freezetime 5")
-- parse("spawnitem 55 8 8")

-- CSGO = "Oops321/CS-GO/"

-- pl = {}
-- function CSGO_VAR()
-- CSGO2D_VAR = 
-- {
	-- BOMB_PLANTED = false,
	-- BOMB_TIMER = game("mp_c4timer"),
	
	-- BOMB_X = 0,
	-- BOMB_Y = 0,
	
	-- ROUNDTIME = ((game("mp_roundtime")*60)+game("mp_freezetime")),
	-- FREEZETIME = game("mp_freezetime"),
	-- RANDOM_START_MUSIC = math.random(1,4)
-- }
-- end

-- END_MODE = 
-- {
	-- T  = {1,10,20,30,40,50,60},
	-- CT = {2,11,21,22,31,41,51,61},
-- }

-- CSGO_SOUNDS =
-- {
	-- START =
	-- {
		-- READY = 
		-- {
			-- "music/valve_csgo_02/startround_01.ogg",
			-- "music/valve_csgo_02/startround_02.ogg",
			-- "music/valve_csgo_02/startround_03.ogg",
			-- "music/valve_csgo_02/startround_04.ogg",
		-- },
		-- ACTION =
		-- {
			-- "music/valve_csgo_02/startaction_01.ogg",
			-- "music/valve_csgo_01/startaction_01.ogg",
		-- },
	-- },
	-- BOMB = 
	-- {
		-- PLANTED =
		-- {
			-- "music/valve_csgo_02/bombplanted.ogg",
			-- "music/valve_csgo_01/bombplanted.ogg",
		-- },
		-- SECONDTIMER = 
		-- {
			-- "music/valve_csgo_02/bombtenseccount.ogg",
			-- "music/valve_csgo_01/bombtenseccount.ogg",
		-- },
	-- },
	-- END =
	-- {
		-- WIN = 
		-- {
			-- "music/valve_csgo_02/wonround.ogg",
			-- "music/valve_csgo_01/wonround.ogg",
		-- },
		-- LOSE = 
		-- {
			-- "music/valve_csgo_02/lostround.ogg",
			-- "music/valve_csgo_01/lostround.ogg",
		-- },
		-- SECONDTIMER =
		-- {
			-- "music/valve_csgo_02/roundtenseccount.ogg",
			-- "music/valve_csgo_01/roundtenseccount.ogg",
		-- },
	-- },
-- }

-- CSGO_VAR()

-- function sound3(file,x,y,radius) 
	-- for _, id in pairs(player(0,"table")) do
		-- if math.sqrt((x-player(id,"x"))^2 + (y-player(id,"y"))^2) < radius then
		-- parse("sv_sound2 "..id.." "..file)
		-- end
	-- end
-- end

-- function SOUND_ALLSTOP(id)
	-- if ( pl[id].MUSIC == 1 or  pl[id].MUSIC == 2 ) then
		-- for i = 1,4 do
		-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.READY[i].."\" "..id)
		-- end
	-- end
-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.READY[pl[id].MUSIC].."\" "..id)
-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.ACTION[pl[id].MUSIC].."\" "..id)
-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.BOMB.PLANTED[pl[id].MUSIC].."\" "..id)
-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.BOMB.SECONDTIMER[pl[id].MUSIC].."\" "..id)
-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.END.SECONDTIMER[pl[id].MUSIC].."\" "..id)
-- end

-- addhook("join","CSGO_join")
-- function CSGO_join(id)
-- pl[id] =
-- {
	-- PLANTING = 0,
	-- TEMP_C4 = 0,
	-- START_MOVE = 0,
	-- MUSIC = 1,
-- }
-- end

-- addhook("leave","CSGO_leave")
-- function CSGO_leave(id)
-- pl[id]=nil
-- end

-- addhook("always","CSGO_always")
-- function CSGO_always()
	-- for _,id in pairs(player(0,"table")) do
		-- if ( pl[id] == nil ) then
		-- CSGO_join(id)
		-- msg("DX")
		-- end
	-- end
	-- for _,id in pairs(player(0,"team1living")) do
		-- if ( player(id,"process")==1 ) then
			-- if ( pl[id].PLANTING == 0 ) then
			-- pl[id].PLANTING=1
			-- elseif ( pl[id].PLANTING == 1 )then
			-- parse("sv_soundpos \""..CSGO.."weapons/c4/c4_initiate.ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
			-- pl[id].PLANTING = 2
			-- end
		-- elseif not( player(id,"process")==1 ) then
			-- if ( pl[id].PLANTING>=1 ) then
			-- pl[id].PLANTING=0
			-- pl[id].TEMP_C4=0
			-- end
		-- end
	-- end
-- end

-- addhook("ms100","CSGO_ms100")
-- function CSGO_ms100()
	-- for _,id in pairs(player(0,"team1living")) do
		-- if ( pl[id].PLANTING == 2 ) then
		-- pl[id].TEMP_C4 = pl[id].TEMP_C4 + 1
			-- if ( pl[id].TEMP_C4 == 6 ) then 
			-- pl[id].PLANTING = 3
			-- end
		-- elseif ( pl[id].PLANTING == 3 ) then
		-- pl[id].TEMP_C4 = pl[id].TEMP_C4 + 1
			-- if ( ( pl[id].TEMP_C4%3 ) == 0 ) then
			-- local RAN = math.random(1,7)
			-- parse("sv_soundpos \""..CSGO.."weapons/c4/key_press"..RAN..".ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
			-- end
		-- end
	-- end
-- end

-- addhook("second","CSGO_second")
-- function CSGO_second()
	-- if ( CSGO2D_VAR.BOMB_PLANTED == true ) then
	-- CSGO2D_VAR.BOMB_TIMER = CSGO2D_VAR.BOMB_TIMER -1
		-- if ( CSGO2D_VAR.BOMB_TIMER == 9) then
			-- for _,id in pairs(player(0,"table")) do
			-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.BOMB.PLANTED[pl[id].MUSIC].."\" 0")
			-- parse("sv_sound2 "..id.." \""..CSGO..""..CSGO_SOUNDS.BOMB.SECONDTIMER[pl[id].MUSIC].."\"")
			-- end
		-- elseif ( CSGO2D_VAR.BOMB_TIMER == 2 ) then
		-- parse("sv_soundpos \""..CSGO.."weapons/c4/c4_arm.ogg\" \""..CSGO2D_VAR.BOMB_X.."\" \""..CSGO2D_VAR.BOMB_Y.."\"")
		-- end
	-- end
-- CSGO2D_VAR.ROUNDTIME = CSGO2D_VAR.ROUNDTIME-1
	-- if ( CSGO2D_VAR.ROUNDTIME == 10 ) then
		-- for _,id in pairs(player(0,"table")) do
		-- parse("sv_sound2 "..id.." \""..CSGO..""..CSGO_SOUNDS.END.SECONDTIMER[pl[id].MUSIC].."\"")
		-- end
	-- end
-- end

-- addhook("bombplant","CSGO_BOMBplant")
-- function CSGO_BOMBplant(id,x,y)
-- parse("sv_soundpos \""..CSGO.."weapons/c4/c4_plant.ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
	-- for _,aid in pairs(player(0,"table")) do
	-- SOUND_ALLSTOP(aid)
	-- parse("sv_sound2 "..aid.." \""..CSGO..""..CSGO_SOUNDS.BOMB.PLANTED[pl[aid].MUSIC].."\"")
	-- end
-- CSGO2D_VAR.BOMB_PLANTED = true
-- CSGO2D_VAR.BOMB_X = x*32+16
-- CSGO2D_VAR.BOMB_Y = y*32+16
-- end

-- addhook("bombexplode","CSGO_BOMBexp")
-- function CSGO_BOMBexp(id,x,y)
-- CSGO2D_VAR.BOMB_TIMER=game("mp_c4timer")
-- CSGO2D_VAR.BOMB_PLANTED=false
-- end

-- addhook("bombdefuse","CSGO_BOMBdefuse")
-- function CSGO_BOMBdefuse(id)
-- parse("sv_soundpos \"weapons/c4_disarm.wav\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
	-- for _,aid in pairs(player(0,"table")) do
	-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.BOMB.PLANTED[pl[aid].MUSIC].."\" 0")
	-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.BOMB.SECONDTIMER[pl[aid].MUSIC].."\" 0")
	-- end
-- end

-- addhook("startround","CSGO_startround")
-- function CSGO_startround()
-- CSGO_VAR()
	-- for _,id in pairs(player(0,"table")) do
	-- SOUND_ALLSTOP(id)
	-- pl[id].PLANTING = 0
	-- pl[id].TEMP_C4 = 0
	-- pl[id].START_MOVE = 0
		-- if ( pl[id].MUSIC == 1 or  pl[id].MUSIC == 2 ) then
		-- local A = math.random(1,2)
		-- pl[id].MUSIC = tonumber(A)
			-- for i = 1,4 do
			-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.READY[i].."\" "..id)
			-- end
		-- end
	-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.READY[pl[id].MUSIC+2].."\" "..id)
		-- if ( pl[id].MUSIC == 1 or  pl[id].MUSIC == 2 ) then
		-- CSGO2D_VAR.RANDOM_START_MUSIC = math.random(1,4)
		-- parse("sv_sound2 "..id.." \""..CSGO..""..CSGO_SOUNDS.START.READY[CSGO2D_VAR.RANDOM_START_MUSIC])
		-- elseif ( pl[id].MUSIC >= 3 ) then
		-- parse("sv_sound2 "..id.." \""..CSGO..""..CSGO_SOUNDS.START.READY[pl[id].MUSIC+2])
		-- end
	-- end
-- end



-- addhook("move","CSGO_move")
-- function CSGO_move(id,x,y,m)
	-- if ( CSGO2D_VAR.BOMB_PLANTED == false ) then
		-- if ( pl[id].START_MOVE == 64 ) then
			-- if ( pl[id].MUSIC >= 1 and  pl[id].MUSIC <= 2 ) then
				-- for i = 1,4 do
				-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.READY[i].."\" "..id)
				-- end
			-- elseif ( pl[id].MUSIC >= 3 ) then
			-- parse("sv_stopsound \""..CSGO..""..CSGO_SOUNDS.START.READY[pl[id].MUSIC].."\" "..id)
			-- end
		-- parse("sv_sound2 "..id.." \""..CSGO..""..CSGO_SOUNDS.START.ACTION[pl[id].MUSIC])
		-- end
	-- end
-- pl[id].START_MOVE = pl[id].START_MOVE+1
-- end

-- addhook("endround","CSGO_endround")
-- function CSGO_endround(mode)
	-- for _,id in pairs (player(0,"table")) do
	-- SOUND_ALLSTOP(id)
	-- end
	-- for _,m in pairs(END_MODE.T) do
		-- if ( m == mode ) then
			-- for _,t in pairs(player(0,"team1")) do
			-- parse("sv_sound2 "..t.." \""..CSGO..""..CSGO_SOUNDS.END.WIN[pl[t].MUSIC].."\"")
			-- end
			-- for _,ct in pairs(player(0,"team2")) do
			-- parse("sv_sound2 "..ct.." \""..CSGO..""..CSGO_SOUNDS.END.LOSE[pl[ct].MUSIC].."\"")
			-- end
		-- end
	-- end
	-- for _,m in pairs(END_MODE.CT) do
		-- if ( m == mode ) then
			-- for _,ct in pairs(player(0,"team2")) do
			-- parse("sv_sound2 "..ct.." \""..CSGO..""..CSGO_SOUNDS.END.WIN[pl[ct].MUSIC].."\"")
			-- end
			-- for _,t in pairs(player(0,"team1")) do
			-- parse("sv_sound2 "..t.." \""..CSGO..""..CSGO_SOUNDS.END.LOSE[pl[t].MUSIC].."\"")
			-- end
		-- end
	-- end
-- end

--=======================================================================--
--[[
	
	19th. IN-GAME login system.
	Great thing! but it would be nice if I have knowledge about io. things.

--]] 
-- pl = {}
-- for id = 1,32 do
-- pl[id] = 
-- {
	-- USGN = "0",
	-- NAME = "",
	-- PASSWORD = "",
	-- LOGIN = false,
	-- POWER = 0,
	-- FIRST = 0,
	-- REGISTER = 0,
	-- TEMPPASS = 0,
	-- PASSTIME = 0,
	-- LOGIN_USGN = 0
-- }
-- end

-- function stat(id)
-- msg("USGN : "..pl[id].USGN)
-- msg("NAME : "..pl[id].NAME)
-- msg("PASSWORD : "..pl[id].PASSWORD)
-- msg("POWER : "..pl[id].POWER)
-- msg("FIRST : "..pl[id].FIRST)
-- msg("REGISTER : "..pl[id].REGISTER)
-- end

-- function totable(t,match) -- �����̺�
	-- local cmd = {}
	-- if not match then match = "[^%s]+" end
	-- for word in string.gmatch(t, match) do
		-- table.insert(cmd, word)
	-- end 
	-- return cmd 
-- end

-- addhook("join","_join")
-- function _join(id)
-- local usgn = player(id,"usgn")
	-- if ( usgn > 0 ) then
	-- local file = io.open("sys/lua/TEST_save/"..usgn..".sav","r")
		-- if(file~=nil) then
			-- for line in io.lines("sys/lua/TEST_save/"..usgn..".sav","r") do
			-- local parses = totable(line)
				-- if (tonumber(parses[1])~=nil) then
				-- pl[id].POWER = tonumber(parses[1])
				-- pl[id].NAME = tostring(parses[2])
				-- pl[id].PASSWORD = tostring(parses[3])
				-- pl[id].FIRST = tonumber(parses[4])
				-- pl[id].REGISTER = tonumber(parses[5])
				-- end
			-- end
		-- end
	-- pl[id].LOGIN = true
	-- end
	-- if pl[id].FIRST == 0 then
	-- msg(player(id,"name").." is new at this server! welcome!")
	-- pl[id].FIRST = 1
	-- end
	-- if pl[id].NAME == "" then
	-- local name = player(id,"name")
		-- if string.find(name," ") then
		-- name = string.gsub(name," ","_")	
		-- pl[id].NAME = name
		-- else
		-- pl[id].NAME = name
		-- end
	-- end
-- pl[id].USGN = player(id,"usgn")
-- end

-- function save(id)
-- local usgn = player(id,"usgn")
	-- if (usgn > 0) then
	-- saves = pl[id].POWER.." "..pl[id].NAME.." "..pl[id].PASSWORD.." "..pl[id].FIRST.." "..pl[id].REGISTER
	-- file = assert(io.open("sys/lua/TEST_save/"..usgn..".sav","w"))
	-- file:write(saves)
	-- file:close()
	-- end
-- end

-- addhook("leave","_leave")
-- function _leave(id)
-- save(id)
-- end

-- addhook("say","_say")
-- function _say(id,txt)
	-- if txt=="!register" then
		-- if pl[id].REGISTER == 0 then
			-- if player(id,"usgn")>0 then
			-- msg2(id,"Please write your new password.")
			-- msg2(id,"Must be longer than 4, and shorter than 20")
			-- pl[id].REGISTER = 1
			-- else
			-- msg2(id,"Login pl0x")
			-- end
		-- end
	-- return 1
	-- end
	-- if pl[id].REGISTER == 1 then
	-- local pass = txt:sub(1)
		-- if (#pass>4 and #pass<=20) then
			-- if not string.find(tostring(pass)," ") then
			-- pl[id].PASSWORD=("\""..pass.."\"")
			-- msg2(id,"Password has set! You can login in-game without log in usgn.")
			-- msg2(id,"Please use \"!login <usgn>\" to login.")
			-- pl[id].REGISTER = 2 
			-- else
			-- msg2(id,"please don't use space")
			-- end
		-- end
	-- return 1
	-- end
	-- if string.lower(txt:sub(1,6))=="!login" then
	-- pl[id].LOGIN_USGN = txt:sub(8)
	-- msg(pl[id].LOGIN_USGN)
	-- local file = io.open("sys/lua/TEST_save/"..pl[id].LOGIN_USGN..".sav","r")
		-- if(file~=nil) then
			-- for line in io.lines("sys/lua/TEST_save/"..pl[id].LOGIN_USGN..".sav","r") do
			-- local parses = totable(line)
			-- pl[id].TEMPPASS = tostring(parses[3])
			-- end
		-- msg2(id,"Please write password now.")
		-- pl[id].PASSTIME = 1
		-- else
		-- msg2(id,"Could not found data.")
		-- end
	-- return 1
	-- end
	-- if pl[id].PASSTIME == 1 then
	-- local pw = txt:sub(1)
		-- if ("\""..pw.."\"") == tostring(pl[id].TEMPPASS) then
		-- local file = io.open("sys/lua/TEST_save/"..pl[id].LOGIN_USGN..".sav","r")
			-- for line in io.lines("sys/lua/TEST_save/"..pl[id].LOGIN_USGN..".sav","r") do
			-- local parses = totable(line)
			-- pl[id].POWER = tonumber(parses[1])
			-- pl[id].NAME = tostring(parses[2])
			-- pl[id].PASSWORD = tostring(parses[3])
			-- pl[id].FIRST = tonumber(parses[4])
			-- pl[id].REGISTER = tonumber(parses[5])
			-- end
		-- msg2(id,"You are successfully log on!")
		-- else
		-- msg2(id,"pw is wrong gg")
		-- end
	-- pl[id].PASSTIME = 0
	-- return 1
	-- end
-- end

--=======================================================================--
--[[
	
	20th.Random race script
	When you see particular direction. then you will move to there.

--]] 
-- pl = {}
-- for id = 1,32 do
-- pl[id]= 
-- {
-- x=0,
-- y=0,
-- ontile = false,
-- ontile2 = false
-- }
-- end
-- addhook("movetile","v")
-- function v(id,x,y)
	-- if tile(x,y,"frame")==15 then
	-- pl[id].x=player(id,"x")
	-- pl[id].y=player(id,"y")
	-- pl[id].ontile = true
	-- pl[id].ontile2 = false
	-- elseif tile(x,y,"frame")==32 then
	-- pl[id].x=player(id,"x")
	-- pl[id].y=player(id,"y")
	-- pl[id].ontile2 = true
	-- pl[id].ontile = false
	-- else
	-- pl[id].ontile = false
	-- pl[id].ontile2 = false
	-- end
-- end

-- addhook("always","_asd")
-- function _asd()
	-- for _,id in pairs(player(0,"tableliving")) do
		-- if pl[id].ontile == true then
		-- pl[id].y = pl[id].y+4
		-- parse("setpos "..id.." "..player(id,"x").." "..pl[id].y)
		-- end
		-- if pl[id].ontile2 == true then
		-- pl[id].x = pl[id].x+4
		-- parse("setpos "..id.." "..pl[id].x.." "..player(id,"y"))
		-- end
	-- end
-- end
--=======================================================================--
--[[
	
	21th. Server motd script
	Useless thing. maybe prevent people who is not good at English.

--]] 
-- TERM = 
-- {
	-- "Yes",
	-- "No",
	-- "I'm Gay",
	-- "I'm DC"
-- }

-- pl = {}
-- for id = 1,32 do
-- pl[id]=
-- {
	-- AGREE_BUTTON = 0,
	-- AGREEMENT=0,
	-- GAY = 0,
-- }
-- end

-- function TERM_menu(id)
-- local M = "Server terms@b,(Will you obey the regulations?),"
-- local R = math.random(5)
-- local G = math.random(5)
	-- while G == R do
	-- G = math.random(5)
	-- end
-- pl[id].AGREE_BUTTON=R
-- pl[id].GAY = G
	-- for i = 1,5 do
		-- if R==i then
		-- M=M..","..TERM[1]
		-- elseif G==i then
		-- M=M..","..TERM[3]
		-- else
		-- M=M..","..TERM[2]
		-- end
	-- end
	-- local RARE = math.random(1000)
	-- if RARE==1 then
	-- M=M..","..TERM[4]
	-- end
-- menu(id,M)
-- end

-- addhook("team","_team")
-- function _team(id,team)
	-- if pl[id].AGREEMENT==0 then
	-- TERM_menu(id)
	-- return 1
	-- else
	-- return 0
	-- end
-- end

-- addhook("menu","_menu")
-- function _menu(id,t,b)
	-- if t == "Server terms" then
		-- if b==pl[id].GAY+2 then
		-- msg(player(id,"name").." has coming out his homosexual")
		-- pl[id].AGREEMENT=1
		-- elseif b==pl[id].AGREE_BUTTON+2 then
		-- msg(player(id,"name").." has agreed.")
		-- pl[id].AGREEMENT=1
		-- elseif b==8 then
		-- msg2(id,"Fuck off.")
		-- TERM_menu(id)
		-- else
		-- TERM_menu(id)
		-- end
	-- end
-- end


--=======================================================================--
--[[
	
	22th. Advanced Radio script.
	Works like original CS games.

--]] 
-- MAP_RADIO_LOCATION = false
-- LOCATIONS = {}

-- for _,e in pairs(entitylist()) do
	-- if #entity(e.x,e.y,"trigger")>0 and entity(e.x,e.y,"typename")=="Info_NoBuildings" then
	-- local mx = entity(e.x,e.y,"int0")+e.x-1
	-- local my = entity(e.x,e.y,"int1")+e.y-1
	-- local pos = entity(e.x,e.y,"trigger")
	-- table.insert(LOCATIONS,{pos,e.x,mx,e.y,my})
	-- parse("triggerposition "..e.x.." "..e.y)
	-- MAP_RADIO_LOCATION = true
	-- end
-- end

-- function ar(s)
	-- local array={}
	-- for i = 1,s do
	-- array[i]=0
	-- end
-- return array
-- end

-- RP = "radio/"
-- loc = ar(32)
-- CHAT = ar(32)
-- radio_image = ar(32)
-- team_image = ar(32)

-- timer(50,"loop")
-- function loop()
	-- if MAP_RADIO_LOCATION == true then
		-- for _,id in pairs(player(0,"tableliving")) do
			-- if team_image[id] == 0 then
			-- team_image[id] = image("gfx/hud_chat_r.png",0,1,3)
			-- imageblend(team_image[id],1)
			-- imagealpha(team_image[id],0.0)
			-- imagecolor(team_image[id],0,255,0)
			-- end
			-- if radio_image[id] == 0 then
			-- radio_image[id] = image("gfx/hud_radio_r.png",0,1,3)
			-- imageblend(radio_image[id],1)
			-- imagealpha(radio_image[id],0.0)
			-- imagecolor(radio_image[id],0,255,0)
			-- end
		-- end
	-- timer(50,"loop")
	-- end
-- end

-- function RADIO_appear(id)
-- imagepos(radio_image[id],player(id,"x"),player(id,"y"),0)
-- imagealpha(radio_image[id],1.0)
-- tween_alpha(radio_image[id],1000,0.0)
-- tween_move(radio_image[id],1000,player(id,"x"),player(id,"y")-16)
-- end

-- function CHAT_appear(id)
-- imagepos(team_image[id],player(id,"x"),player(id,"y"),0)
-- imagealpha(team_image[id],1.0)
-- tween_alpha(team_image[id],1000,0.0)
-- tween_move(team_image[id],1000,player(id,"x"),player(id,"y")-16)
-- end
-- VAR_RADIO = 
-- {
	-- {0,"Affirmative!",RP.."affirm.ogg"},
	-- {1,"Need Backup!",RP.."backup.ogg"},
	-- {2,"Get out of there she's gonna blow!",RP.."blow.ogg"},
	-- {3,"Bomb has been defused!",RP.."bombdef.ogg"},
	-- {4,"Bomb has been planted!",RP.."bombpl.ogg"},
	-- {5,"Sector clear!",RP.."clear.ogg"},
	-- {6,"Cover me!",RP.."coverme.ogg"},
	-- {7,"Counter-Terrorists Win",RP.."ctwin.ogg"},
	-- {8,"Enemy down!",RP.."enemydown.ogg"},
	-- {9,"Enemy spotted!",RP.."enemys.ogg"},
	-- {10,"Team fall back!",RP.."fallback.ogg"},
	-- {11,"Taking fire, need assistance!",RP.."fireassis.ogg"},
	-- {12,"Fire in the hole!",RP.."fireinhole.ogg"},
	-- {13,"Follow me!",RP.."followme.ogg"},
	-- {14,"Get in position and wait for my go!",RP.."getinpos.ogg"},
	-- {15,"Go, go, go!",RP.."go.ogg"},
	-- {16,"Hostage down!",RP.."hosdown.ogg"},
	-- {17,"I'm in position!",RP.."inpos.ogg"},
	-- {18,"Okay, let's go!",RP.."letsgo.ogg"},
	-- {19,"Lock and load!",RP.."locknload.ogg"},
	-- {20,"Teammate down!",RP.."matedown.ogg"},
	-- {21,"Alright, let's move out!",RP.."moveout.ogg"},
	-- {22,"Negative!",RP.."negative.ogg"},
	-- {23,"Hold this position!",RP.."position.ogg"},
	-- {24,"Regroup team!",RP.."regroup.ogg"},
	-- {25,"Report in, team!",RP.."reportin.ogg"},
	-- {26,"Reporting in!",RP.."reportingin.ogg"},
	-- {27,"Hostage has been rescued!",RP.."rescued.ogg"},
	-- {28,"Roger that!",RP.."roger.ogg"},
	-- {29,"Round draw!",RP.."rounddraw.ogg"},
	-- {30,"Stick together team!",RP.."sticktog.ogg"},
	-- {31,"Storm the front!",RP.."stormfront.ogg"},
	-- {32,"You take the point!",RP.."takepoint.ogg"},
	-- {33,"Terrorists Win",RP.."terwin.ogg"},
	-- {34,"Protect the V.I.P. team!",RP.."vip.ogg"}
-- }
-- addhook("startround","NR_startround")
-- function NR_startround()
	-- for _,id in pairs(player(0,"tableliving")) do
	-- team_image[id]=0
	-- radio_image[id]=0
	-- end
-- end

-- addhook("movetile","NR_movetile")
-- function NR_movetile(id,x,y)
	-- if MAP_RADIO_LOCATION == true then
		-- for i = 1,#LOCATIONS do
			-- if (player(id,"tilex")>=LOCATIONS[i][2] and player(id,"tilex")<=LOCATIONS[i][3]) and (player(id,"tiley")>=LOCATIONS[i][4] and player(id,"tiley")<=LOCATIONS[i][5]) then
			-- loc[id] = LOCATIONS[i][1]
			-- break
			-- else
			-- loc[id]=0
			-- end
		-- end
	-- end
-- end

-- addhook("radio","NR_radio")
-- function NR_radio(id,MS)
	-- if MAP_RADIO_LOCATION == true then
		-- if loc[id]~=0 then
			-- for i = 1,#VAR_RADIO do
				-- if ( MS == VAR_RADIO[i][1] ) then
				-- local com = id
					-- if CHAT[com] == 0 and player(com,"health")>0 then
					-- CHAT[com] = 2
					-- RADIO_appear(com)
						-- if player(com,"team")>=2 then
							-- for _,ctid in pairs(player(0,"team2")) do
							-- msg2(ctid,"\169050150255"..player(com ,"name").." \169255220000@\169000255000"..loc[com].." \169255220000(Radio): "..VAR_RADIO[i][2])
							-- parse("sv_sound2 "..ctid.." \""..VAR_RADIO[i][3].."\"")
							-- end
						-- elseif player(com,"team")==1 then
							-- for _,tid in pairs(player(0,"team1")) do
							-- msg2(tid,"\169255020020"..player(com ,"name").." \169255220000@\169000255000"..loc[com].." \169255220000(Radio): "..VAR_RADIO[i][2])
							-- parse("sv_sound2 "..tid.." \""..VAR_RADIO[i][3].."\"")
							-- end
						-- end
					-- return 1
					-- else
					-- return 1
					-- end
				-- end
			-- end
		-- end
	-- end
-- end

-- addhook("sayteam","NR_sayteam")
-- function NR_sayteam(id,txt)
	-- if MAP_RADIO_LOCATION == true then
		-- if loc[id]~=0 then
			-- if player(id,"health")>0 then
				-- if CHAT[id] == 0 then
				-- CHAT[id]=1
				-- CHAT_appear(id)
					-- if player(id,"team")>=2 then
					-- local NEW_TEXT = txt:gsub("@C","?")
						-- for _,ctid in pairs(player(0,"team2")) do
						-- msg2(ctid,"\169050150255"..player(id ,"name").." \169255220000@\169000255000"..loc[id].." \169255220000(Team): "..NEW_TEXT)
						-- end
					-- elseif player(id,"team")==1 then
					-- local NEW_TEXT = txt:gsub("@C","?")
						-- for _,tid in pairs(player(0,"team1")) do
						-- msg2(tid,"\169255020020"..player(id ,"name").." \169255220000@\169000255000"..loc[id].." \169255220000(Team): "..NEW_TEXT)
						-- end
					-- end
				-- end
			-- return 1
			-- end
		-- end
	-- else
	-- return 0
	-- end
-- end

-- addhook("second","NR_second")
-- function NR_second()
	-- for _,id in pairs(player(0,"table")) do
		-- if CHAT[id] ~= 0 then
		-- CHAT[id] = CHAT[id]-1
		-- end
	-- end
-- end
--=======================================================================--
--[[

	23th.PC animation script.
	add animation for PC.
	made for o_unlock

--]]
-- addhook("trigger","PC_trigger")
-- function PC_trigger(trg,src)
	-- if ( trg == "LUA_trigger" ) then
		-- if ( PC_STATE == false ) then
		-- PC_STATE = true
		-- parse("trigger Sound")
		-- tween_color(PC_BLACK,1000,0,0,0)
		-- timer(1500,"PC_LOOP")
		-- else
		-- PC_STATE = false
		-- parse("trigger Sound2")
		-- timer(1000,"parse","lua tween_color(PC_BLACK,1000,0,0,0)")
		-- end
	-- end
-- end

-- addhook("startround","PC_startround")
-- function PC_startround()
	-- if ( PC_BLACK ~= nil )then
	-- freeimage(PC_BLACK)
	-- end
-- PC_BLACK = image("gfx/sprites/block.bmp",11*32+16,4*32+16,1)
-- imagecolor(PC_BLACK,0,0,0)
-- PC_STATE = false
-- end

-- function PC_LOOP()
-- tween_color(PC_BLACK,500,math.random(255),math.random(255),math.random(255))
	-- if ( PC_STATE == true ) then
	-- timer(1000,"PC_LOOP2")
	-- end
-- end

-- function PC_LOOP2()
-- tween_color(PC_BLACK,500,math.random(255),math.random(255),math.random(255))
	-- if ( PC_STATE == true ) then
	-- timer(1000,"PC_LOOP")
	-- end
-- end

-- PC_startround();

--=======================================================================--
--[[
	23th. stalker
	Use this script when you are lazy to follow your tester.
	
--]]
-- teleport = {}
-- teleport[1]=0
-- addhook("always","aw")
-- function aw()
	-- if teleport[1]==1 then
	-- parse("setpos 1 "..player(2,"x").." "..player(2,"y"))
	-- end
-- end
-- =======================================================================--
--[[
	24th player collision
	Tried to make player collision.

--]]
-- pl = {}
-- for id = 1,32 do
-- pl[id] =
-- {
	-- x=0,
	-- y=0,
-- }
-- end
-- addhook("move","_move")
-- function _move(id,x,y,m)
	-- for _,aid in ipairs(player(0,"tableliving")) do
		-- if ( id ~= aid ) and player(id,"team") ~= player(aid,"team") then
		-- if player(id,"tilex")>=player(aid,"tilex") and  player(id,"tilex")<=player(aid,"tilex") and  player(id,"tiley")>=player(aid,"tiley") and  player(id,"tiley")<=player(aid,"tiley") then
		-- parse("setpos "..id.." "..pl[id].x.." "..pl[id].y)
		-- end
		-- end
	-- end
-- pl[id].x = player(id,"x")
-- pl[id].y = player(id,"y")
-- end

-- addhook("always","_always")
-- function _always()
	-- for _,id in ipairs(player(0,"tableliving")) do
		-- for _,aid in ipairs(player(0,"tableliving")) do
			-- if ( id ~= aid ) and player(id,"team") ~= player(aid,"team") then
				-- if player(id,"tilex") == player(aid,"tilex") and player(id,"tiley") == player(aid,"tiley") then
				-- parse("setpos "..id.." "..(player(id,"x")-math.random(-16,16).." "..player(id,"y")-math.random(-16,16)))
				-- end
			-- end
		-- end
	-- end
-- end
--=======================================================================--
--[[
	25th. Useless sound stop
	Stop all sounds from cs2d.. but well it won't work so canceled.

--]]
-- SOUND =
-- {
	-- PL =
	-- {
		-- "build.wav",
		-- "die_abyss.wav",
		-- "die_toxic.wav",
		-- "die1.wav",
		-- "die2.wav",
		-- "die3.wav",
		-- "dominate.wav",
		-- "flashlight.wav",
		-- "hit1.wav",
		-- "hit2.wav",
		-- "hit3.wav",
		-- "pl_dirt1.wav",
		-- "pl_dirt2.wav",
		-- "pl_dirt3.wav",
		-- "pl_dirt4.wav",
		-- "pl_metal1.wav",
		-- "pl_metal2.wav",
		-- "pl_metal3.wav",
		-- "pl_metal4.wav",
	-- }
-- }

--=======================================================================--

--[[
	26th. Lottery
	
	Lottery for puzzle script!
	Still has lots of bug.
	
	BUG LIST =
	{
		
		Hudtext does not disappear correctly when other players playing.
		Timer goes slow sometimes.
	
	}

--]]
-- pl = {}
-- for id = 1,32 do
-- pl[id] = 
-- {
	-- STATE = false,
	-- IMAGE = image("gfx/Oops321/misc/gui_Lottery.png",320,48,2,id),
	-- BUTTON = image("gfx/Oops321/weapon/Puzzle/PuzzleCoin.png",321,62,2,id),
	-- BACKGROUND = image("gfx/sprites/block.bmp",321,35,2,id),
	-- RANDOM_LOOT = 0,
	-- RANDOM_ITEM = 0,
	-- RANDOM_ITEM2 = "",
	-- RANDOM_IMAGE = 0,
	-- LOOP = 50,
	
-- }
-- imagealpha(pl[id].IMAGE,0.0)
-- imagealpha(pl[id].BUTTON,0.0)
-- imagealpha(pl[id].BACKGROUND,0.0)
-- imagecolor(pl[id].BACKGROUND,0,0,0)
-- end

-- ITEMS = 
-- {
	-- { 
		-- NAME = "Flare",
		-- WEAPON = true,
		-- ID = 54,
		-- IMAGE = "gfx/weapons/flare.bmp<m>",
	-- },
	-- {
		-- NAME = "High Explosion",
		-- WEAPON = true,
		-- ID = 51,
		-- IMAGE = "gfx/weapons/he.bmp<m>",
	-- },
	-- {
		-- NAME = "Flash bang",
		-- WEAPON = true,
		-- ID = 52,
		-- IMAGE = "gfx/weapons/flashbang.bmp<m>",
	-- },
	-- {
		-- NAME = "Smoke grenade",
		-- WEAPON = true,
		-- ID = 53,
		-- IMAGE = "gfx/weapons/smokegrenade.bmp<m>",
	-- },
-- }


-- addhook("menu","_menu")
-- function _menu(id,t,b)
	-- if ( t == "LOL" ) then
		-- if ( b == 1 ) then
			-- if ( pl[id].STATE == false ) then
			-- tween_alpha(pl[id].IMAGE,1000,1.0)
			-- tween_alpha(pl[id].BUTTON,1000,1.0)
			-- pl[id].STATE = true			
			-- end
		-- end
	-- elseif ( t == "HA") then
		-- if ( b == 1 ) then
		-- LOTTERY_LOOP(id)
		-- imagealpha(pl[id].BACKGROUND,1.0)
		-- tween_alpha(pl[id].BUTTON,1000,0.0)
		-- parse("sv_sound2 "..id.." \"Oops321/effect/coin/Coin_toss01.ogg\"")
		-- elseif ( b == 2 ) then
		-- tween_alpha(pl[id].IMAGE,1000,0.0)
		-- tween_alpha(pl[id].BUTTON,1000,0.0)
		-- pl[id].STATE = false
		-- msg2(id,"What a coward dick.")
		-- end
	-- end
-- end


-- addhook("serveraction","_sva")
-- function _sva(id,b)
	-- if ( b == 1 ) then
		-- if ( pl[id].STATE == false ) then
		-- menu(id,"LOL,open lottery")
		-- else
		-- menu(id,"HA,Start!!!,NO!! I CHANGED MY MIND!!")
		-- end
	-- end
-- end

-- function SHOW_IMAGE()
	-- for _,id in ipairs(player(0,"table")) do
		-- if ( pl[id].STATE == true ) then
		-- freeimage(pl[id].RANDOM_ITEM)
		-- pl[id].RANDOM_ITEM = image(pl[id].RANDOM_IMAGE,321,35,2,id)
		-- end
	-- end
-- end

-- function LOTTERY_HUD()
	-- for _,id in ipairs(player(0,"table")) do
		-- if ( pl[id].STATE == true ) then
		-- parse("hudtxt2 "..id.." 1 \""..pl[id].RANDOM_ITEM2.."\" 320 70 1")
		-- parse("hudtxtalphafade "..id.." 1 1 0.7")
		-- end
	-- end
-- end

-- function LOTTERY_LOOP()
	-- for _,id in ipairs(player(0,"table")) do
		-- if ( pl[id].STATE == true ) then
		-- local ITEM_RANDOM = math.random(1,#ITEMS)
		-- pl[id].RANDOM_ITEM2 = ITEMS[ITEM_RANDOM].NAME
		-- pl[id].RANDOM_IMAGE = ITEMS[ITEM_RANDOM].IMAGE
		-- parse("sv_sound2 "..id.." \"player/flashlight.wav\"")
		-- SHOW_IMAGE()
		-- LOTTERY_HUD()
			-- if ( pl[id].LOOP <= 550 ) then
			-- msg("Loop timer : "..pl[id].LOOP)
			-- pl[id].LOOP = pl[id].LOOP + 10
				-- if ( pl[id].LOOP >= 550 ) then
				-- local LAST_RANDOM = math.random(1,#ITEMS)
					-- if ( ITEMS[LAST_RANDOM].WEAPON == true ) then
					-- pl[id].RANDOM_LOOT = ITEMS[LAST_RANDOM].ID
					-- end
				-- pl[id].RANDOM_IMAGE = ITEMS[LAST_RANDOM].IMAGE
				-- pl[id].RANDOM_ITEM2 = ITEMS[LAST_RANDOM].NAME
				-- SHOW_IMAGE()
				-- LOTTERY_HUD()
				-- tween_color(pl[id].BACKGROUND,1200,230,230,230)
				-- parse("sv_sound2 "..id.." \"player/dominate.wav\"")
				-- timer(2000,"GIVE_LOOT")
				-- else
				-- timer(pl[id].LOOP,"LOTTERY_LOOP")
				-- end
			-- elseif ( pl[id].LOOP >= 535 ) then
			-- parse("sv_sound2 "..id.." \"Oops321/effect/coin/Coin_toss02.ogg\"")
			-- end
		-- end
	-- end	
-- end

-- function GIVE_LOOT()
	-- for _,id in ipairs(player(0,"table")) do
		-- if ( pl[id].STATE == true ) then
		
		-- imagealpha(pl[id].IMAGE,0.0)
		-- imagealpha(pl[id].BUTTON,0.0)
		-- imagealpha(pl[id].BACKGROUND,0.0)
		-- imagecolor(pl[id].BACKGROUND,0,0,0)
		-- freeimage(pl[id].RANDOM_ITEM)
		
		-- pl[id].STATE = false
		-- pl[id].LOOP = 0
		-- parse("hudtxt2 "..id.." 1 \"\" 320 70 1")
			-- if ( pl[id].RANDOM_LOOT ~= 0 ) then
			-- parse("equip "..id.." "..pl[id].RANDOM_LOOT)
			-- pl[id].RANDOM_LOOT = 0
			-- parse("sv_sound2 "..id.." \"items/ammo.wav\"")
			-- else
			-- end
		-- end
	-- end
-- end

--=======================================================================--
--[[ 
	27th. Report system
	Super simple report system 
	
	This will just make stupid file for
	reports from players.
	Yeah, judgement is yours. 
	
]]--

-- addhook("say","_say")
-- function _say(id,txt)
	-- if ( txt:sub(1,7)=="!report" ) then
	-- local NUM = txt:sub(9,10)
	-- local REASON = txt:sub(11)
		-- if ( type(tonumber(NUM))=="number" ) then
			-- if ( #REASON > 1 ) then
				-- if ( player(NUM,"exists") == true ) then
				-- local file = io.open("REPORT.lua","a+")
				-- file:write("Reporter name : "..player(id,"name").."\nReporter IP : "..player(id,"ip").."\nReporter USGN : "..player(id,"usgn").."\nREASON : "..REASON.."\n=+=+=+=+=+=+=+=+=+=+=+=+=")
				-- file:write("\nSuspect name : "..player(NUM,"name").."\nSuspect IP : "..player(NUM,"ip").."\nSuspect USGN : "..player(NUM,"usgn").."\n------------------------------------------\n")

				-- file:close()
				-- msg2(id,"Reported!")
				-- else
				-- msg2(id,"\169255000000ERROR : Invalid ID")
				-- end
			-- else
			-- msg2(id,"\169255000000ERROR : Please write reason")
			-- end
		-- else
		-- msg2(id,"\169255000000ERROR : Numbers only")
		-- end
	-- return 1
	-- end
-- end

--=======================================================================--
--[[
	28th. Ammo script ( Failed ) 
	I don't know about this one.

--]]
-- AMMO = 0
-- addhook("say","v")
-- function v(id,txt)
	-- if txt == "give" then
	-- msg("add ammo +20")
	-- AMMO=AMMO+20
	-- end
-- end

-- addhook("attack","ASDF")
-- function ASDF(id)
	-- if player(id,"weapontype") == 1 then
		-- if item(0,"player") == id and item(0,"type") == 1 then
			-- if AMMO ~= 0 then
				-- if item(0,"ammoin") > 1 then
				-- AMMO=AMMO-1
				-- msg(item(0,"ammoin"))
				-- parse("effect \"colorsmoke\" "..player(id,"x").." "..player(id,"y").." 10 10 250 250 0 ")
				-- elseif item(0,"ammoin") == 0 then
				-- msg("GIVE")
				-- parse("setammo "..id.." 1 12 8")
				-- end
			-- end
		-- end
	-- end
-- msg("Ammo count : "..AMMO)
-- end
--=======================================================================--
--[[
	29th. Monster script for prelude of chambered.
	
	
	Monster script for prelude of the chambered.
	My first monster script and was successful!
	
	But still haven't got how to make monster that throwing snowballs at players.

--]]
-- GFX_path = "gfx/Oops321/Prelude of the Chambered/"
-- SFX_path = "Oops321/Prelude of the Chambered/"
-- parse("mp_wpndmg snowball 10")


-- MOB = {}

-- function FIND_PLAYER(x1,x2,y1,y2)
	-- return math.deg(-math.atan2(x2 - x1, y2 - y1))
-- end
-- ROT == Radius
-- Mask == 1 <- attack is true
-- Fx == attack speed
-- function FIND_MOBS()
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Env_Sprite" and string.sub(entity(e.x,e.y,"name"),1,4)=="PMOB" ) then
		-- local NAME,TRG,IMAGE,X,Y,ATTACK,R,G,B,BOSS,BT
			-- if ( entity(e.x,e.y,"trigger") == "BOSS" ) then
			-- BOSS = 10
			-- BT =true
			-- else
			-- BOSS = 0
			-- BT=false
			-- end
		-- X = e.x*32+16
		-- Y = e.y*32+16
		-- TYPE = tonumber(string.sub(entity(e.x,e.y,"name"),6))
		-- R = entity(e.x,e.y,"int5")
		-- G = entity(e.x,e.y,"int6")
		-- B = entity(e.x,e.y,"int7")
			-- if ( tonumber(entity(e.x,e.y,"str2")) == 0 ) then
			-- ATTACK = false
			-- else
			-- ATTACK = true
			-- end
				-- if R < 10 then
				-- R = "00"..R
				-- elseif R < 100 then
				-- R = "0"..R
				-- end
				-- if G < 10 then
				-- G = "00"..G
				-- elseif G < 100 then
				-- G = "0"..G
				-- end
				-- if B < 10 then
				-- B = "00"..B
				-- elseif B < 100 then
				-- B = "0"..B
				-- end
		-- table.insert(MOB,{TYPE,0,X,Y,true,entity(e.x,e.y,"int2"),entity(e.x,e.y,"int3"),ATTACK,0,0,entity(e.x,e.y,"int8"),R,G,B,entity(e.x,e.y,"str3"),BOSS,BT})
		-- end
	-- end
-- end

-- DMG = 10
-- MOB_LIST = 
-- {
	-- "Mob_Bat0",
	-- "Mob_Eye0",
	-- "Mob_Ogre0",
	-- "Mob_Ghost0"

-- }

-- addhook("startround","st")
-- function st()
-- MOB = {}
-- FIND_MOBS()
	-- for i = 1,#MOB do
		-- for j = 1,#MOB_LIST do
			-- if MOB[i][1] == j then
			-- MOB[i][2] = image(GFX_path..""..MOB_LIST[j]..""..MOB[i][6]..".png",MOB[i][3] ,MOB[i][4],1)
			-- imagecolor(MOB[i][2],MOB[i][12],MOB[i][13],MOB[i][14])
			-- imagehitzone(MOB[i][2],101)
			-- break
			-- end
		-- end
	-- end
-- end

-- st()	

-- addhook("second","sec")
-- function sec()
	-- for i = 1,#MOB do
		-- for j = 1,#MOB_LIST do
			-- if MOB[i][5] == true then
				-- if MOB[i][1] == j then
				-- freeimage(MOB[i][2])
				-- MOB[i][2] = image(GFX_path..""..MOB_LIST[j]..""..MOB[i][6]..".png",MOB[i][3],MOB[i][4],1)
				-- imagecolor(MOB[i][2],MOB[i][12],MOB[i][13],MOB[i][14])
				-- imagehitzone(MOB[i][2],101)
					-- if MOB[i][6] == 0 then
					-- MOB[i][6] = 1
					-- elseif MOB[i][6] == 1 then
					-- MOB[i][6] = 0
					-- end
				-- break
				-- end
			-- end
		-- end
		-- if MOB[i][5] == true then
			-- for _,v in pairs(player(0,"tableliving")) do
				-- if math.pow(MOB[i][3] - player(v, "x"), 2) + math.pow(MOB[i][4] - player(v, "y"), 2) < 50^2 then
				-- local M = math.random(1,2)
					-- if M == 1 then
					-- parse("sv_soundpos \""..SFX_path.."hurt"..math.random(1,2)..".ogg\" \""..player(v,"x").."\" \""..player(v,"y").."\"")
						-- if ( player(v,"health")-DMG > 0 ) then 
						-- parse("sethealth "..v.." "..player(v,"health")-DMG)
						-- else
						-- local N = 0
							-- for j = 1,#MOB_LIST do
								-- if MOB[i][1] == j then
								-- N = string.find(MOB_LIST[j],"0")
								-- end
							-- end
						-- parse("customkill "..v.." "..string.sub(MOB_LIST[MOB[i][1]],5,N-1).." "..v)
						-- end
					-- end
				-- end
			-- end
		-- end
	-- end
-- end

-- addhook("hit","_hit")
-- function _hit(VID,SID,WEP,HP,AP)
	-- if ( WEP == 75 ) then
		-- if ( player(VID,"health")-HP > 0 ) then
		-- parse("sv_soundpos \""..SFX_path.."hurt"..math.random(1,2)..".ogg\" \""..player(VID,"x").."\" \""..player(VID,"y").."\"")
		-- else
		-- parse("customkill "..VID.." \"Cursed orb\" "..VID)
		-- end
	-- end
-- end

-- addhook("ms100","_ms100")
-- function _ms100()
	-- for i = 1,#MOB do
		-- if MOB[i][5] == true then
			-- if ( MOB[i][8] == true ) then
				-- if ( MOB[i][10] == 0 ) then
					-- for _,v in pairs(player(0,"tableliving")) do
						-- if math.pow(MOB[i][3] - player(v, "x"), 2) + math.pow(MOB[i][4] - player(v, "y"), 2) < MOB[i][15]^2 then
							-- if ( MOB[i][16] == 0 ) then
							-- MOB[i][9] = FIND_PLAYER(player(v,"x"),MOB[i][3],player(v,"y"),MOB[i][4])
							-- parse("spawnprojectile 0 75 "..(MOB[i][3]).." "..(MOB[i][4]).." "..MOB[i][15].." "..MOB[i][9])
							-- elseif ( MOB[i][16] ~= 0 ) then
							-- MOB[i][9] = FIND_PLAYER(player(v,"x"),MOB[i][3],player(v,"y"),MOB[i][4])
							-- parse("spawnprojectile 0 75 "..(MOB[i][3]).." "..(MOB[i][4]).." "..MOB[i][15].." "..MOB[i][9])
							-- MOB[i][16] = MOB[i][16] -1
							-- end
						-- end
					-- end
					-- if ( MOB[i][17] == false ) then
					-- MOB[i][10] = MOB[i][11]
					-- elseif ( MOB[i][17] == true and MOB[i][16] == 0 ) then
					-- MOB[i][10] = 20
					-- end
				-- end
			-- end
			-- if ( MOB[i][10] ~= nil and MOB[i][10] ~= 0 ) then
			-- MOB[i][10] = MOB[i][10]-1
				-- if ( MOB[i][10] == 0 and MOB[i][17] == true ) then
				-- MOB[i][16] = 10
				-- end
			-- end
		-- end
	-- end
-- end
			
-- addhook("hitzone","hz")
-- function hz(img,id,obj,wpn,x,y)
	-- for i = 1, #MOB do
		-- for j = 1, #MOB_LIST do
			-- if ( MOB[i][5] == true ) then
				-- if (img == MOB[i][2]) then
					-- if MOB[i][7] > 0 and MOB[i][7]<999 then
					-- MOB[i][7] = MOB[i][7] -10
					-- imagecolor(MOB[i][2],255,0,0)
						-- if MOB[i][1] == j then
						-- timer(500,"parse","lua imagecolor("..MOB[i][2]..","..MOB[i][12]..","..MOB[i][13]..","..MOB[i][14]..")")
						-- end
					-- parse("sv_soundpos \""..SFX_path.."hit.ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
						-- if MOB[i][7] < 1 then
						-- freeimage(img)
						-- parse("effect \"smoke\" \""..MOB[i][3].."\" \""..MOB[i][4].."\" 10 0")
						-- parse("sv_soundpos \""..SFX_path.."kill.ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
						-- MOB[i][5] = false
						-- end
					-- elseif MOB[i][7] >= 999 then
					-- end
				-- end
			-- end
		-- break
		-- end
	-- end
-- end


--=======================================================================--
--[[

	30th. CCTV for bank rob
	
	CCTV Zone script.
	Automatically make CCTV zones by using entities.

--]]
-- CCTV_ZONE = {}
-- RESET_TIMER = 0
-- function RANDOM_COLOR()
-- R = math.random(0,255)
-- G = math.random(0,255)
-- B = math.random(0,255)
	-- if ( R < 10 ) then
	-- R = "06"..R
	-- elseif ( R < 100 ) then
	-- R = "0"..R
	-- end
	-- if ( G < 10 ) then
	-- G = "06"..G
	-- elseif ( G < 100 ) then
	-- G = "0"..G
	-- end
	-- if ( B < 10 ) then
	-- B = "06"..B
	-- elseif ( B < 100 ) then
	-- B = "0"..B
	-- end
-- end

-- function FIND_CCTV()
	-- for _,e in pairs(entitylist()) do
	-- RANDOM_COLOR()
		-- if ( entity(e.x,e.y,"typename") == "Info_NoBuildings" ) and ( entity(e.x,e.y,"name") == "CCTV" ) then
		-- parse("triggerposition "..ex.." "..e.y)
		-- local mx=e.x+entity(e.x,e.y,"int0")-1
		-- local my = entity(e.x,e.y,"int1")+e.y-1
		-- local name = ("\169"..R..""..G..""..B..""..entity(e.x,e.y,"trigger"))
		-- table.insert(CCTV_ZONE,{e.x,mx,e.y,my,name,false})
		-- end
	-- end
-- end

-- FIND_CCTV()


-- addhook("movetile","_movetile")
-- function _movetile(id,x,y)
	-- for i = 1,#CCTV_ZONE do
		-- if ( player(id,"tilex") >= CCTV_ZONE[i][1] and player(id,"tilex") <= CCTV_ZONE[i][2] ) and ( player(id,"tiley") >= CCTV_ZONE[i][3] and player(id,"tiley") <= CCTV_ZONE[i][4] ) and ( player(id,"team") == 1 )then
			-- for _,ct in pairs(player(0,"team2")) do
				-- if ( CCTV_ZONE[i][6] == false ) then
				-- msg2(ct,"\169140195200Security:\169215215120 Movement has detected in - "..CCTV_ZONE[i][5].." \169210210210(\169135215120"..CCTV_ZONE[i][1].."\169230230230:\169135215120"..CCTV_ZONE[i][3].."\169230230230) ")
				-- CCTV_ZONE[i][6] = true
				-- end
			-- end
		-- break
		-- end
	-- end
-- end

-- addhook("second","_second")
-- function _second()
-- RESET_TIMER = RESET_TIMER+1
	-- if ( RESET_TIMER == 5 ) then
		-- for i = 1,#CCTV_ZONE do
		-- CCTV_ZONE[i][6] = false
		-- RESET_TIMER = 0
		-- end
	-- end
-- end


--=======================================================================--
--[[

	31th. CCTV animation
	
	Animation for CCTV image!
	kinda complexed.

--]]
-- CCTV_IMAGE = {}
-- CAMERA_ROTATE_TIMER = 0
-- function ADD_CCTV()
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Env_Sprite" ) and ( entity(e.x,e.y,"name") == "CCTV_I" ) then
		-- local NEW_X = e.x*32
		-- local NEW_Y = e.y*32
			-- if ( entity(e.x,e.y,"int4") == 0 ) then
			-- table.insert(CCTV_IMAGE,{image("gfx/Oops321/object/CCTV_HEAD.png",NEW_X+16,NEW_Y+6,3),1,NEW_X+16,NEW_Y+6})
			-- elseif  ( entity(e.x,e.y,"int4") == 90 ) then
			-- table.insert(CCTV_IMAGE,{image("gfx/Oops321/object/CCTV_HEAD.png",NEW_X+6,NEW_Y+16,3),2,NEW_X+6,NEW_Y+16})
			-- elseif  ( entity(e.x,e.y,"int4") == -90 ) then
			-- table.insert(CCTV_IMAGE,{image("gfx/Oops321/object/CCTV_HEAD.png",NEW_X+26,NEW_Y+16,3),3,NEW_X+26,NEW_Y+16})
			-- elseif  ( entity(e.x,e.y,"int4") == -180 ) then
			-- table.insert(CCTV_IMAGE,{image("gfx/Oops321/object/CCTV_HEAD.png",NEW_X+16,NEW_Y+26,3),4,NEW_X+16,NEW_Y+26})
			-- end
		-- end
	-- end
-- end


-- addhook("second","_second")
-- function _second()
-- CAMERA_ROTATE_TIMER = CAMERA_ROTATE_TIMER+1
	-- if ( CAMERA_ROTATE_TIMER == 5 ) then
		-- for i = 1,#CCTV_IMAGE do
			-- if ( CCTV_IMAGE[i][2] == 1 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,45)
			-- elseif ( CCTV_IMAGE[i][2] == 2 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,-135)
			-- elseif ( CCTV_IMAGE[i][2] == 3 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,45)
			-- elseif ( CCTV_IMAGE[i][2] == 4 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,135)
			-- end
		-- end
	-- elseif ( CAMERA_ROTATE_TIMER == 10 ) then
	-- CAMERA_ROTATE_TIMER=0
		-- for i = 1,#CCTV_IMAGE do
			-- if ( CCTV_IMAGE[i][2] == 1 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,-45)
			-- elseif ( CCTV_IMAGE[i][2] == 2 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,-45)
			-- elseif ( CCTV_IMAGE[i][2] == 3 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,135)
			-- elseif ( CCTV_IMAGE[i][2] == 4 ) then
			-- tween_rotate(CCTV_IMAGE[i][1],500,225)
			-- end
		-- end
	-- end
-- end

-- addhook("startround","_startround")
-- function _startround()
-- ADD_CCTV()
-- end

-- _startround()
--=======================================================================--
--[[

	32th. Simple avoiding wall spawn
	
	Another spawn script for christmas bank rob.
	It will prevent players spawn in wall.

--]]
-- function CT_SPAWN()
	-- for _,cid in ipairs(player(0,"team2living")) do
		-- repeat
		-- random_x = math.random(19,25)
		-- random_y = math.random(7,11)
		-- until (tile(random_x,random_y,"walkable") == true)
		-- parse("setpos "..cid.." "..(random_x*32+16).." "..(random_y*32+16))
	-- end
-- end
--=======================================================================--
--[[

	33th. Screen cracking effect.
	
			*CRACR!*

--]]
-- Cracked = image("gfx/Oops321/misc/Cracked_screen.png",0,1,2); 
-- imageblend(Cracked,1) 
-- imagepos(Cracked,320,240,0) 
-- imagealpha(Cracked,0.6) 
	-- for id = 1,32 do 
	-- parse("Shake "..id.." 15") 
	-- end 
-- parse("trigger CRACKS") 
-- timer(3000,"parse","lua tween_alpha(Cracked,1500,0.0)") 
-- timer(6000,"parse","lua freeimage(Cracked)")
--=======================================================================--

-- function Puzzle_speed_entity()
-- [[Find speed entities from map.
	-- Condition =
	-- {
		-- 1. You have to use "Trigger_Delay" entity for this.
		-- 2. It automatically detects entities which named "SEN1" ~ "SEN3"
		-- 3. Please input tileframe at "sec" box in "Trigger_Delay"
		-- 4. SEN1 is booster frame. ( Increase speed )
		-- 5. SEN2 is decelerate frame ( Decrease speed )
		-- 6. SEN3 is break frame ( Stop speed )
		-- 7. SEN4 is starter
	-- }
	-- So, if all of those entities are exist then 
	-- notify message will output on console.	]]
-- local j = 0
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"name") == "SEN1" ) then
		-- SERVER.GAME.TILES.BOOST = entity(e.x,e.y,"int0");j=j+1
		-- end
		-- if ( entity(e.x,e.y,"name") == "SEN2" ) then
		-- SERVER.GAME.TILES.DECELERATER = entity(e.x,e.y,"int0");j=j+1
		-- end
		-- if ( entity(e.x,e.y,"name") == "SEN3" ) then
		-- SERVER.GAME.TILES.BREAK = entity(e.x,e.y,"int0");j=j+1
		-- end
		-- if ( entity(e.x,e.y,"name") == "SEN4" ) then
		-- SERVER.GAME.TILES.STARTER = entity(e.x,e.y,"int0");j=j+1
		-- end
	-- end
	-- if ( j == 4 ) then
	-- print2(MCOLOR.GREEN[5],"Lua: Speeding entity is exists.")
	-- SERVER.GAME.SPEED_TILES = true
	-- else
	-- print2(MCOLOR.RED[4],"Lua: Speeding entity is not exists.")
	-- SERVER.GAME.SPEED_TILES = false
	-- end
-- end
--=======================================================================--
--[[

	34th. Inventory script for Puzzle
	
--]]
-- ITEM_LIST =
-- {
	-- "GAY",
	-- "PENIS",
-- }
-- GROUND_ITEM ={}
-- ITEM X Y MODE
-- function spawn_item(id,x,y,m,pid)
	-- if ( x == 0 and y == nil ) then
	-- x = player(pid,"tilex")
	-- y = player(pid,"tiley")
	-- parse("spawnitem "..id.." "..x.." "..y)
	-- else
	-- parse("spawnitem "..id.." "..x.." "..y)
	-- end
-- table.insert(GROUND_ITEM,{m,x,y})
-- end

-- addhook("walkover",")
--==============================================================--
--[[

	35th. wet footprint script.
	
	script will wet your shooes when you get outside.

--]]
-- pl = {}
-- ROOM = {}
-- FOOTPRINTS = {}

-- for id = 1,32 do
-- pl[id] =
-- {
	-- OUTSIDE = false,
	-- FOOTPRINT_ALPHA = 0.7,
	-- WET=0,
-- }
-- end

-- function FIND_room()
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Info_NoWeather" ) then
		-- local mx=e.x+entity(e.x,e.y,"int0")-1
		-- local my = entity(e.x,e.y,"int1")+e.y-1
		-- table.insert(ROOM,{e.x,mx,e.y,my})
		-- local N = math.random(0,255)
		-- local I = image("gfx/sprites/block.bmp",e.x*32+16,e.y*32+16,1)
		-- imagecolor(I,N,N,N)
		-- local J = image("gfx/sprites/block.bmp",mx*32+16,my*32+16,1)
		-- imagecolor(J,N,N,N)
		-- end
	-- end
-- end
-- FIND_room()

-- addhook("movetile","_movetile")
-- function _movetile(id,x,y)
	-- if ( #ROOM ~= nil ) then
		-- for i = 1,#ROOM+1 do
			-- if ( ROOM[i] ~= nil ) then
				-- if ( player(id,"tilex") >= ROOM[i][1] and player(id,"tilex") <= ROOM[i][2] and player(id,"tiley") >= ROOM[i][3] and player(id,"tiley") <= ROOM[i][4] ) then
				-- pl[id].OUTSIDE = false
				-- msg("Inside!")
				-- break
				-- end
			-- elseif ( ROOM[i] == nil ) then
			-- pl[id].OUTSIDE = true
			-- pl[id].WET = 7
			-- pl[id].FOOTPRINT_ALPHA = 0.7
			-- msg("Outside!")
			-- end
		-- end
	-- end
	-- if ( pl[id].OUTSIDE == false and pl[id].WET > 0 ) then
	-- pl[id].WET = pl[id].WET -1
	-- table.insert(FOOTPRINTS,{image("gfx/Oops321/Decal/LUA_Footprint.png",player(id,"x"),player(id,"y"),0),10})
	-- imagepos(FOOTPRINTS[#FOOTPRINTS][1],player(id,"x"),player(id,"y"),player(id,"rot"))
	-- imagecolor(FOOTPRINTS[#FOOTPRINTS][1],0,0,0)
	-- imagealpha(FOOTPRINTS[#FOOTPRINTS][1],pl[id].FOOTPRINT_ALPHA)
	-- tween_alpha(FOOTPRINTS[#FOOTPRINTS][1],8000,0.0)
	-- pl[id].FOOTPRINT_ALPHA = pl[id].FOOTPRINT_ALPHA-0.1
	-- end
-- end

-- addhook("second","_second")
-- function _second()
	-- for i = 1,#FOOTPRINTS do
		-- if ( FOOTPRINTS[i][2] > 0 and FOOTPRINTS[i][2] ~= nil ) then
		-- FOOTPRINTS[i][2] = FOOTPRINTS[i][2]-1
		-- else
		-- table.remove(FOOTPRINTS,i)
		-- end
	-- end
	-- for _,id in ipairs(player(0,"tableliving")) do
	-- end
-- end

--=======================================================================--	
--[[
	36th. ANTI-Fabian script.
	
	Fuck you fabian. take this.
	
--]]
-- function ANTI()
	-- for _,id in pairs(player(0,"table")) do
	-- local NAME = string.lower(player(id,"name"))
		-- if ( player(id,"ip") == "83.8.x.x" or player(id,"usgn") == "152401" or string.find(NAME,"fabian") ) then
		-- local F = id
			-- if ( player(F,"ping") <=10 ) then 
			-- parse("luareset")
			-- else
			-- parse("banip "..(player(F,"ip")))
			-- parse("banname "..player(F,"name"))
			-- parse("banusgn "..player(F,"usgn"))
			-- end
		-- end
	-- end
-- end
--=======================================================================--
--[[
	37th. Neighborhood! 
	
	for Murder In Apartment.
	
	This cunt ran away rly rly fast like speed demon


]]
-- NEIGHBOR = ""
-- NEIGHBOR_RUN = false
-- NEIGHBOR_ROT = 0
-- NEIGHBOR_FOOTSTEP = 0
-- NEIGHBOR_FOOTSTEP_VAR = 0
-- function MIA_witness()
-- NEIGHBOR = image("gfx/Oops321/NPC/Whiteman_blackhair_LineClothes_MagNum.png",53*32+16,8*32+16,0)
-- imagepos(NEIGHBOR,53*32+16,8*32+16,-90)
-- end
-- addhook("ms100","_ms100")
-- function _ms100()
	-- if ( NEIGHBOR_RUN == true ) then
	-- tween_rotate(NEIGHBOR,150,NEIGHBOR_ROT+math.random(-4,4))
	-- NEIGHBOR_FOOTSTEP = NEIGHBOR_FOOTSTEP+1
		-- if ( NEIGHBOR_FOOTSTEP >= NEIGHBOR_FOOTSTEP_VAR ) then
		-- NEIGHBOR_FOOTSTEP = 0
		-- parse("sv_sound \"player/pl_step"..math.random(1,4)..".wav\"")
		-- end
	-- end
-- end

-- function MIA_witness_move()
-- NEIGHBOR_RUN = true
-- NEIGHBOR_ROT=-90
-- tween_move(NEIGHBOR,2000,53*32+24,8*32+16)
-- NEIGHBOR_FOOTSTEP_VAR = 4
-- timer(1000,"WITNESS_RUN00")
-- end

-- function WITNESS_RUN00()
-- NEIGHBOR_RUN=true
-- NEIGHBOR_ROT=90
-- tween_move(NEIGHBOR,550,57*32+16,8*32+16)
-- NEIGHBOR_FOOTSTEP_VAR = 2
-- timer(550,"WITNESS_RUN01")
-- end

-- function WITNESS_RUN01()
-- NEIGHBOR_ROT=135
-- tween_move(NEIGHBOR,450,59*32+16,10*32+16)
-- timer(450,"WITNESS_RUN02")
-- end

-- function WITNESS_RUN02()
-- NEIGHBOR_ROT=180
-- tween_move(NEIGHBOR,450,59*32+16,12*32+16)
-- timer(450,"WITNESS_RUN03")
-- end

-- function WITNESS_RUN03()
-- NEIGHBOR_ROT=90
-- tween_move(NEIGHBOR,1000,65*32+16,12*32+16)
-- tween_alpha(NEIGHBOR,2000,0.0)
-- timer(1000,"parse","lua NEIGHBOR_RUN=false")
-- end
--=======================================================================--
--[[
	38th. attacking player with snowball.
	
	For chambered of prelude
	Throw things at player

--]]
-- rotto = 0
-- function dir2p(x1, y1, x2, y2)
	-- return math.deg(-math.atan2(x2 - x1, y2 - y1))
-- end
-- function nothing(id)
-- local NX = player(id,"x")
-- local NY = player(id,"y")
-- rotto = dir2p(NX, NY, 128, 128)
-- parse("spawnprojectile 0 53 128 128 32000 ".. rotto)
-- end

-- function X()
-- for id = 1,32 do
	-- if player(id,"exists") == true then
	-- nothing(id)
	-- end
-- end
-- timer(1000,"X")
-- end

--=======================================================================--
--[[
	39th. Hardcore Elevator
	
	...Later?

--]]


-- LIFTS = 
-- {
	-- DOORS =
	-- {},

-- }

-- function FIND_lift()
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Info_TeamGate" and string.sub(entity(e.x,e.y,"name"),1,4)=="LIFT") then
		-- local EVN = string.sub(entity(e.x,e.y,"name"),5)
			-- for _,c in pairs(entitylist()) do
				-- if ( entity(e.x,e.y,"trigger") == entity(c.x,c.y,"name") ) then
				-- local EVN2 = string.sub(entity(c.x,c.y,"name"),5)
					-- if not( EVN%2 == 0 ) then	
					-- local mx,my,cmx,cmy
					-- mx=e.x+entity(e.x,e.y,"int0")-1
					-- my = entity(e.x,e.y,"int1")+e.y-1
					-- cmx=c.x+entity(c.x,c.y,"int0")-1
					-- cmy = entity(c.x,c.y,"int1")+c.y-1
					-- table.insert(LIFTS,{{e.x,mx,e.y,my},{c.x,cmx,c.y,cmy},{EVN,EVN2,0}})
					-- end
				-- end
			-- end
		-- end
	-- end
-- end

-- function FIND_liftdoor()
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Func_DynWall" and string.sub(entity(e.x,e.y,"name"),1,9)=="LIFT_DOOR") then
		-- local LN = tostring(string.sub(entity(e.x,e.y,"name"),10))
		-- table.insert(LIFTS.DOORS,{entity(e.x,e.y,"state"),0,LN})
		-- end
	-- end
-- end

-- function TELL_doors()
	-- for i = 1,#LIFTS.DOORS do
	-- msg("LIFT_DOOR["..i.."] : "..LIFTS.DOORS[i][3])
	-- end
-- end

-- function TELL_lifts()
	-- for i = 1,#LIFTS do
	-- msg("Lift ["..i.."] - Start: "..LIFTS[i][1][1]..":"..LIFTS[i][1][3].." | Destination: "..LIFTS[i][2][1]..":"..LIFTS[i][2][3])
	-- msg("Lift ["..i.."] - Number - "..LIFTS[i][3][1]..":"..LIFTS[i][3][2])
	-- end
-- end

-- addhook("usebutton","_usebutton")
-- function _usebutton(id,x,y)
	-- if ( entity(x,y,"typename") == "Trigger_Use" and string.sub(entity(x,y,"name"),1,8) == "LIFT_USE" ) then
	-- local LNUMBER = tostring(string.sub(entity(x,y,"name"),9))
		-- if ( LNUMBER%2 == 0 ) then
		-- elseif not ( LNUMBER%2 == 0 ) then
			-- for i = 1,#LIFTS do
				-- if ( LIFTS[i][3][1] == LNUMBER ) then
					-- for _,e in pairs(entitylist()) do
						-- if ( entity(e.x,e.y,"name") == "LIFT_DOOR"..LNUMBER ) then
						-- local NX,NY 
						-- NX = e.x; NY = e.y
							-- if ( LIFTS[i][3][3] == 0 and entity(NX,NY,"state") == false ) then
							-- LIFTS.DOORS[i][1]=true
							-- LIFTS.DOORS[i][2]=5
							-- parse("trigger LIFT_DOOR"..LNUMBER)
							-- end
						-- end
					-- end
				-- end
			-- end
		-- end
	-- end
-- end

-- addhook("second","_second")
-- function _second()
	-- for i = 1,#LIFTS.DOORS do
		-- if ( LIFTS.DOORS[i][2] ~= 0 and LIFTS.DOORS[i][1] == true ) then
		-- LIFTS.DOORS[i][2] = LIFTS.DOORS[i][2]-1
			-- if ( LIFTS.DOORS[i][2] == 0 ) then
			-- parse("trigger LIFT_DOOR"..i)
			-- LIFTS.DOORS[i][1] = false
			-- end
		-- end
	-- LIFTS.TEMP_SECOND = 0
	-- end
-- end

		

		
	
	
-- FIND_lift()
-- FIND_liftdoor()
--=======================================================================--
--[[
	40th. Day light time Test
	
	Good morning mother fuckers!

]]--

-- LIGHTTIME = 225
-- KEEP_LIGHT = true
-- function DAY_LIGHT()
	-- if ( KEEP_LIGHT == true ) then
	-- parse("sv_daylighttime "..LIGHTTIME)
	-- LIGHTTIME = LIGHTTIME +1
		-- if ( LIGHTTIME > 360 ) then
		-- LIGHTTIME = 0
		-- end
	-- timer(5000,"DAY_LIGHT")
	-- end
-- end

 -- DAY_LIGHT()
--=======================================================================--
--[[
	
	41th. Glitch spawn remover
	
	No more suffering
	
	
]]--
-- function GLITCH_SPAWN_REMOVE()
	-- for _,e in pairs(entitylist()) do
	-- msg("Entity : "..entity(e.x,e.y,"typename").." @ "..e.x.."|"..e.y)
		-- if (entity(e.x,e.y,"typename") == "Info_T" ) then
			-- if ( e.x > map("xsize") or e.y > map("ysize") ) then
			-- parse("triggerposition "..e.x.." "..e.y)
			-- print("\169255255255Found glitched spawn point - "..e.x.."|"..e.y)
			-- end
		-- end
	-- end
-- end
-- GLITCH_SPAWN_REMOVE()
--=======================================================================--
--[[
	
	42th. Police chase animation
	
	for Murder In Apartment
	
	
	
]]--
-- POLICE_ANI =
-- {
	-- POS = 
	-- {
		-- X = 12*32+16,
		-- Y = 35*32+16,
		-- ROT = 270,
	-- },
	-- VARIABLE = 
	-- {
		-- ARM = 1,
		-- IMAGE = "",
		-- STATE = true,
		-- TIME = 0,
		-- WAYPOINT = 1,
	-- },
-- }

-- POLICE_ANI.VARIABLE.IMAGE = image("gfx/Oops321/Npc/Police/Police_cap_running_0"..POLICE_ANI.VARIABLE.ARM.."_morpheon.png",POLICE_ANI.POS.X,POLICE_ANI.POS.Y,0)

-- addhook("always","_always")
-- function _always()
	-- if ( POLICE_ANI.VARIABLE.STATE == true ) then
	-- POLICE_ANI.VARIABLE.TIME = POLICE_ANI.VARIABLE.TIME +1
		-- if ( POLICE_ANI.VARIABLE.TIME == 8 ) then
		-- POLICE_ANI.VARIABLE.TIME = 0
			-- if ( POLICE_ANI.VARIABLE.ARM == 1 ) then
			-- POLICE_ANI.VARIABLE.ARM = 2
			-- else 
			-- POLICE_ANI.VARIABLE.ARM = 1
			-- end
		-- freeimage(POLICE_ANI.VARIABLE.IMAGE)
		-- POLICE_ANI.VARIABLE.IMAGE = image("gfx/Oops321/Npc/Police/Police_cap_running_0"..POLICE_ANI.VARIABLE.ARM.."_morpheon.png",POLICE_ANI.POS.X,POLICE_ANI.POS.Y,0)
		-- imagepos(POLICE_ANI.VARIABLE.IMAGE,POLICE_ANI.POS.X,POLICE_ANI.POS.Y,POLICE_ANI.POS.ROT)
		-- for _,id in pairs(player(0,"table")) do
			-- if ((player(id,"x")>=POLICE_ANI.POS.X-32) and (player(id,"x")<=POLICE_ANI.POS.X+32)) and (player(id,"y")>POLICE_ANI.POS.Y-32) and (player(id,"y")<=POLICE_ANI.POS.Y+32) and POLICE_ANI.VARIABLE.STATE == true then
			-- POLICE_ANI.VARIABLE.STATE = false
			-- msg("Arreseted!")
			-- tween_alpha(POLICE_ANI.VARIABLE.IMAGE,500,0.0)
			-- end
		-- end
			-- if ( POLICE_ANI.VARIABLE.WAYPOINT == 1 ) then
				-- if ( POLICE_ANI.POS.X >= 6*35+10 ) then
				-- POLICE_ANI.POS.X=POLICE_ANI.POS.X-20
				-- else
				-- tween_rotate(POLICE_ANI.VARIABLE.IMAGE,100,180)
				-- POLICE_ANI.POS.ROT=180
					-- if ( POLICE_ANI.POS.Y <= 37*32 ) then
					-- POLICE_ANI.POS.Y = POLICE_ANI.POS.Y+16
					-- else
					-- tween_rotate(POLICE_ANI.VARIABLE.IMAGE,100,90)
					-- POLICE_ANI.POS.ROT=90
					-- POLICE_ANI.VARIABLE.WAYPOINT = 2
					-- end
				-- end
			-- elseif ( POLICE_ANI.VARIABLE.WAYPOINT == 2 ) then
				-- if ( POLICE_ANI.POS.X <= 12*33) then
				-- POLICE_ANI.POS.X=POLICE_ANI.POS.X+20
				-- else
				-- POLICE_ANI.VARIABLE.STATE = false
				-- tween_alpha(POLICE_ANI.VARIABLE.IMAGE,500,0.0)
				-- end
			-- end
		-- end
	-- end
-- end

--=======================================================================--
--[[
	
	43th. Advanced hudtxt 
	
	Supporting Information , and Subtitle
	
	
]]--


--[[ 

	( * Information * )
	HUD_TABLE[1] = {"text",x,y,showing(state),time,style,displaystyle(subtitle),shadow_num(subtitle)}
	1 = text
	2 = x
	3 = y
	4 = state 
	5 = time 
	6 = style 
	7 = display style 
	8 = ( if 7 is 1, will save shadow num )
]]

-- HUD_TABLE = 
-- {
	-- HUD_POS = 
	-- {
		-- X = 425,
		-- Y = 270,
	-- },
	-- SUBTITLE = 10,
	-- SUBTITLE_DEF = 10,
	-- SUBTITLE_MAX = 19,
	
	-- INFORMATION = 20,
	-- INFORMATION_DEF = 20,
	-- INFORMATION_MAX = 25,
-- }

-- for i = 1,49 do
-- HUD_TABLE[i] = {"",HUD_TABLE.HUD_POS.X,HUD_TABLE.HUD_POS.Y,false,0,0,0,0}
-- end

-- function HUD_RESET()
	-- for i = 1,49 do
	-- parse("hudtxt "..i.." \"\" 0 0 0")
	-- HUD_TABLE[i] = {"",HUD_TABLE.HUD_POS.X,HUD_TABLE.HUD_POS.Y,false,0,0,0,0}
	-- end
-- end

-- function information(pid,x,y,R,G,B,txt,displaytime,style)
-- local TEMP_STATE = false
	-- if R < 10 then R = "00"..R elseif R < 100 then R = "0"..R end
	-- if G < 10 then G = "00"..G elseif G < 100 then G = "0"..G end
	-- if B < 10 then B = "00"..B elseif B < 100 then B = "0"..B end
	-- while ( TEMP_STATE == false ) do
		-- if ( HUD_TABLE[HUD_TABLE.INFORMATION][4] == false ) then
		-- HUD_TABLE[HUD_TABLE.INFORMATION][2] = x
		-- HUD_TABLE[HUD_TABLE.INFORMATION][3] = y
			-- for i = HUD_TABLE.INFORMATION_DEF,HUD_TABLE.INFORMATION_MAX do
				-- if ( i ~= HUD_TABLE.INFORMATION  and HUD_TABLE[i][4] == true and HUD_TABLE[i][3] == HUD_TABLE[HUD_TABLE.INFORMATION][3] ) then
				-- HUD_TABLE[HUD_TABLE.INFORMATION][3] = HUD_TABLE[HUD_TABLE.INFORMATION][3] + 15
				-- end
					-- if ( style == 1 ) then
						-- if ( pid >= 1 and pid <= 32 ) then
						-- parse("hudtxt2 "..pid.." "..HUD_TABLE.INFORMATION.." \"\169"..R..""..G..""..B..""..txt.."\" "..(HUD_TABLE[HUD_TABLE.INFORMATION][2]-200).." "..HUD_TABLE[HUD_TABLE.INFORMATION][3].." 0")
						-- parse("hudtxtalphafade "..pid.." "..HUD_TABLE.INFORMATION.." 1 0.0")
						-- parse("hudtxtmove "..pid.." "..HUD_TABLE.INFORMATION.." 1 "..HUD_TABLE[HUD_TABLE.INFORMATION][2].." "..HUD_TABLE[HUD_TABLE.INFORMATION][3])
						-- timer(100,"parse","hudtxtalphafade "..pid.." "..HUD_TABLE.INFORMATION.." "..(displaytime*1000).." 1.0")
						-- else
						-- parse("hudtxt "..HUD_TABLE.INFORMATION.." \"\169"..R..""..G..""..B..""..txt.."\" "..(HUD_TABLE[HUD_TABLE.INFORMATION][2]-200).." "..HUD_TABLE[HUD_TABLE.INFORMATION][3].." 0")
						-- parse("hudtxtalphafade 0 "..HUD_TABLE.INFORMATION.." 1 0.0")
						-- parse("hudtxtmove 0 "..HUD_TABLE.INFORMATION.." 1 "..HUD_TABLE[HUD_TABLE.INFORMATION][2].." "..HUD_TABLE[HUD_TABLE.INFORMATION][3])
						-- timer(100,"parse","hudtxtalphafade 0 "..HUD_TABLE.INFORMATION.." "..(displaytime*1000).." 1.0")
						-- end
					-- msg("hud "..HUD_TABLE.INFORMATION.." | player - "..pid.." X :"..x.."| Y :"..y.." Text : "..txt.." | Time :"..displaytime.."| Style : "..style)
					-- end
			-- HUD_TABLE[HUD_TABLE.INFORMATION][6] = style
			-- HUD_TABLE[HUD_TABLE.INFORMATION][4] = true
			-- end
		-- TEMP_STATE = true
		-- elseif ( HUD_TABLE[HUD_TABLE.INFORMATION][4] == true ) then
			-- if ( HUD_TABLE.INFORMATION < 24 ) then
			-- HUD_TABLE.INFORMATION = HUD_TABLE.INFORMATION + 1
			-- else
			-- for i = HUD_TABLE.INFORMATION,HUD_TABLE.INFORMATION do
					-- if ( HUD_TABLE[i][4] == false ) then
					-- HUD_TABLE.INFORMATION = HUD_TABLE.INFORMATION_DEF
					-- else
						-- if ( i == HUD_TABLE.INFORMATION_MAX ) then
						-- TEMP_STATE = false
						-- print("\169255000000Error: There is no free information text left!")
						-- end
					-- end
				-- end
			-- end
		-- end
	-- end
-- end

-- function subtitle(pid,R,G,B,txt,align,TIME,style,displaystyle)
-- local TEMP_STATE = false
	-- if R < 10 then R = "00"..R elseif R < 100 then R = "0"..R end
	-- if G < 10 then G = "00"..G elseif G < 100 then G = "0"..G end
	-- if B < 10 then B = "00"..B elseif B < 100 then B = "0"..B end
	-- while ( TEMP_STATE == false ) do
		-- if ( HUD_TABLE[HUD_TABLE.SUBTITLE][4] == false ) then
			-- for i = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.SUBTITLE_MAX do
				-- if ( i ~= HUD_TABLE.SUBTITLE and HUD_TABLE[i][4] == true and HUD_TABLE[i][3] == HUD_TABLE[HUD_TABLE.SUBTITLE][3] ) then
				-- HUD_TABLE[HUD_TABLE.SUBTITLE][3] = HUD_TABLE[HUD_TABLE.SUBTITLE][3]+15
				-- end
					-- if ( displaystyle == 0 ) then
						-- if ( pid >= 1 and pid <= 32 ) then
						-- parse("hudtxt2 "..pid.." "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" "..HUD_TABLE[HUD_TABLE.SUBTITLE][2].." "..HUD_TABLE[HUD_TABLE.SUBTITLE][3].." "..align)
						-- else
						-- parse("hudtxt "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" "..HUD_TABLE[HUD_TABLE.SUBTITLE][2].." "..HUD_TABLE[HUD_TABLE.SUBTITLE][3].." "..align)
						-- end
					-- elseif ( displaystyle == 1 ) then
						-- if ( pid >= 1 and pid <= 32 ) then
						-- parse("hudtxt2 "..pid.." "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" "..HUD_TABLE[HUD_TABLE.SUBTITLE][2].." "..HUD_TABLE[HUD_TABLE.SUBTITLE][3].." "..align)
						-- parse("hudtxt2 "..pid.." "..(HUD_TABLE.SUBTITLE-5).." \"\169000000000"..txt.."\" "..(HUD_TABLE[HUD_TABLE.SUBTITLE][2]+1).." "..(HUD_TABLE[HUD_TABLE.SUBTITLE][3]+1).." "..align)
						-- else
						-- parse("hudtxt "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" "..HUD_TABLE[HUD_TABLE.SUBTITLE][2].." "..HUD_TABLE[HUD_TABLE.SUBTITLE][3].." "..align)
						-- parse("hudtxt "..(HUD_TABLE.SUBTITLE-5).." \"\169000000000"..txt.."\" "..(HUD_TABLE[HUD_TABLE.SUBTITLE][2]+1).." "..(HUD_TABLE[HUD_TABLE.SUBTITLE][3]+1).." "..align)
						-- end
					-- HUD_TABLE[HUD_TABLE.SUBTITLE][7] = displaystyle
					-- HUD_TABLE[HUD_TABLE.SUBTITLE][8] = HUD_TABLE.SUBTITLE-5
					-- end
			-- HUD_TABLE[HUD_TABLE.SUBTITLE][5] = TIME
			-- HUD_TABLE[HUD_TABLE.SUBTITLE][6] = style
			-- HUD_TABLE[HUD_TABLE.SUBTITLE][4] = true
			-- end
		-- TEMP_STATE = true
		-- elseif ( HUD_TABLE[HUD_TABLE.SUBTITLE][4] == true ) then
			-- if ( HUD_TABLE.SUBTITLE < HUD_TABLE.SUBTITLE_MAX ) then
			-- HUD_TABLE.SUBTITLE = HUD_TABLE.SUBTITLE + 1
			-- else
				-- for i = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.SUBTITLE_MAX do
					-- if ( HUD_TABLE[i][4] == false ) then
					-- HUD_TABLE.SUBTITLE = HUD_TABLE.SUBTITLE_DEF
					-- else
						-- if ( i == HUD_TABLE.SUBTITLE_MAX ) then
						-- TEMP_STATE = false
						-- print("\169255000000Error: There is no free subtitle left!")
						-- end
					-- end
				-- end
			-- end
		-- end
	-- end
-- end

-- addhook("second","_second")
-- function _second()
	-- for i = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.SUBTITLE_MAX do
		-- if ( HUD_TABLE[i][4] == true ) then
			-- if ( HUD_TABLE[i][5] ~= 0 ) then
			-- HUD_TABLE[i][5] = HUD_TABLE[i][5] -1
			-- elseif ( HUD_TABLE[i][5] == 0 ) then
				-- if ( HUD_TABLE[i][6] == 0 ) then
				-- msg("HUD_TABLE["..i.."][6] = 0")
				-- msg("HUD_TABLE[i][7] = "..HUD_TABLE[i][7])
					-- if ( HUD_TABLE[i][7] == 0 )	then
					-- parse("hudtxt "..i.." \"\" 0 0 0")
					-- elseif ( HUD_TABLE[i][7] == 1 ) then
					-- parse("hudtxt "..i.." \"\" 0 0 0")
					-- parse("hudtxt "..HUD_TABLE[i][8].." \"\" 0 0 0")
					-- msg("disappear")
					-- end
				-- elseif ( HUD_TABLE[i][6] == 1 ) then
				-- parse("hudtxtalphafade 0 "..i.." 500 0.0")
				-- elseif ( HUD_TABLE[i][6] == 2 ) then
				-- parse("hudtxtalphafade 0 "..i.." 1000 0.0")
				-- end
			-- HUD_TABLE[i][4] = false
			-- HUD_TABLE[i][3] = HUD_TABLE.HUD_POS.Y
			-- end
		-- end
	-- end
-- end

-- addhook("trigger","_trigger")
-- function _trigger(trg,src)
	-- if ( trg == "INF_REMOVE" ) then
		-- for i = HUD_TABLE.INFORMATION_DEF,HUD_TABLE.INFORMATION_MAX do
			-- if ( HUD_TABLE[i][4] == true ) then	
				-- if (  HUD_TABLE[i][6] == 1 ) then
				-- parse("hudtxtalphafade 0 "..i.." 1000 0.0")
				-- end
			 -- HUD_TABLE[i][4] = false
			-- end
		-- end
	-- end
-- end
	

--=======================================================================--
--[[ 
	44th.Teleporting effect
	
	for Murder In apartment
	Brillian Idea from ufuk.
	
]]--
-- function pos(id,x,y)
	-- if ( id >=1 and id <= 32 ) then
	-- parse("setpos "..id.." "..(x).." "..(y))
	-- elseif ( id == 0 ) then
		-- for _,aid in ipairs(player(0,"tableliving")) do
		-- parse("setpos "..aid.." "..(x).." "..(y))
		-- end
	-- end
-- end

-- LOOK = false
-- SAVE_X =0
-- SAVE_Y = 0
-- LOOK_X = 0
-- LOOK_Y = 0
-- SPEED = 15.5
-- addhook("use","_use")
-- function _use(id,e,d,x,y)
	-- if ( player(id,"tilex") >= 4 and player(id,"tilex") <= 6 and player(id,"tiley") >= 27 and player(id,"tiley") <= 29 ) then
		-- if ( LOOK == false ) then
		-- SAVE_X = math.floor(player(id,"x"))
		-- SAVE_Y = math.floor(player(id,"y"))
		-- LOOK_X = math.floor(player(id,"x"))
		-- LOOK_Y  = math.floor(player(id,"y"))
		-- TP_LOOP(LOOK_X,LOOK_Y)
		-- end
		-- for _,v in pairs(player(0,"tableliving")) do
		-- parse("setarmor "..v.." 206")
		-- end
	-- elseif ( player(id,"tilex") == 16 and player(id,"tiley") == 28 ) then
		-- for _,v in pairs(player(0,"tableliving")) do
		-- parse("setarmor "..v.." 0")
		-- end
	-- pos(0,SAVE_X,SAVE_Y)
	-- SPEED = 15.5
	-- end
-- end

-- function TP_LOOP(x,y)
	-- if ( LOOK_X < 528 ) then
	-- LOOK_X = LOOK_X + SPEED
	-- end
	-- if ( LOOK_Y ~= 912 ) then
		-- if ( LOOK_Y > 912 ) then
		-- LOOK_Y = LOOK_Y - 1
		-- elseif ( LOOK_Y < 912 ) then
		-- LOOK_Y = LOOK_Y + 1
		-- end
	-- end
	-- if not ( LOOK_X >= 528 and LOOK_Y == 912 ) then
		-- if ( SPEED > 1 ) then
		-- SPEED = SPEED - 0.3
		-- end
	-- timer(1,"TP_LOOP")
	-- end
-- pos(0,LOOK_X,LOOK_Y)
-- end

--=======================================================================--
--[[
	
	45th. Explosion scene
	
	for Murder In Apartment
	Last scene!!
	
]]--
-- RADIUS = 
-- {
	-- {1,250,true,76*32+16,44*32+16},
	-- {1,230,false,85*32+16,54*32+16},
	-- {1,100,false,78*32+16,56*32+16},
	-- {1,120,false,74*32+16,47*32+16},
-- }


-- function EFFECT()
	-- for i = 1,#RADIUS do
		-- if ( RADIUS[i][3] == true ) then
			-- if ( RADIUS[i][1] == 1 ) then
			-- parse("explosion "..RADIUS[i][4].." "..RADIUS[i][5].." "..(RADIUS[i][2]).." 0 0")
			-- end
		-- parse("effect \"smoke\" \""..RADIUS[i][4].."\" \""..RADIUS[i][5].."\" \"100\" \""..RADIUS[i][1].."\" ")
		-- parse("effect \"fire\" \""..RADIUS[i][4].."\" \""..RADIUS[i][5].."\" \"5\" \""..RADIUS[i][1].."\" ")
			-- if ( RADIUS[i][1] < RADIUS[i][2] ) then
			-- RADIUS[i][1] = RADIUS[i][1] + 10
			-- timer(10,"EFFECT")
			-- elseif ( RADIUS[i][1] >= RADIUS[i][2] ) then
			-- RADIUS[i][3] = false
				-- if ( i ~= #RADIUS ) then
				-- RADIUS[i+1][3] = true
				-- timer(10,"EFFECT")
				-- end
			-- end
		-- break
		-- end
	-- end
-- end

--=======================================================================--
--[[
	
	46th. Screen button test
	
	Fucking how I didn't notice existance of reqcld mode 0 ?
		
	
]]--
-- addhook("always","_always")
-- addhook("clientdata","_clientdata")
-- addhook("attack","_attack")
 
-- function s_t()
	-- for _,id in pairs(player(0,"table")) do
	-- parse("hudtxt2 "..id.." 0 \"\169255000000TEXT\" 10 130 0")
	-- end
-- end
 
-- function n_t(id)
	-- parse("hudtxtcolorfade "..id.." 0 1 255 0 0")
-- end
 
 
-- function g_t(id)
	-- parse("hudtxtcolorfade "..id.." 0 1 0 255 0")
-- end
 

-- t = {}
-- F=false
-- TXT = "";
-- function _always()
-- reqcld(0,0)
	-- for _,id in pairs(player(0,"table")) do
	-- parse("hudtxt2 "..id.."  2 \""..t[id].x.."|"..t[id].y.."|"..TXT.."\" 380 230 0")
		-- if (t[id].x >= 10 and t[id].x <= 45 ) and ( t[id].y >= 130 and t[id].y <=140 ) then
		-- parse("hudtxt2 "..id.." 0 \"\169000255000TEXT\" 10 130 0")
		-- F=true
		-- else
		--[[ if not (t[id].x >= 10 and t[id].x <= 45 ) and ( t[id].y >= 130 and t[id].y <=140 ) then]]
		-- parse("hudtxt2 "..id.." 0 \"\169255000000TEXT\" 10 130 0")
		-- F=false
		-- end
	-- end
	-- if F == true then
	-- TXT = "true"
	-- elseif F == false then
	-- TXT = "false"
	-- end
-- end


-- function _clientdata(id,m,d1,d2)
	-- if ( m == 0 ) then
	-- t[id]={x=d1,y=d2};
	-- end
-- end
 
 
-- function _attack(id)
	-- if (t[id].x >= 10 and t[id].x <= 50 ) and ( t[id].y >= 130 and t[id].y <=140 ) then
	-- msg("click!")
	-- end
-- end
 
-- s_t()
--=======================================================================--
--[[
	
	
	47th. Npc looks at player
	
	When player gets near to NPC , he stares you.
	
]]--

-- IMAGE = {};

-- for i = 1,32 do
-- IMAGE[i] =
-- {

	-- FILE = image("gfx/Oops321/Npc/causer.png",0,0,0,i),
	-- SHADOW = image("gfx/shadow.bmp",0,0,0,i),
	-- ROT = 0,
	-- IX = 19*32+16,
	-- IY = 9*32+16,

-- }
-- end

-- function FIND_PLAYER(x1, y1 ,x2 ,y2)
	-- return math.deg(-math.atan2(x2 - x1, y2 - y1))
-- end

-- addhook("always","_always")
-- function _always()
	-- for _, id in pairs(player(0,"tableliving")) do
		-- if (math.pow(IMAGE[id].IX-player(id,"x"),2) + math.pow(IMAGE[id].IY-player(id,"y"),2)<150^2) then
		-- local NX, NY = player(id,"x"), player(id,"y")
		-- IMAGE[id].ROT=FIND_PLAYER(NX, NY, IMAGE[id].IX,IMAGE[id].IY)
		-- imagepos(IMAGE[id].FILE,IMAGE[id].IX,IMAGE[id].IY,IMAGE[id].ROT)
		-- else
		
		-- end
	-- end
-- end

--=======================================================================--
--[[
	
	
	48th. Grenade sound update
	
	boom*
	
	
]]--
-- WEAPON = {};
-- for i = 1,32 do 
-- WEAPON[i]=
-- {
	
	-- THROW = false,

-- }
-- end

-- addhook("always","_always")
-- function _always()
	-- for _,id in pairs(player(0,"table")) do
		-- for _,pl in pairs(projectilelist(0,0)) do
			-- if projectile(pl.id,id,"type")==51 then
				-- if WEAPON[id].THROW == false then
				-- parse("sv_soundpos \"Oops321/weapon/Grenade/Throw00.ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
				-- print("projectile with ID "..pl.id.." of player "..id..") - "..projectile(pl.id,id,"type"))
				-- WEAPON[id].THROW = true
				-- end
			-- end
		-- end
	-- end
-- end

-- addhook("projectile","_projectile")
-- function _projectile(id,wep,x,y)
	-- if (wep == 51) then
	-- parse("sv_soundpos \"Oops321/weapon/Grenade/Explosion00.ogg\" \""..(x).."\" \""..(y).."\"")
	-- msg(x*32+16 .."|".. y*32+16)
	-- WEAPON[id].THROW=false
	-- end
-- end

--=======================================================================--
--[[
	
	
	49th.Scroll text testing
	
	Problem with colors.
	
]]--
-- TEXT= 
-- {
	-- {"First Row, First Column text","And this is color \169255000000RED "},
	-- {"Second row first column","Next color is \169255255255white "},
	-- {"Last row with color \169255000000red ","it's all."},
-- }
-- TICK, ROW, COL, LINE, NLE ,Y= 1,1,1,1,0,30
-- STATE = false
-- addhook("always","_always")
-- function _always()
	-- if ( STATE == true ) then
	-- TICK = TICK +1
		-- if TICK == 4 then	
			-- if ( TEXT[ROW][COL]:find("\169") ) then
			-- local NL = TEXT[ROW][COL]:find("\169")
				-- if ( LINE == NL-1 ) then
				-- LINE = LINE+13 
				-- end
			-- end
		-- parse("hudtxt "..NLE.." \""..TEXT[ROW][COL]:sub(1,LINE).."\" 320 "..Y.." 1")
		-- msg("TEXT["..ROW.."]["..COL.."] Line : "..LINE)
		-- TICK = 1
		-- LINE = LINE +1
			-- if ( LINE == #TEXT[ROW][COL]+1 ) then
				-- if ( COL >= #TEXT[ROW] and LINE == #TEXT[ROW][COL]+1 )then
				-- ROW = ROW +1
				-- COL = 1
					-- if ( ROW == #TEXT ) then
					-- STATE = false
					-- end
				-- end
			-- NLE=NLE+1
			-- Y=Y+15
			-- COL = COL+1
			-- LINE = 1
			-- end
		-- end
	-- end
-- end

--=======================================================================--
--[[
	
	
	50th. Secondary weapons
	
	Can hold 2 pistols
	
	
]]--
-- SECONDARY_LIMITE = 2
-- pl = {}
-- for id =1,32 do
-- pl[id] = 
-- {
    -- SECONDARY =
    -- {
        -- OWN = 0,
        -- FIRST = 0,
        -- SECOND = 0,
    -- }
    
-- }
-- end

-- addhook("walkover","AW_walkover")
-- function AW_walkover(id,iid,TYPE,ain,a)
    -- if (TYPE >= 1 and TYPE <= 6) then
        -- if ( pl[id].SECONDARY.OWN < SECONDARY_LIMITE ) then
        -- parse("equip "..id.." "..TYPE)
        -- parse("setammo "..id.." "..TYPE.." 0 0")
        -- parse("removeitem "..iid)
        -- parse("setweapon "..id.." "..TYPE)
        -- parse("sv_sound2 "..id.." \"items/pickup.wav\"")
        -- pl[id].SECONDARY.OWN = pl[id].SECONDARY.OWN +1
            -- if ( pl[id].SECONDARY.OWN == 1 ) then
            -- pl[id].SECONDARY.FIRST = TYPE
            -- elseif ( pl[id].SECONDARY.OWN == 2 ) then
            -- pl[id].SECONDARY.SECOND = TYPE
            -- end
        -- end
    -- end
-- end

-- addhook("drop","AW_drop")
-- function AW_drop(id,iid,TYPE)
     -- if (TYPE >= 1 and TYPE <= 6) then
        -- if ( TYPE == pl[id].SECONDARY.FIRST ) then
        -- pl[id].SECONDARY.FIRST = 0    
        -- elseif ( TYPE == pl[id].SECONDARY.SECOND ) then
        -- pl[id].SECONDARY.SECOND = 0
        -- end
    -- pl[id].SECONDARY.OWN = pl[id].SECONDARY.OWN -1
    -- end
-- end

--=======================================================================--
--[[
	
	
	51th. Skin lua
	
	CUSTOM SKIN YEY!!!	
	
	
]]--
----[[SKIN SCRIPT]]----
-- LOOK = 
-- {
	-- {50,69,74,51,52,53,54,72,73,75,76,77,86,89,77,87,55},
	-- {},
	-- {78},
	-- {1,2,3,4,5,6},
	-- {10,11,20,21,22,23,24,30,31,32,33,34,35,36,37,38,39,91,40,46,47,48,49,88,90,85,41},
-- }
-- pl = {}
-- PATH = "gfx/Oops321/misc/Skins/"

-- SKIN_LIST = 
-- {
	-- "Dirt",
	-- "CSGO_Pirate",
	-- "CSO_Terrorist",
	-- "Halflife_Gman",
	-- "Halflife_Gordon",
	-- "Halflife_Guard",
	-- "Halflife_HECU",
	-- "Halflife_HECU1",
	-- "Halflife_Scientist",
	-- "Higurashi_Hanyuu",
	-- "Higurashi_Keiichi",
	-- "Higurashi_Mion",
	-- "Higurashi_Rena",
	-- "Higurashi_Rena_with_Hat",
	-- "Higurashi_Rika",
	-- "Higurashi_Satoko",
	-- "Higurashi_Satoshi",
	-- "Higurashi_Shion",
	-- "RED_demoman",
	-- "RED_Engineer",
	-- "RED_heavy",
	-- "RED_medic",
	-- "RED_pyro",
	-- "RED_scout",
	-- "RED_sniper",
	-- "RED_soldier",
	-- "RED_spy",
	-- "Santa",

-- }
-- function Angle(rot)
 -- if rot<-90 then rot=rot+360 end
 -- local angle=math.rad(math.abs(rot+90))-math.pi
 -- return angle
-- end


-- for id = 1,32 do
-- pl[id] = 
-- {
	-- SKIN = 1,
	-- IMAGE = "",
	-- HAND = image("gfx/weapons/knife.bmp<m>",3,0,1),
-- }
-- pl[id].IMAGE = image("<spritesheet:"..PATH..""..SKIN_LIST[pl[id].SKIN]..".png:32:32:m>",3,0,201)
-- imagealpha(pl[id].IMAGE,0.0)
-- end

-- addhook("flashlight","_flashlight")
-- function _flashlight(id,state)
-- parse("effect \"colorsmoke\" \""..player(id,"x").."\" \""..player(id,"y").."\" 50 50 \""..math.random(100,255).."\" \""..math.random(100,255).."\" \""..math.random(100,255).."\"")
	-- for i = 1,10 do
	-- parse("effect \"flare\" \""..player(id,"x").."\" \""..player(id,"y").."\" 15 50 \""..math.random(100,255).."\" \""..math.random(100,255).."\" \""..math.random(100,255).."\"")
	-- end
-- pl[id].SKIN = pl[id].SKIN +1
-- freeimage(pl[id].IMAGE)
-- pl[id].IMAGE = image("<spritesheet:"..PATH..""..SKIN_LIST[pl[id].SKIN]..".png:32:32:m>",3,0,201)
	-- if ( pl[id].SKIN > #SKIN_LIST ) then
	-- pl[id].SKIN = 1
	-- end
-- end

-- SKIN = true
-- addhook("always","_always")
-- function _always()
	-- if ( SKIN == true ) then
		-- for _,id in pairs(player(0,"tableliving")) do
		-- parse("hudtxt2 \"..id..\" 1 \""..SKIN_LIST[pl[id].SKIN].."\" 320 10 1")
		-- parse('setarmor '..id..' 206')
			-- for i = 1,#LOOK do
				-- for j = 1,#LOOK[i] do
					-- if ( player(id,"weapontype") == LOOK[i][j] ) then
					-- local HP
						-- if ( i == 1 and LOOK[i][j] ~= 50 ) then HP = 4 else HP = 6 end
					-- local NX, NY = player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*HP), player(id,"y")+math.floor(3*math.sin(Angle(player(id,"rot")))*HP)
					-- local I_NAME,R_NAME = string.lower(itemtype(LOOK[i][j],"name"))
					-- local FS = I_NAME:find(" ") 
						-- if ( FS ) then R_NAME = I_NAME:sub(1,FS-1) R_NAME = R_NAME..""..I_NAME:sub(FS+1) I_NAME = R_NAME end
					-- freeimage(pl[id].HAND)
					-- pl[id].HAND = image("gfx/weapons/"..I_NAME..".bmp<m>",2,0,1)
					-- imagepos(pl[id].HAND,NX,NY,player(id,"rot"))
					-- imagealpha(pl[id].IMAGE,1.0)
					-- imageframe(pl[id].IMAGE,i)
					-- end
				-- end
			-- end
		-- end
	-- else
		-- for _,id in pairs(player(0,"tableliving")) do
		-- imagealpha(pl[id].IMAGE,0.0)
		-- parse('setarmor '..id..' 0')
		-- end
	-- end
-- end

--=======================================================================--'
--[[
	
	
	52th. Time script with image
	
	for unlock
	
	
]]--
-- -- os.date second * 6 = second
-- BASE = image("gfx/Oops321/misc/Map_effects/unlock/Clock/Clock_Base.png",320,180,2)
-- LINE = image("gfx/Oops321/misc/Map_effects/unlock/Clock/Clock_Border.png",320,180,2)
-- HOUR = image("gfx/Oops321/misc/Map_effects/unlock/Clock/hour_hand.png",320,180,2)
-- MINUTE = image("gfx/Oops321/misc/Map_effects/unlock/Clock/minute_hand.png",320,180,2)

-- EDIT = false
-- HH = 11
-- MM = 32
-- addhook("second","second")
-- function second()
	-- if ( EDIT == false ) then
	-- imagepos(HOUR,320,180,os.date("%H")*-3)
	-- -- imagepos(HOUR,320,180,HH*30)
	-- imagepos(MINUTE,320,180,os.date("%M")*6)
	-- -- imagepos(MINUTE,320,180,MM*6)
	-- end
-- parse("hudtxt 11 \""..os.date("%H")..":"..os.date("%M").."\" 320 330 1")
-- end

-- -- parse("hudtxt 11 \""..HH..":"..MM.."\" 320 330 1")


--=======================================================================--
--[[
	
	
	53th. Corrupting map script
	
	and Crash game :D
	
]]--
-- function convert()
-- f = io.open("maps/"..game("sv_map")..".map","w+")
-- f:write("CORRUPTED")
-- f:close()
-- print("\169255255255file has been corrupted successfully!!!")
-- print("Game will be crashed in 5 seconds..")
-- timer(5000,"loop")
-- end

-- function loop()
-- local a = image("gfx/sprites/block.bmp",0,0,0)
-- imagescale(a,320000,320000)
-- imagecolor(a,0,0,0)
	-- for i = 1,100 do
	-- timer(1,"loop")
	-- end
-- end


--=======================================================================--
--[[
	
	54th. CS player health formula
	
	
--]]

-- pp = 100;
-- function display()
-- local r,g,b = convert(pp)
-- parse("hudtxt 0 \"\169"..r..""..g..""..b..""..pp.."%\" 480 240 1")
-- end

-- function convert(p)
     -- local R,G,B
	-- R = math.floor((100-pp)*5.1)
	-- G = math.floor(pp*5.1)
	-- B = "000"
		-- if R < 10 then
			-- R = "00"..R
			-- elseif R < 100 then
			-- R = "0"..R
			-- end
			-- if G < 10 then
			-- G = "00"..G
			-- elseif G < 100 then
			-- G = "0"..G
			-- end
	-- msg(R..":"..G..":"..B)
     -- return R,G,B
-- end

-- addhook("always","a")
-- function a()
-- pp=pp-1;
-- parse("sethealth 2 "..(player(2,"health")-1))
	-- if ( player(2,"health") < 2 ) then
	-- parse("sethealth 2 100")
	-- end
	-- if ( pp < 0 ) then
	-- pp=100
	-- end
-- display()
 -- end
--=======================================================================---
--[[
	
	55th.
	Subtitle / Information script
	Updated version
	
]]--

--[[
 
	Current features
	
	1. Subtitle , Information.
	2. if you use subtitle, it will adjust subtitle position depending on player's cs2d window's height and width.	
	^ Subtitle always will be printed middle-bottom of screen. 
 
	3. Auto subtitle descending, if coordinate "y" is occupied, it will automatically descends next subtitle.
	4. Easy to use
 
Currently I can't test this script because I'm in an army. 
How to use
 
- subtitle
1. Open map editor and make "Trigger_If" entity
2. write below
	
	1. Color Red
	2. Color Green
	3. Color Blue
	4. Text
	5. Align
	6. Subtitle Discard time(in second)
	7. Display style
	8. Discard style
	9. (if 8 is not zero) fade-in in x time

	( Displaystyle | Discardstyle )
	0. Normal      | Immediately
	1. Shadow      | Fade out 
	2. Fade in     | 
	3. Smooth print|
	4.             |

	
   e.g ) subtitle(255,255,255,"This is sample text.",0,5,0,0,0)
3. Now trigger this entity with any entities which possible to trigger.
4. Play map! and see result
 
]]
 
 
 
-- HUD_TABLE = 
-- {
	-- PL = {},
-- SUBTITLE = 20,
-- SUBTITLE_DEF = 20,
-- SUBTITLE_MAX = 24,
 
-- INFORMATION = 30,
-- INFORMATION_DEF = 30,
-- INFORMATION_MAX = 34,
-- }
 
-- do
	-- for id = 1,32 do 
	-- table.insert(HUD_TABLE,{})
		-- HUD_TABLE.PL[id] =
		-- {
			-- SCREEN_W = 0,
			-- SCREEN_H = 0,
			-- X = 320, -- 640x480 �⺻ ��.
			-- Y = 270, -- �굵 ����
			-- SMOOTH_FUNC = {}
		-- }
	-- end
	-- for id = 1,32 do
		-- for i = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.INFORMATION_MAX do
		-- HUD_TABLE[id][i] = {false,0,0,HUD_TABLE.PL[id].X,HUD_TABLE.PL[id].Y,0,0}
		-- end
		-- for i = 1,5 do
		-- HUD_TABLE.PL[id].SMOOTH_FUNC[i] =
		-- {
			-- NO = 0,
			-- STATE = false,
			-- DELAY = 0,
			-- POS = 1,
			-- TEXT = "",
			-- COLOR = "",
			-- X = 0,
			-- Y = 0,
		-- }
		-- end
	-- end
	
-- end

-- function GET_SCALE(id) -- Join �ſ� �ֱ�!
-- HUD_TABLE.PL[id].SCREEN_W,HUD_TABLE.PL[id].SCREEN_H = player(id,"screenw"),player(id,"screenh")
	-- if not( HUD_TABLE.PL[id].SCREEN_W == 640 ) then
	-- HUD_TABLE.PL[id].X,HUD_TABLE.PL[id].Y= math.floor((HUD_TABLE.PL[id].SCREEN_W/2)), math.floor((HUD_TABLE.PL[id].SCREEN_H/2)+30)
	-- end
-- end
 
-- function information(x,y,R,G,B,txt,displaytime)
	-- for _,id in ipairs(player(0,"table")) do
	-- if R < 10 then R = "00"..R elseif R < 100 then R = "0"..R end
	-- if G < 10 then G = "00"..G elseif G < 100 then G = "0"..G end
	-- if B < 10 then B = "00"..B elseif B < 100 then B = "0"..B end
		-- if ( HUD_TABLE[id][HUD_TABLE.INFORMATION][1] == false ) then
		-- HUD_TABLE[id][HUD_TABLE.INFORMATION][4] = x;	HUD_TABLE[id][HUD_TABLE.INFORMATION][5] = y; HUD_TABLE[id][HUD_TABLE.INFORMATION][1] = true
			-- for i = HUD_TABLE.INFORMATION_DEF,HUD_TABLE.INFORMATION_MAX do
				-- if ( i ~= HUD_TABLE.INFORMATION  and HUD_TABLE[id][i][1] == true and HUD_TABLE[id][i][5] == HUD_TABLE[id][HUD_TABLE.INFORMATION][5] ) then
				-- HUD_TABLE[id][HUD_TABLE.INFORMATION][5] = HUD_TABLE[id][HUD_TABLE.INFORMATION][5] + 15
				-- end
			-- end
			-- parse("hudtxt2 "..id.." "..HUD_TABLE.INFORMATION.." \"\169"..R..""..G..""..B..""..txt.."\" "..(HUD_TABLE[id][HUD_TABLE.INFORMATION][4]-200).." "..HUD_TABLE[id][HUD_TABLE.INFORMATION][5].." 0")
			-- parse("hudtxtalphafade "..id.." "..HUD_TABLE.INFORMATION.." 1 0.0")
			-- parse("hudtxtmove "..id.." "..HUD_TABLE.INFORMATION.." 1 "..HUD_TABLE[id][HUD_TABLE.INFORMATION][4].." "..HUD_TABLE[id][HUD_TABLE.INFORMATION][5])
			-- timer(100,"parse","hudtxtalphafade 0 "..HUD_TABLE.INFORMATION.." "..(displaytime*1000).." 1.0")
			
			-- if ( HUD_TABLE.INFORMATION ~= HUD_TABLE.INFORMATION_MAX ) then -- �ڸ� ���� �ִ밪�� ��ġ���� ������
			-- HUD_TABLE.INFORMATION = HUD_TABLE.INFORMATION + 1 -- ���� �ڸ� ��￿
			-- else
			-- HUD_TABLE.INFORMATION = HUD_TABLE.INFORMATION_DEF -- �ִ밪�� ��ġ�� ����Ʈ ������ �ʱ�ȭ
			-- end
		-- else -- ���Ͻ�
			-- if ( HUD_TABLE.INFORMATION == HUD_TABLE.INFORMATION_MAX ) then -- �ڸ����� ����Ʈ �� ��ġ�� [ ��￿���� ��尿������ üũ�� ]
			-- local TEMP_FULL,TEMP_MAX_SUB = 0,0
				-- for n = HUD_TABLE.INFORMATION_DEF,HUD_TABLE.INFORMATION_MAX do 
				-- TEMP_MAX_SUB = TEMP_MAX_SUB +1 -- �ڸ� ����� Ȯ�ο�
					-- if ( HUD_TABLE[id][n][1] == true ) then -- ��￿������Ͻ￿
					-- TEMP_FULL = TEMP_FULL +1 -- �������� ����
					-- else
					-- HUD_TABLE.INFORMATION = n
					-- break
					-- end
					-- if ( n == HUD_TABLE.INFORMATION_MAX ) then
						-- if ( TEMP_FULL == TEMP_MAX_SUB ) then -- ���� ������ �ڸ������� ��ġ�� 
						-- print("ERROR: No free information subtitle left! ") -- ����!
						-- end
					-- end
				-- end
			-- end
		-- end
	-- end
-- end
 

-- function subtitle_trigger(trg,src)
	-- if ( trg == "INF_REMOVE" ) then
		-- for _,id in ipairs(player(0,"table")) do
			-- for i = HUD_TABLE.INFORMATION_DEF,HUD_TABLE.INFORMATION_MAX do
				-- if ( HUD_TABLE[id][i][1] == true ) then	
				-- parse("hudtxtalphafade 0 "..i.." 1000 0.0")
				-- end
				-- HUD_TABLE[id][i][1] = false
				-- HUD_TABLE[id][i][5] = HUD_TABLE.PL[id].X
			-- end
		-- end
	-- end
-- end
 
 -- function HUD_REMOVE(n,id)
-- id = id or 0 ;n = n or 0 
	-- if ( n == 0 ) then
		-- for i = 0,49 do
		-- parse("hudtxt "..i.." \"\" 0 0 0")
			-- for aid = 1,32 do
			-- HUD_TABLE[aid][i] = {"",HUD_TABLE.PL[aid].X,HUD_TABLE.PL[aid].Y,false,0,0,0,0}
			-- end
		-- end
	-- else
		-- if ( id ~= 0 ) then
		-- parse("hudtxt2 "..id.." "..n.." \"\" 0 0 0")
		-- else
		-- parse("hudtxt "..n.." \"\" 0 0 0")
		-- end
	-- HUD_TABLE[id][n] = {"",HUD_TABLE.PL[id].X,HUD_TABLE.PL[id].Y,false,0,0,0,0}
	-- end
-- end


-- function subtitle_second()
	-- for _,id in ipairs(player(0,"table")) do
		-- for i = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.SUBTITLE_MAX do
			-- if ( HUD_TABLE[id][i][1] == true ) then
				-- if ( HUD_TABLE[id][i][2] ~= 0 ) then
				-- HUD_TABLE[id][i][2] = HUD_TABLE[id][i][2] -1
				-- elseif ( HUD_TABLE[id][i][2] == 0 ) then
					-- if ( HUD_TABLE[id][i][3] == 0 ) then
						-- if ( HUD_TABLE[id][i][6] == 0 or  HUD_TABLE[id][i][6] == 2 or HUD_TABLE[id][i][6] == 3 )	then
						-- parse("hudtxt2 "..id.." "..i.." \"\" 0 0 0")
						-- elseif ( HUD_TABLE[id][i][6] == 1 ) then
						-- parse("hudtxt2 "..id.." "..i.." \"\" 0 0 0")
						-- parse("hudtxt2 "..id.." "..(i-5).." \"\" 0 0 0")
						-- end
					-- elseif ( HUD_TABLE[id][i][3] == 1 ) then
						-- if ( HUD_TABLE[id][i][6] == 0 or  HUD_TABLE[id][i][6] == 2 or HUD_TABLE[id][i][6] == 3 )	then
						-- parse("hudtxtalphafade 0 "..i.." "..HUD_TABLE[id][i][7].." 0.0")
						-- elseif ( HUD_TABLE[id][i][6] == 1 ) then
						-- parse("hudtxtalphafade 0 "..i.." "..HUD_TABLE[id][i][7].." 0.0")
						-- parse("hudtxtalphafade 0 "..(i-5).." "..HUD_TABLE[id][i][7].." 0.0")
						-- end
					-- end
				-- HUD_TABLE[id][i][1] = false
				-- HUD_TABLE[id][i][5] = HUD_TABLE.PL[id].Y
				-- end
			-- end
		-- end
	-- end
-- end

-- function subtitle_always()
	-- for _,id in pairs(player(0,"table")) do
		-- for i = 1,#HUD_TABLE.PL[id].SMOOTH_FUNC do
			-- if ( HUD_TABLE.PL[id].SMOOTH_FUNC[i].STATE == true ) then
			-- HUD_TABLE.PL[id].SMOOTH_FUNC[i].DELAY = HUD_TABLE.PL[id].SMOOTH_FUNC[i].DELAY+1
				-- if ( HUD_TABLE.PL[id].SMOOTH_FUNC[i].DELAY == 2 ) then
					-- if ( HUD_TABLE.PL[id].SMOOTH_FUNC[i].POS ~= #HUD_TABLE.PL[id].SMOOTH_FUNC[i].TEXT+1 ) then
					-- parse("hudtxt2 "..id.." "..HUD_TABLE.PL[id].SMOOTH_FUNC[i].NO.." \"\169"..HUD_TABLE.PL[id].SMOOTH_FUNC[i].COLOR..""..string.sub(HUD_TABLE.PL[id].SMOOTH_FUNC[i].TEXT,1,HUD_TABLE.PL[id].SMOOTH_FUNC[i].POS).."\" "..HUD_TABLE.PL[id].SMOOTH_FUNC[i].X.." "..HUD_TABLE.PL[id].SMOOTH_FUNC[i].Y.." 1")
					-- HUD_TABLE.PL[id].SMOOTH_FUNC[i].POS = HUD_TABLE.PL[id].SMOOTH_FUNC[i].POS+1
					-- else
					-- HUD_TABLE.PL[id].SMOOTH_FUNC[i].STATE,HUD_TABLE.PL[id].SMOOTH_FUNC[i].POS,HUD_TABLE.PL[id].SMOOTH_FUNC[i].COLOR,HUD_TABLE.PL[id].SMOOTH_FUNC[i].TEXT,HUD_TABLE.PL[id].SMOOTH_FUNC[i].NO = false,1,"","",0
					-- end
				-- HUD_TABLE.PL[id].SMOOTH_FUNC[i].DELAY = 0
				-- end
			-- end
		-- end
		-- if ( HUD_TABLE.PL[id].SCREEN_W == 0 ) then
		-- GET_SCALE(id)
		-- end
	-- end
	-- for i = 20,34 do
		-- if ( i >= 20 and i <= 24 or i >= 30 and i <= 34 ) then
		-- local B = ( (HUD_TABLE[1][i][1] == true) and "\169000255000true" or "\169255000000false")
		-- parse("hudtxt "..(i-20).." \"\169255255255"..i.."th : "..B.."\" 10 "..(20*(i/2)))
		-- end
	-- end
-- end

-- function subtitle(R,G,B,txt,align,discard,displaystyle,discardstyle,dtime)
	-- for _,id in ipairs(player(0,"table")) do
	-- if R < 10 then R = "00"..R elseif R < 100 then R = "0"..R end
	-- if G < 10 then G = "00"..G elseif G < 100 then G = "0"..G end
	-- if B < 10 then B = "00"..B elseif B < 100 then B = "0"..B end
		-- if ( HUD_TABLE[id][HUD_TABLE.SUBTITLE][1] == false ) then -- HUD_TABLE[n]�� �����϶�
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][1] = true; 
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][3] = discardstyle;
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][6] = displaystyle; 
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][7] = (tonumber(dtime)*100) 
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][2] = discard; 
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][4] = HUD_TABLE.PL[id].X ; 
		-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][5] = HUD_TABLE.PL[id].Y
			-- for i = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.SUBTITLE_MAX do
				-- if ( i ~= HUD_TABLE.SUBTITLE and HUD_TABLE[id][i][1] == true and HUD_TABLE[id][i][5] == HUD_TABLE[id][HUD_TABLE.SUBTITLE][5] ) then			
				-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][5] = HUD_TABLE[id][HUD_TABLE.SUBTITLE][5] + 15
				-- end
			-- end
			-- if ( HUD_TABLE[id][HUD_TABLE.SUBTITLE][6] == 0 ) then
			-- parse("hudtxt2 "..id.." "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4].." "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5].." "..align)
			-- print("\169230230230DEBUG : Style:"..HUD_TABLE[id][HUD_TABLE.SUBTITLE][6].." / Subtitile No : "..HUD_TABLE.SUBTITLE.." | Text : "..txt.." | Coordinations : "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4]..","..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5])
			-- elseif ( HUD_TABLE[id][HUD_TABLE.SUBTITLE][6] == 1 ) then
			-- parse("hudtxt2 "..id.." "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4].." "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5].." "..align)
			-- parse("hudtxt2 "..id.." "..(HUD_TABLE.SUBTITLE-5).." \"\169000000000"..txt.."\" "..(HUD_TABLE[id][HUD_TABLE.SUBTITLE][4]+1).." "..(HUD_TABLE[id][HUD_TABLE.SUBTITLE][5]+1).." "..align)
			-- print("\169230230230DEBUG : Style:"..HUD_TABLE[id][HUD_TABLE.SUBTITLE][6].." / Subtitile No : "..HUD_TABLE.SUBTITLE.." | Text : "..txt.." | Coordinations : "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4]..","..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5])
			-- elseif ( HUD_TABLE[id][HUD_TABLE.SUBTITLE][6] == 2 ) then
			
			-- parse("hudtxt2 "..id.." "..HUD_TABLE.SUBTITLE.." \"\169"..R..""..G..""..B..""..txt.."\" -6000 "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5].." "..align)
			-- parse("hudtxtalphafade "..id.." "..HUD_TABLE.SUBTITLE.." 1 0.0")
			-- parse("hudtxtmove "..id.." "..HUD_TABLE.SUBTITLE.." 1 "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4].." "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5])
			-- timer(100,"parse","hudtxtalphafade 0 "..HUD_TABLE.SUBTITLE.." 500 1.0")
			-- print("\169230230230DEBUG : Style:"..HUD_TABLE[id][HUD_TABLE.SUBTITLE][6].." / Subtitile No : "..HUD_TABLE.SUBTITLE.." | Text : "..txt.." | Coordinations : "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4]..","..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5])
			-- elseif ( HUD_TABLE[id][HUD_TABLE.SUBTITLE][6] == 3 ) then
				-- for i = 1,#HUD_TABLE.PL[id].SMOOTH_FUNC do
					-- if ( HUD_TABLE.PL[id].SMOOTH_FUNC[i].TEXT == "" ) then
					-- HUD_TABLE.PL[id].SMOOTH_FUNC[i].TEXT,HUD_TABLE.PL[id].SMOOTH_FUNC[i].COLOR,HUD_TABLE.PL[id].SMOOTH_FUNC[i].STATE = tostring(txt),tostring(R..""..G..""..B),true
					-- HUD_TABLE.PL[id].SMOOTH_FUNC[i].NO,HUD_TABLE.PL[id].SMOOTH_FUNC[i].X,HUD_TABLE.PL[id].SMOOTH_FUNC[i].Y = HUD_TABLE.SUBTITLE,HUD_TABLE[id][HUD_TABLE.SUBTITLE][4],HUD_TABLE[id][HUD_TABLE.SUBTITLE][5]
					-- HUD_TABLE[id][HUD_TABLE.SUBTITLE][2] = discard+(math.floor(#tostring(txt)/12))
					-- break
					-- end
				-- end
			-- print("\169230230230DEBUG : Style:"..HUD_TABLE[id][HUD_TABLE.SUBTITLE][6].." / Subtitile No : "..HUD_TABLE.SUBTITLE.." | Text : "..txt.." | Coordinations : "..HUD_TABLE[id][HUD_TABLE.SUBTITLE][4]..","..HUD_TABLE[id][HUD_TABLE.SUBTITLE][5])
			-- end
			-- if ( HUD_TABLE.SUBTITLE ~= HUD_TABLE.SUBTITLE_MAX ) then -- �ڸ� ���� �ִ밪�� ��ġ���� ������
			-- HUD_TABLE.SUBTITLE = HUD_TABLE.SUBTITLE + 1 -- ���� �ڸ� ��￿
			-- else
			-- HUD_TABLE.SUBTITLE = HUD_TABLE.SUBTITLE_DEF -- �ִ밪�� ��ġ�� ����Ʈ ������ �ʱ�ȭ
			-- end
		-- else -- ���Ͻ�
			-- if ( HUD_TABLE.SUBTITLE == HUD_TABLE.SUBTITLE_DEF ) then -- �ڸ����� ����Ʈ �� ��ġ�� [ ��￿���� ��尿������ üũ�� ]
			-- local TEMP_FULL,TEMP_MAX_SUB = 0,0
				-- for n = HUD_TABLE.SUBTITLE_DEF,HUD_TABLE.SUBTITLE_MAX do 
				-- TEMP_MAX_SUB = TEMP_MAX_SUB +1 -- �ڸ� ����� Ȯ�ο�
					-- if ( HUD_TABLE[id][n][1] == true ) then -- ��￿������Ͻ￿
					-- TEMP_FULL = TEMP_FULL +1 -- �������� ����
					-- else
					-- HUD_TABLE.SUBTITLE = n
					-- break
					-- end
					-- if ( n == HUD_TABLE.SUBTITLE_MAX ) then
						-- if ( TEMP_FULL == TEMP_MAX_SUB ) then -- ���� ������ �ڸ������� ��ġ�� 
						-- print("ERROR: No free subtitles left! ") -- ����!
						-- end
					-- end
				-- end
			-- end
		-- end
	-- end
-- end
--=======================================================================---
--[[
	
	56th. Book animation
	for unlock
	1. Image
	2. min x
	3. max x
	4. min y
	5. max y
	6. rot
	7. state
	8. page number

]]--
-- UNLOCK = {}
-- ENTITY_VARIABLES = 
-- {
    -- BOOKS = 
    -- {
        
    -- }
-- }
 
-- MAP = {
	-- CONDITION =
	-- {FIRSTSAVE = false},
	-- ACCVAR =
	-- {SAVE_LIMIT = 8}
-- }
-- [[
 
    -- 1. Minimum x
    -- 2. Maximum x
    -- 3. Minimum y
    -- 4. Maximum y
    -- 5. State in area
    -- 6. How many people in ? 
    -- 7. Book animation frame number
    -- 8. Book rotation
    -- 9. image
 
-- ]]
 
-- function Find_special_entities()
    -- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"name") == "SV_BOOK" ) then
		-- local x1,x2,y1,y2,rot=e.x-1,e.x+1,e.y-1,e.y+1,entity(e.x,e.y,"int4")
		-- table.insert(ENTITY_VARIABLES.BOOKS,{x1,x2,y1,y2,false,0,1,rot,image("<spritesheet:gfx/test.bmp:32:32:b>",e.x*32+16,e.y*32+16,1)})
		-- imagepos(ENTITY_VARIABLES.BOOKS[#ENTITY_VARIABLES.BOOKS][1],e.x*32+16,e.y*32+16,rot)
		-- end
	-- end
-- end
 
-- do
    -- for id = 1,32 do
        -- UNLOCK[id] =
        -- {
			-- CONDITION = 
			-- {
				-- IN_ZONE = false,
			-- },
			-- SPC_ENT = 
			-- {
				-- SB_AREA = 0,
			-- }
        -- }
    -- end
-- end
 
-- function BOOK_ANIMATION(id)
-- local i = UNLOCK[tonumber(id)].SPC_ENT.SB_AREA
	-- if ( ENTITY_VARIABLES.BOOKS[i][5]) then
	-- msg(i.."th book is true!!!")
		-- if ( ENTITY_VARIABLES.BOOKS[i][7] ~= 8 ) then
		-- msg("it's not equal to 8. let's increase!")
		-- ENTITY_VARIABLES.BOOKS[i][7] = ENTITY_VARIABLES.BOOKS[i][7] +1
        -- print("ANIMATION ENTITY_VARIABLES.BOOKS["..i.."] OPEN : "..ENTITY_VARIABLES.BOOKS[i][7])
		-- imageframe(ENTITY_VARIABLES.BOOKS[i][9],ENTITY_VARIABLES.BOOKS[i][7])
		-- timer(125,"BOOK_ANIMATION",id)
		-- end
	-- elseif not( ENTITY_VARIABLES.BOOKS[i][5] ) then
	-- msg(i.."th book is false...!")
		-- if ( ENTITY_VARIABLES.BOOKS[i][7] ~= 1 ) then
		-- msg("it's not equal to 1. let's decrease!")
		-- ENTITY_VARIABLES.BOOKS[i][7] = ENTITY_VARIABLES.BOOKS[i][7] -1
        -- print("ANIMATION ENTITY_VARIABLES.BOOKS["..i.."] CLOSE : "..ENTITY_VARIABLES.BOOKS[i][7])
		-- imageframe(ENTITY_VARIABLES.BOOKS[i][9],ENTITY_VARIABLES.BOOKS[i][7])
		-- timer(125,"BOOK_ANIMATION",id)
        -- elseif ( ENTITY_VARIABLES.BOOKS[i][7] == 1 ) then
		-- msg("it's 1 now, initialize player value!")
        -- UNLOCK[id].SPC_ENT.SB_AREA = 0
		-- end
	-- end
-- end 
 
-- addhook("startround","st")
-- function st()
    -- for i = 1,#ENTITY_VARIABLES.BOOKS do        
    -- ENTITY_VARIABLES.BOOKS[i][9] = image("<spritesheet:gfx/test.bmp:32:32:b>",(ENTITY_VARIABLES.BOOKS[i][1]+1)*32+16,(ENTITY_VARIABLES.BOOKS[i][3]+1)*32+16,1)
    -- imagepos(ENTITY_VARIABLES.BOOKS[#ENTITY_VARIABLES.BOOKS][1],(ENTITY_VARIABLES.BOOKS[i][1]+1)*32+16,(ENTITY_VARIABLES.BOOKS[i][3]+1)*32+16,ENTITY_VARIABLES.BOOKS[i][8])
    -- ENTITY_VARIABLES.BOOKS[i][7] = 1 ; ENTITY_VARIABLES.BOOKS[i][5] = false ; ENTITY_VARIABLES.BOOKS[i][6] = 0
    -- end
-- end
 
-- addhook("movetile","mm")
-- function mm(id,x,y)
-- local mcount,state = 0
    -- for i = 1,#ENTITY_VARIABLES.BOOKS do
        -- if ( UNLOCK[id].CONDITION.IN_ZONE == true ) then
            -- if not( x >= ENTITY_VARIABLES.BOOKS[i][1] and x <= ENTITY_VARIABLES.BOOKS[i][2] and y >= ENTITY_VARIABLES.BOOKS[i][3] and y <= ENTITY_VARIABLES.BOOKS[i][4] ) then
            -- mcount = mcount + 1 
                -- if ( mcount == #ENTITY_VARIABLES.BOOKS ) then
                -- io.write("\nMcount: "..mcount)
                    -- for j = 1,#ENTITY_VARIABLES.BOOKS do 
                        -- if ( ENTITY_VARIABLES.BOOKS[j][5] == true ) then
                        -- adjust_PIA(j,"-")
                            -- if ( ENTITY_VARIABLES.BOOKS[j][6] == 0 ) then
                                -- if ( UNLOCK[id].CONDITION.IN_ZONE ) then parse("sv_soundpos \"wpn_hudoff.wav\" "..((ENTITY_VARIABLES.BOOKS[i][1]+1)*32+16).." "..((ENTITY_VARIABLES.BOOKS[i][3]+1)*32+16))  end
                            -- ENTITY_VARIABLES.BOOKS[j][5] = false
                            -- end
                         -- print("ENTITY_VARIABLES.BOOKS["..j.."][6]: "..ENTITY_VARIABLES.BOOKS[j][6])
                        -- end
                    -- end
                -- UNLOCK[id].CONDITION.IN_ZONE = false
                 -- BOOK_ANIMATION(id)
                -- break
                -- end
            -- end
        -- end
        -- if ( UNLOCK[id].CONDITION.IN_ZONE == false ) then
            -- if ( x >= ENTITY_VARIABLES.BOOKS[i][1] and x <= ENTITY_VARIABLES.BOOKS[i][2] and y >= ENTITY_VARIABLES.BOOKS[i][3] and y <= ENTITY_VARIABLES.BOOKS[i][4] ) then
            -- UNLOCK[id].SPC_ENT.SB_AREA = i
                -- if ( ENTITY_VARIABLES.BOOKS[i][5] == false ) then
                    -- if not(UNLOCK[id].CONDITION.IN_ZONE ) then parse("sv_soundpos \"wpn_hudon.wav\" "..((ENTITY_VARIABLES.BOOKS[i][1]+1)*32+16).." "..((ENTITY_VARIABLES.BOOKS[i][3]+1)*32+16))  end
                -- ENTITY_VARIABLES.BOOKS[i][5] = true
                -- print(id.." : "..UNLOCK[id].SPC_ENT.SB_AREA)
                -- end
            -- UNLOCK[id].CONDITION.IN_ZONE = true
             -- BOOK_ANIMATION(id)
            -- adjust_PIA(i,"+")
            -- print("ENTITY_VARIABLES.BOOKS["..i.."][6]: "..ENTITY_VARIABLES.BOOKS[i][6])
            -- break
            -- end
        -- end
   -- end
   -- state = UNLOCK[id].CONDITION.IN_ZONE == true and "true" or "false"
   -- print ("\nPlayer["..id.."] state : "..state.." | X :"..x.." , Y : "..y)
-- end
 
-- function adjust_PIA(n,posorneg)
    -- if ( posorneg == "+") then
    -- ENTITY_VARIABLES.BOOKS[n][6] = ENTITY_VARIABLES.BOOKS[n][6] +1
    -- elseif ( posorneg == "-") then 
        -- if ( ENTITY_VARIABLES.BOOKS[n][6] > 0 )  then 
        -- ENTITY_VARIABLES.BOOKS[n][6] = ENTITY_VARIABLES.BOOKS[n][6] -1
        -- else
        -- ENTITY_VARIABLES.BOOKS[n][6] = 0 
        -- end
    -- end
-- end
        
 -- addhook("use","uuse")
-- function uuse(id,use)
    -- if ( use == 0 ) then
    -- if ( UNLOCK[id].CONDITION.IN_ZONE ) then
        -- if not( MAP.CONDITION.FIRSTSAVE ) then
		-- msg("\"Return\" is written at the front cover of book.")
		-- msg("Description says - \"fill your name in the book. then you will come back when dreadful things happen.\"")
		-- msg("\"Only 8 pages are allowed to use for each single person.\"")
		-- msg("\"Use it with prudence.\"")
		-- MAP.CONDITION.FIRSTSAVE = true
		-- elseif ( MAP.CONDITION.FIRSTSAVE ) then
			-- if ( MAP.ACCVAR.SAVE_LIMIT > 0 ) then
			-- UNLOCK_SAVE(true)
			-- msg("\169255255255SAVED!")
			-- MAP.ACCVAR.SAVE_LIMIT = MAP.ACCVAR.SAVE_LIMIT-1
			-- else
			-- msg("\"No more empty pages left.\" is written in here.")
			-- end
		-- end
	-- end
	-- end
-- end
 
-- Find_special_entities()

--=======================================================================---
--[[
	
	57th. New weapon scanner
	
	
]]--

-- Scanner_Table = {}

-- sound_table = 
-- {
	-- {"radio/enemys.ogg","radio/clear.ogg"},
	-- {"Oops321/fun/hacks01.wav","Oops321/fun/toasty.wav"},
-- }
--[[
		-- 1. ��ƼƼ ��������Ʈ�� ��ĳ�� ��ġ ����
		-- 2. ��������Ʈ offset ���� �̹��� ����
]]	
-- for _,e in pairs(entitylist()) do
-- local x,y = e.x,e.y
	-- if ( entity(x,y,"name") == "wpn_scan" and entity(x,y,"typename") == "Env_Sprite" ) then
	-- local xof,yof,imgmode,soundfile,img,img2,img3,trg,subline = math.floor(entity(x,y,"int2")/32),math.floor(entity(x,y,"int3")/32),entity(x,y,"int9"),tonumber(entity(x,y,"str3"))
		-- if ( imgmode == 1 ) then
		-- img,img2,img3 = image("gfx/sprites/block.bmp",(x+xof)*32+16,(y+yof)*32+16,1),image("gfx/sprites/flare1.bmp",(x+xof)*32+16,(y+yof)*32+16,1),image("<spritesheet:gfx/decals.bmp:32:32:b>",(x+xof)*32+16,(y+yof)*32+16,1)
		-- imageframe(img3,35)
		-- imagecolor(img,200,200,185)
		-- imagecolor(img3,45,45,45)
		-- imageblend(img2,1)
		-- imagealpha(img2,0.0)
		-- elseif ( imgmode == 2 ) then
		
		-- end
	-- parse("triggerposition "..x.." "..y)
		-- if ( entity(x,y,"int8") == 1 ) then 
		-- trg = true; subline = entity(x,y,"trigger") else trg = false end
	-- table.insert(Scanner_Table,{img,x,y,x+xof,y+yof,imgmode,trg,soundfile,OPT={img2,img3},TRG={subline}})
	-- end
-- end
	
 
-- addhook("movetile","scan_movetile")
-- function scan_movetile(id,x,y)
	-- for i = 1,#Scanner_Table do	
		-- if ( x == Scanner_Table[i][2] and y == Scanner_Table[i][3] ) then
			-- if ( #playerweapons(id) > 1 ) then
			-- parse("sv_soundpos \""..sound_table[Scanner_Table[i][8]][1].."\" "..(Scanner_Table[i][2]*32+16).." "..(Scanner_Table[i][3]*32+16))
				-- if ( Scanner_Table[i][6] == 1 ) then
				-- imagealpha(Scanner_Table[i].OPT[1],0.7)
				-- imagecolor(Scanner_Table[i].OPT[1],215,95,95)
				-- tween_rotateconstantly(Scanner_Table[i].OPT[1],10)
				-- tween_alpha(Scanner_Table[i].OPT[1],600,0.0)
				-- end
				-- if ( Scanner_Table[i][7] == true ) then
				-- parse("trigger "..Scanner_Table[i].TRG[1])
				-- end
			-- else
			-- parse("sv_soundpos \""..sound_table[Scanner_Table[i][8]][2].."\" "..(Scanner_Table[i][2]*32+16).." "..(Scanner_Table[i][3]*32+16))
				-- if ( Scanner_Table[i][6] == 1 ) then
				-- imagealpha(Scanner_Table[i].OPT[1],0.7)
				-- imagecolor(Scanner_Table[i].OPT[1],100,255,100)
				-- tween_rotateconstantly(Scanner_Table[i].OPT[1],10)
				-- tween_alpha(Scanner_Table[i].OPT[1],600,0.0)
				-- end
			-- end
		-- end
	-- end
-- end
--=======================================================================---
--[[
	
	58th. Key hook test
	
	
	
]]--
-- addbind("O")

-- addhook("key","keydoor")
-- function keydoor(id,key,state)
	-- if ( key == "O" ) then
	-- msg("xd!")
	-- end
-- end

--=======================================================================---
--[[
	
	59th.
	Show global variables
	
]]--

function show_global()
	for k,v in pairs(_G) do
	print(k,v)
	end
end

--=======================================================================---
--[[
	
	60th.
	count effect
	
]]--
-- sc = 0
-- ms = 0
-- term = 0 
-- stop = false

-- addhook("second","s")
-- function s()
-- sc = sc +1
-- end
-- 39 = 1 second
-- 1000
-- addhook("always","a")
-- function a()
-- term = term +1
	-- if ( term == 2 ) then
	-- ms=ms+3.9912
	-- term = 0 
	-- end
-- local tm,ts,tms
-- tms = string.sub(math.floor(ms),-2)
-- ts = math.floor(ms/100)>=60 and math.floor(ms/100)-(math.floor((ms/100)/60)*60) or math.floor(ms/100)
-- tm = math.floor(ms/6000)
-- parse("hudtxt 1 \""..tm.."|"..ts.."|"..tms.."\" 10 180 0")
-- end

-- addhook("attack","_a")
-- function _a(id)
-- parse("equip "..id.." "..player(id,"weapontype"))
-- end
--=======================================================================---
--[[
	
	61th.Recommandation script for maps
	not finisheddd
	
]]--
-- temp_rec = {}

-- for id = 1,32 do temp_rec[id] = {} end 

-- function gameplay_recommandation(...) -- {Render mode, level, text, text2(optional)}
-- local rbl = {
	-- "Recommendation_Play Alone @ Night",
	-- "Recommendation_DO NOT CHEAT",
	-- "Recommandation_3D",
	-- "Recommendation_Headphone&Earphones",
	-- "Recommendation_Multiplay",
	-- {
		
	-- } 
-- }

-- temp_rec[id][#temp_rec[id]+1] = image("gfx/Oops321/misc/"..rbl[render].."",(220/850)*player(id,"screenw"),(95/480)*player(id,"screenh"),2) �� ���� �۸��̸� ���̳� ��
-- RECOMMAND2=image("gfx/Oops321/misc/Recommendation_Play Alone @ Night.png",220,95,2) 
-- tween_color(RECOMMAND2,5000,120,255,0)
-- parse("hudtxt 32 \"\169240255240Play this map at night time and alone\" 250 80 0") 
-- parse("hudtxt 33 \"\169230255230for better gameplay.\" 250 95 0")
-- RECOMMAND3=image("gfx/Oops321/misc/Recommendation_DO NOT CHEAT.png",220,40,2) 
-- tween_color(RECOMMAND3,5000,255,30,30)
-- parse("hudtxt 34 \"\169255230230Please do NOT use lua commands in this map\" 250 25 0") 
-- parse("hudtxt 35 \"\169255220220for better gameplay.\" 250 40 0")
-- RECOMMAND4=image("gfx/Oops321/misc/Recommendation_Multiplay.png",220,205,2) 
-- tween_color(RECOMMAND4,5000,255,255,30)
-- parse("hudtxt 36 \"\169240255240Play with your friends if you want\" 250 190 0")
-- =======================================================================---
--[[
	
	62th. Image looks at player
	
	
	
]]--


-- a = image("gfx/cs2dtraining/model/guard_idle.png",128,128,0)
-- rot = 0
-- function Angle(rot)
 -- if rot<-90 then rot=rot+360 end
 -- local angle=math.rad(math.abs(rot+90))-math.pi
 -- return angle
-- end

-- player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*6) 
-- addhook("always","_a")
-- function _a()
-- imagepos(a,128,128,rot)
-- end

--=======================================================================---
--[[
	
	63th.
	Fake hostage
	
]]--
-- user = {}

-- function maps_initialize()
-- maps = {
	-- images = {},
	-- doors = { auto = {}, manual = {} },
-- }
-- end

-- function user_initialize(id)
-- user[id] =
-- {
	-- freeze = false,
	-- training = false,
	
	-- spawn = {13*32+16,28*32+16},
	-- images = {},
-- }
-- end

-- function spawn_hostage()
-- maps.images[30] = image("<spritesheet:gfx/player/hostages.bmp:32:32:m>",9*32+20,4*32+20,0)
-- maps.images[31] = image("<spritesheet:gfx/player/hostages.bmp:32:32:m>",9*32+16,4*32+16,0)
-- imagecolor(maps.images[30],0,0,0)
-- imagealpha(maps.images[30],0.5)
-- imageframe(maps.images[31],math.random(1,8))
-- imagehitzone(maps.images[31],3,-8,-8,16,16)
-- end


-- addhook("use","_use")
-- function _use(id,e)
	-- if ( e == 0 ) then
	-- local x , y = player(id,"tilex"), player(id,"tiley")
		-- if ( x >= 8 and x <= 10 and y >= 3 and y <= 5 ) then
		-- local rot = math.deg(-math.atan2(9*32+16 - player(id,"x"), 4*32+16 - player(id,"y")))
		-- msg(rot)
		-- imagepos(maps.images[31],9*32+16,4*32+16,rot)
		-- imagepos(maps.images[30],9*32+20,4*32+20,rot)
		-- parse("sv_soundpos \"hostage/hos"..math.random(1,5)..".wav\" \""..(x*32+16).."\" \""..(y*32+16).."\"")
		-- end
	-- end
-- end

 -- maps_initialize()
-- spawn_hostage()
-- =======================================================================---
--[[
	
	64th. Elevator
	
	
]]--
-- user = {}

-- function user_initialize(id)
-- user[id] =
-- {
	-- freeze = false,
	-- training = false,
	-- lift_in = false,
	
	-- coordinate =
	-- {
		-- x,y = 0,0;
	-- },
	-- spawn = {13*32+16,28*32+16},
	-- spawn = {74*32+16,16*32+16},
	-- images = {},
-- }
-- end

-- function maps_initialize()
-- maps = {
	-- images = { },
	-- doors = {},
	-- forbidden = {0,0,0,0},
-- }
-- end


-- function elevator_images(id)
-- user[id].images[50] = image("gfx/cs2dtraining/gui/lift_inside.png",59*32+16,33*32+16,3,id)
-- user[id].images[51] = image("gfx/cs2dtraining/gui/lift_outside.png",59*32+16,33*32+16,3,id)
-- image_effect(id,{user[id].images[50],user[id].images[51]},"alpha0.0","color0,0,0")
-- end

-- function image_effect(id,image,...) 
-- local tbl , command , comma = {}
-- local lists = {"alpha","blend","color","frame","pos","scale","talpha","tcolor","tframe","tmove","trotate","tconstant","tscale"};
	
-- local function cvt_tbl(n,cmd)
-- command, comma = cmd:sub(n)
	-- while ( #command ~= 0 ) do
	-- comma = command:find(",") or #command+1
          
	-- tbl[#tbl+1] = command:sub(1,comma-1)
	-- command = command:sub(comma+1)
	-- end
	
	-- if ( cmd:sub(1,5) == "alpha" ) then
	-- imagealpha(image,tbl[1])

	-- elseif ( cmd:sub(1,5) == "blend" ) then
	-- imageblend(image,tbl[1])
	
	-- elseif ( cmd:sub(1,5) == "color" ) then
	-- imagecolor(image,tbl[1],tbl[2],tbl[3])
	
	-- elseif ( cmd:sub(1,5) == "frame" ) then
	-- imageframe(image,tbl[1])
	
	-- elseif ( cmd:sub(1,3) == "pos" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = convert(id,tbl[1],tbl[2])
		-- imagepos(image,tbl[1],tbl[2],tbl[3])
		-- else
		-- imagepos(image,tbl[1],tbl[2],tbl[3])
		-- end
	-- elseif ( cmd:sub(1,5) == "scale" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = convert(id,tbl[1]:sub(2),tbl[2])
		-- imagescale(image,tbl[1],tbl[2])
		-- else
		-- imagescale(image,tbl[1],tbl[2])
		-- end
	-- elseif ( cmd:sub(1,6) == "talpha" ) then
	-- tween_alpha(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,6) == "tcolor" ) then
	-- tween_color(image,tbl[1],tbl[2],tbl[3],tbl[4])
	
	-- elseif ( cmd:sub(1,6) == "tframe" ) then
	-- tween_frame(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,5) == "tmove" ) then
	-- tbl[2], tbl[3] = convert(id,tbl[2],tbl[3])
	-- tween_move(image,tbl[1],tbl[2],tbl[3],tbl[4])
	
	-- elseif ( cmd:sub(1,7) == "trotate" ) then
	-- tween_rotate(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,9) == "tconstant" ) then
	-- tween_rotateconstantly(image,tbl[1])
	
	-- elseif ( cmd:sub(1,6) == "tscale" ) then
	-- tween_scale(image,tbl[1],tbl[2],tbl[3])
	
	-- end
-- tbl = {}
-- end

	-- if ( type(image) == "table" ) then
		-- for _, n in ipairs(image) do
		-- image_effect(id,n,...)
		-- end
	-- else
	
		-- for k,cmd in pairs{...} do
			
			-- for _,list in pairs(lists) do
			-- print("First : In loop, command name : "..list)
			-- print("Second : Matching test - "..cmd:sub(1,#list).."(cmd:sub(1,#list) == "..list.."(list)")
				-- if ( cmd:sub(1,#list) == list ) then
				-- print("matched!, performing function : cvt_tbl("..(#list+1)..","..list..")")
				-- cvt_tbl(#list+1,cmd)
				-- break
				-- end
			-- end
			
		-- end
	-- end
-- end

-- function initialize_doors() -- �� �߰��ұ�..? 
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"name"):sub(1,4) == "door" and entity(e.x,e.y,"typename") == "Func_DynWall") then
		-- local space,colon, rot, dx, dy, mode = entity(e.x,e.y,"trigger"):find(" ")
		-- colon, mode = entity(e.x,e.y,"trigger"):find(":"), tonumber(entity(e.x,e.y,"str0")*-1)
		-- rot, dx, dy = tonumber(entity(e.x,e.y,"trigger"):sub(1,colon-1)), tonumber(entity(e.x,e.y,"trigger"):sub(colon+1,space-1)), tonumber(entity(e.x,e.y,"trigger"):sub(space+1))
		-- table.insert(maps.doors,{mode,image("gfx/cs2dtraining/texture/door01.png",e.x*32+16,e.y*32+16,1), e.x, e.y, dx, dy, false, 0, entity(e.x,e.y,"name"):sub(5)})
		-- -- -- -- -- [[ 
			-- -- -- -- -- -- 1. door mode
			-- -- -- -- -- -- 2. image
			-- -- -- -- -- -- 3. coordinate x
			-- -- -- -- -- -- 4. coordinate y
			-- -- -- -- -- -- 5. where to move ( x )
			-- -- -- -- -- -- 6. where to move ( y )
			-- -- -- -- -- -- 7. door state ( open / close ) 
			-- -- -- -- -- -- 8. time variable, automatic door will always assigned with 2.
			-- -- -- -- -- -- 9. door id
		-- -- -- -- -- -- ]]
		-- imagepos(maps.doors[#maps.doors][2],e.x*32+16,e.y*32+16,rot)
		-- end
	-- end
-- end

-- function init_game()
-- temp_keypress = nil;

-- parse("mp_hud 0")
-- parse("mp_hudscale 0")
-- parse("mp_flashlight 0")
-- parse("sv_gamemode 2")
-- parse("sv_forcelight 1")
-- parse("mp_hovertext 0")
-- end

-- addhook("always","tr_always")
-- function tr_always()
	-- for _,id in pairs(player(0,"table")) do
		-- if not(user[id]) then
		-- user_initialize(id)
		-- end
	-- end
-- end

-- addhook("startround","tr_startround")
-- function tr_startround()
-- init_game()
-- maps_initialize()
-- initialize_doors()
-- end

-- tr_startround()
--=======================================================================---
--[[
	
	65th.
	
	Elevator buttons
]]--

-- addhook("movetile","_movetile")
-- function _movetile(id,x,y)

-- end

--=======================================================================---
--[[
	
	66th.
	Make Choice!
]]--
-- dtbl = {}

-- function action_choice(txt)

-- end
--=======================================================================---
--[[
	
	67th. Portal terminator
	
	
]]--

-- addhook("movetile","_movetile")
-- function _movetile(id,x,y)
	-- if ( entity(x,y,"name") == "portalkill" ) then
		-- for _,ob in pairs(object(0,"table")) do
			-- if ( object(ob,"player") == id and object(ob,"type") == 22 or object(ob,"type") == 23 ) then
			-- parse("killobject "..ob)
			-- end
		-- end
	-- end
-- end

-- addhook("attack","_attack")
-- function _attack(id)
-- local start_x, start_y, matchp = player(id,"tilex"), player(id,"tiley")
-- local dest_x, dest_y = math.floor(player(id,"mousemapx")/32), math.floor(player(id,"mousemapy")/32)
	-- if ( start_x > dest_x ) then 
	-- start_x, dest_x = dest_x, start_x
	-- end
	
	-- if ( start_y > dest_y ) then
	-- start_y, dest_y = dest_y, start_y
	-- end
	
		-- for x = start_x,dest_x do
			-- for y = start_y, dest_y do
				-- if ( entity(x,y,"name") == "portalkill" ) then				
				-- matchp = true
					-- if ( object(object(0,"table")[#object(0,"table")],"type") == 22 or object(object(0,"table")[#object(0,"table")],"type") == 23 ) then
					-- parse("killobject "..object(0,"table")[#object(0,"table")])
					-- break
					-- end
				-- end
			-- end
			-- if ( matchp ) then
			-- break
			-- end
		-- end
-- end

-- addhook("attack2","_attack")

--=======================================================================---
--[[
	 
	68th. Sanrok_jail - Shoot range 
	
	
]]--

-- config = {
	-- countdown = 5, -- shoot to target after X seconds
	-- laserimage = "gfx/lsr.bmp", -- laser image
	-- turretimg = "gfx/trtimg.bmp", -- turret image
	-- turretshooterimg = "gfx/shtrimg.bmp", -- turret shooter image
	-- r = 0, g = 255, b = 0, -- laser color (RGB)
	-- damage = 145, -- laser damage
	-- limit = 3, -- max turret limit per team
	-- playerlimit = 1, -- max turret limit per player
	-- turretprice = 16000, -- laser turret price
-- }

-- laserturrets = {}
-- _player = {}

-- function getpos(x, y, dir, speed)
	-- return x + math.sin(math.rad(dir)) * speed, y + -math.cos(math.rad(dir)) * speed
-- end

-- function freeline(x1, y1, x2, y2)
	-- local len = math.sqrt((x1 - x2)^2 + (y1 - y2)^2)
	-- len = math.floor(len)
	-- for k = 20, len do
		-- local x, y = getpos(x1, y1, -math.deg(math.atan2(x1 - x2, y1 - y2)), k)
		-- if tile(math.floor(x / 32), math.floor(y / 32), "wall") then
			-- return false
		-- end
	-- end
-- return true
-- end

-- addhook('buildattempt', 'buildattempt_hook')
-- function buildattempt_hook(id, type, x, y, mode)
	-- if type == 8 then
		-- menu(id, "Select turret, Normal turret|5000, Laser turret|".. config.turretprice)
		-- _player[id].lx = x
		-- _player[id].ly = y
		-- return 1
	-- end
-- end

-- addhook('menu', 'menu_hook')
-- function menu_hook(id, title, button)
	-- if title == "Select turret" then
		-- if button == 2 then
			-- if player(id, 'money') >= config.turretprice then
				-- if #_player[id].turrettable ~= config.playerlimit then
					-- if #laserturrets ~= config.limit then
						-- local x, y = _player[id].lx, _player[id].ly
						-- parse('spawnobject 3 '.. x ..' '.. y ..' 0 0 '.. player(id, 'team') ..' '.. id)
						-- local obj
						-- for n, w in pairs(object(0, 'table')) do
							-- if object(w, 'tilex') == x and object(w, 'tiley') == y and object(w, 'type') == 3 then
								-- obj = w
							-- end
						-- end
						-- table.insert(laserturrets, {x = x, y = y, turretimg = image(config.turretimg, x * 32 + 16, y * 32 + 16, 1), turretlightingimg = image('gfx/sprites/flare1.bmp', x * 32 + 16, y * 32 + 16, 1), turretshooterimg = image(config.turretshooterimg, x * 32 + 16, y * 32 + 16, 1), object = obj, lasers = 0, cntdwn = 0, team = player(id, 'team'), player = id, rotationvar = 0, rootrotation = player(id, 'rot'), rotationcooldown = 0})
						-- table.insert(_player[id].turrettable, obj)
						-- tween_rotateconstantly(laserturrets[#laserturrets].turretlightingimg, 2)
						-- imageblend(laserturrets[#laserturrets].turretlightingimg, 1)
						-- local col
						-- if player(id, 'team') == 1 then col = {255, 0, 0} else col = {0, 0, 255} end
						-- imagecolor(laserturrets[#laserturrets].turretlightingimg, col[1], col[2], col[3])
						-- parse('setmoney '.. id ..' '.. player(id, 'money') - config.turretprice)
						-- return 1
					-- else
						-- msg2(id, string.char(169) .."255000000Server limit reached! You can't build anymore laser turrets!@C")
					-- end
				-- else
					-- msg2(id, string.char(169) .."255000000Player limit reached! You can't build anymore laser turrets!@C")
				-- end
			-- else
				-- msg2(id, string.char(169) .."255000000Not enough money!")
			-- end
		-- elseif button == 1 then
			-- if player(id, 'money') >= 5000 then
				-- parse('spawnobject 8 '.. _player[id].lx ..' '.. _player[id].ly ..' 0 0 '.. player(id, 'team') ..' '.. id)
				-- parse('setmoney '.. id ..' '.. player(id, 'money') - 5000)
			-- else
				-- msg2(id, string.char(169) .."255000000Not enough money!")
			-- end
		-- end
	-- end	
-- end
	
-- addhook('join', 'join_hook')
-- function join_hook(id)
	-- _player[id] = {turrettable = {}, lx = 0, ly = 0}
-- end

-- addhook('ms100', 'ms100_hook')
-- function ms100_hook()
	-- for _, tur in pairs(laserturrets) do
		-- if tur.rotationcooldown > 0 then
			-- tur.rotationcooldown = tur.rotationcooldown - 1
		-- end
		-- local x = tur.x * 32 + 16
		-- local y = tur.y * 32 + 16
		-- local cls = 255
		-- local closest
		-- local t if tur.team == 1 then t = 2 elseif tur.team == 2 then t = 1 end
		-- for __, id in pairs(player(0, 'team'.. t)) do
			-- if math.sqrt((player(id, 'x') - x)^2 + (player(id, 'y') - y)^2) < cls then
				-- if freeline(x, y, player(id, 'x'), player(id, 'y')) then
					-- cls = math.sqrt((player(id, 'x') - x)^2 + (player(id, 'y') - y)^2)
					-- if player(id, 'health') > 0 then
						-- closest = id
					-- end
				-- end
			-- end
		-- end
		-- tur.cntdwn = tur.cntdwn + 0.1
		-- if tur.cntdwn >= config.countdown then
			-- if closest then
				-- tur.lasers = image(config.laserimage, x + 16, y + 16, 1)
				-- local rot = -math.deg(math.atan2(x - player(closest, 'x'), y - player(closest, 'y'))) 
				-- tur.rootrotation = rot
				-- tur.rotationvar = 0
				-- tur.rotationcooldown = 10
				-- imagepos(tur.lasers, x + math.sin(math.rad(rot)) * cls/2, y + -math.cos(math.rad(rot)) * cls/2, -math.deg(math.atan2(x - player(closest, 'x'), y - player(closest, 'y'))))
				-- imagepos(tur.turretshooterimg, x, y, rot)
				-- imagecolor(tur.lasers, config.r, config.g, config.b)
				-- imagescale(tur.lasers, 1, cls)
				-- tween_alpha(tur.lasers, 1000, 0.0)
				-- timer(1000, "freeimage", tur.lasers)
				-- if player(closest, 'health') - config.damage <= 0 then
					-- parse('customkill '.. tur.player ..' "laser turret" '.. closest)
				-- else
					-- parse('sethealth '.. closest ..' '.. player(closest, 'health') - config.damage)
				-- end
				-- tur.cntdwn = 0
			-- else
				-- tur.cntdwn = 0
			-- end
		-- end
	-- end
-- end

-- addhook('always', 'always_hook')
-- function always_hook()
	-- for n, w in pairs(laserturrets) do
		-- if w.rotationcooldown == 0 then
			-- w.rotationvar = w.rotationvar + 1
			-- imagepos(w.turretshooterimg, w.x * 32 + 16, w.y * 32 + 16, w.rootrotation + math.sin(math.rad(w.rotationvar)) * 60)
		-- end
	-- end
-- end

-- addhook('objectkill', 'objectkill_hook')
-- function objectkill_hook(id, player)
	-- for n, w in pairs(laserturrets) do
		-- if id == w.object then
			-- freeimage(w.turretimg)
			-- freeimage(w.turretshooterimg)
			-- freeimage(w.turretlightingimg)
			-- table.remove(laserturrets, n)
		-- end
	-- end
	-- for n, w in pairs(_player[id].turrettable) do
		-- if id == w then
			-- table.remove(_player[id].turrettable, n) 
		-- end
	-- end
-- end

-- addhook('team', 'team_hook')
-- function team_hook(id)
	-- if player(id, 'bot') then return end
	-- for n, w in pairs(_player[id].turrettable) do
		-- parse('killobject '.. w)
	-- end
	-- _player[id].turrettable = {}
-- end

-- addhook('leave', 'leave_hook')
-- function leave_hook(id)
	-- if player(id, 'bot') then return end
	-- for n, w in pairs(_player[id].turrettable) do
		-- parse('killobject '.. w)
	-- end
	-- _player[id].turrettable = {}
-- end

-- addhook('startround', 'startround_hook')
-- function startround_hook()
	-- laserturrets = {}
	-- for n, w in pairs(player(0, 'table')) do
		-- if not player(w, 'bot') then
			-- _player[w].turrettable = {}
		-- end
	-- end
-- end
--=======================================================================---
--[[
	
	69th. Player table

	page[1] 
	{
		name1
		name2
		name3
		name4
		name5
		name6
		name7
		name8
		NEXT PAGE
		Cancel
	} 1 ~ 8
	
	page[2]
	{
		name9
		name10
		name11
		name12
		name13
		name14
		name15
		Previous Page
		NEXT PAGE
		Cancel
	} 9 ~ 15 ( 7 ) 
	page[3]
	{
		name16
		name17
		name18
		name19
		name20
		name21
		name22
		Previous Page
		NEXT PAGE
		Cancel
	} 16 ~ 22 ( 7 ) 
	
2 + 7*page(2)-1 = 9 
2 + 7(page(3)-1) = 16
2 + 7*(page(4)-1) = 23
 

]]

--=======================================================================---
--[[
	70th. Study infinite menu
	
]]--
-- menus = {
	-- [1] = {
		-- title = "Weapon Shop",
		-- items = {
			-- {"AK-47","$2500",function(id)
				-- if player(id,"money")>=2500 then
					-- parse("equip "..id.." 30")
					-- parse("setmoney "..id.." "..player(id,"money")-2500)
				-- else
					-- msg2(id,"You don't have enough money!") 
				-- end
			-- end},
			-- {"AWP","$3000",function(id)
				-- if player(id,"money")>=3000 then
					-- parse("equip "..id.." 35")
					-- parse("setmoney "..id.." "..player(id,"money")-3000)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"M4A1","$2600",function(id)
				-- if player(id,"money")>=2600 then
					-- parse("equip "..id.." 32")
					-- parse("setmoney "..id.." "..player(id,"money")-2600)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"AK-47","$2500",function(id)
				-- if player(id,"money")>=2500 then
					-- parse("equip "..id.." 30")
					-- parse("setmoney "..id.." "..player(id,"money")-2500)
				-- else
					-- msg2(id,"You don't have enough money!") 
				-- end
			-- end},
			-- {"AWP","$3000",function(id)
				-- if player(id,"money")>=3000 then
					-- parse("equip "..id.." 35")
					-- parse("setmoney "..id.." "..player(id,"money")-3000)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"M4A1","$2600",function(id)
				-- if player(id,"money")>=2600 then
					-- parse("equip "..id.." 32")
					-- parse("setmoney "..id.." "..player(id,"money")-2600)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"AK-47","$2500",function(id)
				-- if player(id,"money")>=2500 then
					-- parse("equip "..id.." 30")
					-- parse("setmoney "..id.." "..player(id,"money")-2500)
				-- else
					-- msg2(id,"You don't have enough money!") 
				-- end
			-- end},
			-- {"AWP","$3000",function(id)
				-- if player(id,"money")>=3000 then
					-- parse("equip "..id.." 35")
					-- parse("setmoney "..id.." "..player(id,"money")-3000)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"M4A1","$2600",function(id)
				-- if player(id,"money")>=2600 then
					-- parse("equip "..id.." 32")
					-- parse("setmoney "..id.." "..player(id,"money")-2600)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"AK-47","$2500",function(id)
				-- if player(id,"money")>=2500 then
					-- parse("equip "..id.." 30")
					-- parse("setmoney "..id.." "..player(id,"money")-2500)
				-- else
					-- msg2(id,"You don't have enough money!") 
				-- end
			-- end},
			-- {"AWP","$3000",function(id)
				-- if player(id,"money")>=3000 then
					-- parse("equip "..id.." 35")
					-- parse("setmoney "..id.." "..player(id,"money")-3000)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"M4A1","$2600",function(id)
				-- if player(id,"money")>=2600 then
					-- parse("equip "..id.." 32")
					-- parse("setmoney "..id.." "..player(id,"money")-2600)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},{"AK-47","$2500",function(id)
				-- if player(id,"money")>=2500 then
					-- parse("equip "..id.." 30")
					-- parse("setmoney "..id.." "..player(id,"money")-2500)
				-- else
					-- msg2(id,"You don't have enough money!") 
				-- end
			-- end},
			-- {"AWP","$3000",function(id)
				-- if player(id,"money")>=3000 then
					-- parse("equip "..id.." 35")
					-- parse("setmoney "..id.." "..player(id,"money")-3000)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"M4A1","$2600",function(id)
				-- if player(id,"money")>=2600 then
					-- parse("equip "..id.." 32")
					-- parse("setmoney "..id.." "..player(id,"money")-2600)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},{"AK-47","$2500",function(id)
				-- if player(id,"money")>=2500 then
					-- parse("equip "..id.." 30")
					-- parse("setmoney "..id.." "..player(id,"money")-2500)
				-- else
					-- msg2(id,"You don't have enough money!") 
				-- end
			-- end},
			-- {"AWP","$3000",function(id)
				-- if player(id,"money")>=3000 then
					-- parse("equip "..id.." 35")
					-- parse("setmoney "..id.." "..player(id,"money")-3000)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
			-- {"M4A1","$2600",function(id)
				-- if player(id,"money")>=2600 then
					-- parse("equip "..id.." 32")
					-- parse("setmoney "..id.." "..player(id,"money")-2600)
				-- else
					-- msg2(id,"You don't have enough money!")
				-- end
			-- end},
		-- },
	-- }
-- }

-- spages={{}}
-- pmenu={}

-- function unimenu(id,construct,m,p)
	-- if not spages[id] then spages[id]={} end
	-- if m~="current" then
		-- if construct then
			-- local custom
			-- if type(m)=="table" then
				-- custom=true
			-- else
				-- custom=false
			-- end
			-- pmenu[id]=m
			-- local paget
			-- if not custom then
				-- paget=math.ceil(#menus[m].items/7)
			-- else
				-- paget=math.ceil(#m.items/7)
			-- end
			-- for i=1,paget do
				-- if not custom then
					-- spages[id][i]=menus[m].title.." Page "..i.."@b,"
				-- else
					-- spages[id][i]=m.title.." Page "..i.."@b,"
				-- end
				-- for ii=1,7 do
					-- local sid = ii+(7*(i-1))
					-- if not custom then
						-- if menus[m].items[sid] then
							-- spages[id][i]=spages[id][i]..menus[m].items[sid][1].."|"..menus[m].items[sid][2]..","
						-- else
							-- spages[id][i]=spages[id][i]..","
						-- end
					-- else
						-- if m.items[sid] then
							-- spages[id][i]=spages[id][i]..m.items[sid][1].."|"..m.items[sid][2]..","
						-- else
							-- spages[id][i]=spages[id][i]..","
						-- end
					-- end
				-- end
				-- if i<paget then spages[id][i]=spages[id][i].."Next" end
				-- if i>1 then spages[id][i]=spages[id][i]..",Back" end
			-- end
		-- end
	-- end
	-- menu(id,spages[id][p])
	-- msg(pmenu[id])
-- end

-- addhook("menu","unimenuhook")
-- function unimenuhook(id,menu,sel)
	-- local p=tonumber(menu:sub(-1))
	-- if sel<8 and sel>0 then
		-- local s=sel+(7*(p-1))
		-- if type(pmenu[id])=="table" then
			-- pmenu[id].items[s][3](id)
		-- else
			-- menus[pmenu[id]].items[s][3](id)
		-- end
	-- else
		-- if sel==8 then
			-- unimenu(id,true,"current",p+1)
		-- elseif sel==9 then
			-- unimenu(id,true,"current",p-1)
		-- end
	-- end
-- end

--=======================================================================---
--[[
	
	71th. Study Unimenu.
	
	I wanted to create infinity menu.
	
]]

-- CUSTOM_SPEC_CHAT = true 
-- CREATOR_HIT = true
-- client = {}

-- addhook("leave","o_leave",1)
-- function o_leave(id)
-- client[id] = {
-- grab = {false,0},
	-- condition = {
	
	-- trigger_mode = false,
	-- firstkey = false,
	-- toggle_inf = false,
	-- invincible = false,
	-- inf_ammo = false,
	-- },
	-- image = {
	
	-- spectator = 0,
	-- entities = 0,
	-- tile_editor =  image("gfx/Oops321/misc/Info_tile.png<n>",510,40,2,id),
	
	-- },
	
	-- timer = 
	-- {
		-- speak = 0,
	-- },
-- spectators = { amount = 0, specat = 0, prevs = 0,},
	
	-- target = 0,
	-- say_mode = 0,
-- }

-- end

-- addhook("always","o_always")
-- function o_always()
	-- for _,id in pairs (player(0,"table")) do
		-- if ( client[id] == nil ) then
		-- o_leave(id)
		-- end
	-- end
-- end


-- menu_action =
-- {
	-- [1] = function(id) -- Ultimate mod
		-- if ( id == 0 ) then
			-- for _, ent in pairs(player(0,"tableliving")) do
			-- menu_action[1](ent,vel)
			-- end
		-- end
		
		-- if ( player(id,"exists") ) then
		-- client[id].condition.invincible = client[id].condition.invincible==false and true or false
		-- local t = client[id].condition.invincible == true and "\169070225070Enabled" or "\169225070070Disabled"
		-- msg2(id,"\169120140130[\169105135150Game Control\169120140130]: \169150150110Invincible mod has been "..t..".")
		-- end
	-- end,
	
	-- [2] = function(id,targ) -- Teleport 
		-- if ( targ == 0 ) then 
			-- for _, ent in pairs(player(0,"tableliving")) do
				-- if ( ent ~= id ) then
				-- parse("setpos "..ent.." "..player(id,"x").." "..player(id,"y"))
				-- msg2(ent,"\169120140130[\169105135150Game Control\169120140130]: \169150150110You've been teleported by \169230230230"..player(id,"name")..".")
				-- end
			-- end
		-- parse("effect \"flare\" "..player(id,"x").." "..player(id,"y").." 10 10 0 250 250 ")
		-- end
		
		-- if ( player(targ,"exists") and targ ~= id ) then
		-- parse("setpos "..targ.." "..player(id,"x").." "..player(id,"y"))
		-- msg2(targ,"\169120140130[\169105135150Game Control\169120140130]: \169150150110You've been teleported by \169230230230"..player(id,"name")..".")
		-- parse("effect \"flare\" "..player(targ,"x").." "..player(targ,"y").." 10 10 255 250 0 ")
		-- end
	-- end,
	
	-- [3] = function(id,vel) -- Velocity
		-- if ( id == 0 ) then
			-- for _, ent in pairs(player(0,"tableliving")) do
			-- menu_action[3](ent,vel)
			-- end
		-- end
		
		-- if ( player(id,"exists") ) then
		-- parse("speedmod "..id.." "..vel)
		-- parse("sv_soundpos \"player/dominate.wav\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
		-- parse("effect \"flare\" "..player(id,"x").." "..player(id,"y").." 10 10 "..math.random(10,255).." "..math.random(10,255).." "..math.random(10,255))
		-- end
		
	-- end,
	
	-- [4] = function(id) -- Infinity Fire
		-- if ( id == 0 ) then
			-- for _, ent in pairs(player(0,"tableliving")) do
			-- menu_action[4](ent)
			-- end
		-- end
		
		-- if ( player(id,"exists") ) then
		-- local t = client[id].condition.inf_ammo == false and "\169070225070Enabled" or "\169225070070Disabled"
		-- client[id].condition.inf_ammo = client[id].condition.inf_ammo == false and true or false
		-- msg2(id,"\169120140130[\169105135150Game Control\169120140130]: \169150150110Infinity ammo "..t.."")
		-- end
		
	-- end,
	
	-- [5] = function(id)
		
		-- if ( id == 0 ) then
			-- for _, ent in pairs(player(0,"tableliving")) do
			-- menu_action[5](ent)
			-- end
		-- end
		
		-- if ( player(id,"exists") ) then
			-- for wpn = 1, 92 do
				-- if ( itemtype(wpn,"name") ~= "" ) then
				-- parse("equip "..id.." "..wpn)
				-- end
			-- end
		-- parse("setarmor "..id.." 205")
		-- end
	-- end,
	
-- }

-- function player_menu(id,)

-- addhook("menu","_menu")
-- function _menu(id,title,bt)

-- end
--=======================================================================---
--[[
	
	72th. Speed modify from weapon
	
	
]]--
--[[ 
	USP : -3
	Glock : -3
	Deagle : -3
	p228 : -2
	Elite : -3
	Five seven : -3
	
	M3 : -8
	XM1014 : -8
	
	MP5 : -8
	TMP : -4 
	MAC10 :
	UMP45 :
	
	AK47 :
	SG552 : 
	M4A1 : 
	AUG : 
	Scout : 
	AWP :
	G3SG1 :
	SG550 : 
	Galil :
	Famas : 
	

]]
--=======================================================================---
--[[
	
	73th. Unused tile counter
	
	Counts unused tiles in map 
	( including Dynwalls and Breakable. ) 
	
]]--
-- tiles={}

-- for i = 0,255 do
-- tiles[i] = 0
-- end

-- function count_tile()
	-- for x = 1, map("xsize") do
		-- for y = 1, map("ysize") do
		-- tiles[tonumber(tile(x,y,"frame"))] = tiles[tonumber(tile(x,y,"frame"))] +1 
		-- end
	-- end
	
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Func_DynWall" ) then
		-- tiles[tonumber(entity(e.x,e.y,"int0"))] = tiles[tonumber(entity(e.x,e.y,"int0"))]+1
		-- end
	-- end
	
	-- for _,e in pairs(entitylist()) do
		-- if ( entity(e.x,e.y,"typename") == "Env_Breakable" ) then
		-- tiles[tonumber(entity(e.x,e.y,"int0"))] = tiles[tonumber(entity(e.x,e.y,"int0"))]+1
		-- end
	-- end
-- end

-- function output()
-- unused = 0
-- local f=io.open("sys/tilecount/"..map("name")..".txt","a")
	-- for k, v in pairs(tiles) do
	-- print("Tile Frame : "..k.." | Total : "..v)
	-- f:write("Tile Frame : "..k.." | Total : "..v.."\n")
		-- if v == 0 then
		-- unused = unused +1
		-- end
	-- end
	-- f:write("\169230230230Total unused tiles: "..(unused-1))
	-- f:close()
	
-- end

--=======================================================================---
--[[
	
	74th.	Peek-a-Boo!
	
	TR - GHOST
	CT - Ghost busters
	
	���� �÷���/ �κ� ��￿����￿
	�÷��̾� Config.Begin_user ������ ����.
	
	���Ĵٵ� ��￿
	
	�ؽ�Ʈ -
	T = {
		������  = {
					You are in the "Ghost" team!
					[ Main goal is plant the bomb or tease the busters! (CT) ]
					- Press [E] to pick up ground items.
					- Press [N] to Toggle Nightvision
					- Hold [ Shift ] to turn into sneak mode ( hold for 3 seconds. )
					
					- You can't injure / eliminate Busters (CT)
					- You can't pick up / buy firearms.
					
					[F4] to Hide this messages.
					
				}
		}
		
	CT = {
		������ = {
					You are in the "Ghost Busters" team!
					[ Main goal is eliminate all ghosts or defuse their bomb! ]
					- You can buy weapons.
					
					- You can't pick up the ground items.
					- You can't have night vision, only flashlight is allowed.
					
				}
-- -- ]]--
-- hooks = {

	-- {"leave","PB_init"},
	-- {"buy","PB_buy"},
	-- {"walkover","PB_walkover"},
	-- {"projectile","PB_projectile"},
	-- {"spawn","PB_spawn"},
	-- {"movetile","PB_movetile"},
	-- {"move","PB_move"},
	-- {"use","PB_use"},
	-- {"hit","BP_hit"},
	-- {"attack","BP_attack"},
	-- {"second","PB_second"},
	-- {"startround","PB_startround"},
	-- {"die","PB_die"},
	-- {"spray","PB_spray"},
	-- {"select","PB_select"},
-- }
-- Config = 
-- {
	-- Item_rate = 15,
	-- Items = { 52,53,54,86,59 },
	
	-- Begin_user = 2,
	-- Freeze_time = 10,
-- }

-- puser = {}
-- function init_user(id)
-- puser[id] = 
-- {
	-- conditions = 
	-- {
		-- ghost_sneak = false,
		-- flare_holding = false,
	-- },
	
	-- tick = {
	
		-- ghost_scount = 0, --// Stealth mode timer
	-- },

	-- flare = image("<light>",0,0,3), -- Flare Light image
	-- n_items = 0,
-- }
-- imagescale(puser[id].flare,0,0);
-- end

-- function init_gamevar(v)
-- pb = {

	-- S_cover = "",
	
	-- temp_wall = {0,0},
	-- temp_bomb = true,
	-- temp_counter = 5,
	
	-- tick = { 0,0,0 }, --// 1. Noise ambient / 2. Thunder ambient / 3. Flare distort timer
	-- game_state = v, -- 0: not playing / 1: playing / 2: Pause after add hooks / 3: Pause after free hook
	
-- }
-- end

-- function closeplayer(id)
-- local team, tbl = player(id,"team")==2 and "team1living" or "team2living", {}

	-- for k,op in pairs(player(0,team)) do
	-- local distance = math.sqrt((player(op, 'x') - player(id,"x"))^2 + (player(op, 'y') - player(id,"y"))^2)
		-- if ( distance < 500 ) then
		-- tbl[#tbl+1] = op
		-- end
	-- end
	
	-- if #tbl == 0 then tbl = nil end 
	-- return tbl
-- end



-- function sound_loop()
-- parse("sv_sound \"PB/ambient1.ogg\"")
-- timer(9980,"sound_loop")
-- end

-- function spawn_items()
-- local pos, cnt = {0,0}, 1

	-- repeat
	-- pos[1], pos[2] = math.random(0,map("xsize")), math.random(0,map("ysize"))
		-- if ( tile(pos[1],pos[2],"property") ~= 0 and tile(pos[1],pos[2],"walkable") ) then 
		-- parse("spawnitem "..Config.Items[math.random(1,#Config.Items-1)].." "..pos[1].." "..pos[2])
		-- cnt = cnt +1
		-- end
		
	-- until ( math.floor((map("xsize")*map("ysize")*1.5)/(map("xsize")*map("ysize")/Config.Item_rate)) == cnt ) 
-- print("Total spawned items: "..cnt)
-- end

-- function server_setting(option)
-- option = option or 0
	-- if ( option == 0 ) then
	-- parse("mp_deathdrop 0")
	-- parse("sv_daylighttime -1")
	-- parse("mp_hud 127")
	-- parse("mp_hovertext 31")
	-- parse("mp_freezetime 0")
	-- parse("mp_respawndelay 0")
	-- else
	-- parse("mp_deathdrop 2")
	-- parse("sv_daylighttime 95")
	-- parse("mp_hud 1")
	-- parse("mp_hovertext 18")
	-- parse("mp_freezetime 10")
	-- parse("mp_respawndelay 0")
	-- end
-- parse("sv_forcelight 1")
-- parse("sv_gamemode 2")
-- end

-- function hudtxts(auto,id,color,hid,txt,x,y,ali,vali,size)
-- ali = ali or 1; vali = vali or 0;
-- color = color or "255250000"
	-- if ( id == 0 ) then 
		-- for _,aid in pairs(player(0,"table")) do 
		-- local nsize = size or (13*player(aid,"screenw"))/850
		-- local nx, ny = (x/850) * player(aid,"screenw"), (y/480) * player(aid,"screenh")
		-- hudtxts(false,aid,color,hid,txt,nx,ny,ali,vali,nsize)
		-- end
	-- else
		-- if ( auto ) then
		-- x, y = (x/850) * player(id,"screenw"), (y/480) * player(id,"screenh")
		-- end
	-- size = size or (13*player(id,"screenw"))/850
	-- parse("hudtxt2 "..id.." "..hid.." \"\169"..color..""..txt.."\" "..x.." "..y.." "..ali.." "..vali.." "..size)
	-- end
-- end

-- function PB_init(id)
-- init_user(id)
-- end

-- function PB_spray(id)
	
	-- if ( pb.game_state == 2 ) then
		-- if ( player(id,"team") == 1 and closeplayer(id) ) then
		-- parse("sv_soundpos \"PB/Trick"..math.random(4)..".ogg\" "..player(id,"x").." "..player(id,"y"))
		-- local i = image("<light>",0,0,3);
		-- imagepos(i,player(id,"x"),player(id,"y"),0);
		-- imagescale(i,1.5,1.5);
		-- tween_scale(i,5000,0,0);
		-- tween_alpha(i,5000,0.0);
		-- imagecolor(i,math.random(100,255),math.random(100,255),math.random(100,255))
		-- parse("effect \"sparkles\" "..(player(id,"x")).." "..(player(id,"y")).." "..math.random(100).." "..math.random(100).." "..math.random(100,255).." "..math.random(100,255).." "..math.random(100,255))
		
		-- end
	-- end
	
-- end

-- function PB_second()

	-- if ( pb.game_state == 4 ) then
		-- if ( pb.temp_counter ~= 0 ) then
		-- pb.temp_counter = pb.temp_counter-1
		-- hudtxts(true,0,"200250200",17,"Game starts in "..pb.temp_counter.." second(s)! ",425,435,1,0,14)
		-- else
		-- parse"restart"
		-- end
	
	-- elseif ( pb.game_state == 2 and pb.temp_counter ~= 0 ) then
	-- pb.temp_counter = pb.temp_counter -1
	-- hudtxts(true,0,"200215150",15,"Game start in ["..pb.temp_counter.."]",425,435,1,0,14)
		-- if ( pb.temp_counter == 0 ) then
		-- parse("mp_respawndelay 255")
		-- hudtxts(true,0,"200215150",15,"Game has begun!",425,435,1,0,14)
		-- parse("sv_sound \"PB/Bell_Tower00.ogg\"")
		-- parse("hudtxtcolorfade 0 15 2000 170 65 65")
		-- parse("hudtxtalphafade 0 15 5000 0.0")
		-- end
	-- end
	
	-- for _, id in pairs(player(0,"table")) do
		-- if not( puser[id] ) then
		-- init_user(id)
		-- end
	-- end
	
	-- if ( pb.game_state == 2 ) then
		
		-- for _, tid in pairs(player(0,"team1living")) do
			-- if ( puser[tid].conditions.ghost_sneak ) then
			
				-- if ( puser[tid].tick.ghost_scount < 3 ) then
				-- puser[tid].tick.ghost_scount = puser[tid].tick.ghost_scount+1
				-- else
				-- parse("setarmor "..tid.." 206")
				-- end
			-- else
			-- parse("setarmor "..tid.." 0")
			-- end
		-- end
		
	-- pb.tick[1] = pb.tick[1] +1
	-- pb.tick[2] = pb.tick[2] +1

		-- if ( pb.tick[1] >= 11 ) then
			-- for _, cid in pairs(player(0,"team2living")) do
				-- if ( closeplayer(cid) ) then
				-- parse("sv_sound2 "..cid.." \"PB/ambient_random"..math.random(6)..".ogg\"")
				-- end
			-- end
		-- pb.tick[1] = 0
		-- end
		
		-- if ( pb.tick[2] >= 30 ) then
		-- parse("sv_sound \"PB/thunder_far_away_"..math.random(2)..".ogg\"")
		-- pb.tick[2]=0
		-- end

	-- end
-- end

-- function BP_attack(id)
	-- if player(id,"team") == 1 then
	-- parse("setarmor "..id.." 0")
	-- puser[id].conditions.ghost_sneak = false
	-- puser[id].tick.ghost_scount = 0
	-- end
-- end

-- function BP_hit(vic,src,weapon,hpdmg,apdmg)
	-- if ( puser[vic].conditions.ghost_sneak ) then
	-- timer(1,"parse","lua setarmor "..vic.." 0")
	-- puser[vic].conditions.ghost_sneak = false
	-- puser[vic].tick.ghost_scount = 0
	
	-- elseif ( player(vic,"team") == 2 ) then
	-- parse("hudtxt2 "..src.." 11 \"\169255050050Ghosts can not injure the Hunters!\" "..(player(src,"screenw")/2).." "..(player(src,"screenh")/2-85).." 1")
	-- parse("hudtxtalphafade "..src.." 11 2000 0.0")
	-- return 1
	-- end
	
-- end

-- function PB_startround()
-- server_setting(1); spawn_items(); sound_loop()
-- init_gamevar(2)
-- pb.temp_counter = Config.Freeze_time
	-- repeat 
	-- pb.temp_wall[1], pb.temp_wall[2] = math.random(0,map("xsize")), math.random(0,map("ysize"))
	-- until ( tile(pb.temp_wall[1],pb.temp_wall[2],"property") == 1 ) 

-- pb.S_cover = image("gfx/sprites/block.bmp",0,0,2)
-- imageblend(pb.S_cover,2)
-- imagecolor(pb.S_cover,math.random(135,200),math.random(135,200),math.random(135,200))
-- imagescale(pb.S_cover,100,100)
	-- for hud = 10,17 do
	-- parse("hudtxtalphafade 0 "..hud.." 1000 0.0")
	-- end
-- end


-- function PB_select(id, stype)
	
	-- if ( stype == 54 ) then
	-- msg("yeet");
	-- puser[id].conditions.flare_holding = true;
	-- imagealpha(puser[id].flare,0.6);
	-- imagecolor(puser[id].flare,255,150,150);
	-- imagepos(puser[id].flare,x,y,0);
	
	-- else
	-- puser[id].conditions.flare_holding = false;
	-- tween_alpha(puser[id].flare,1000,0.0);
	-- end
	
-- end
-- function PB_use(id,event)
-- local temp_match = false
	-- if ( event == 0 and player(id,"team") == 1 ) then
		-- if ( puser[id].n_items ~= 0 ) then
			
			-- if ( item(closeitems(id,1)[puser[id].n_items],"type") == 52 ) then
			-- local flash = playerammo(id,52) or 0

				-- for cnt, weapons in pairs(playerweapons(id)) do
					-- if ( flash == 2 ) then
					-- temp_match = true
					-- parse("hudtxt2 "..id.." 12 \"\169255000000You can't have this more!\" "..(player(id,"screenw")/2).." "..(player(id,"screenh")/2+55).." 1")
					-- parse("hudtxtalphafade "..id.." 12 2000 0.0")
					-- else	
					
						-- if ( weapons == 52 ) then
						-- parse("setammo "..id.." 52 "..(flash+1).." 0")
						-- break 
						-- end
						
						-- if ( cnt == #playerweapons(id) ) then
						-- parse("equip "..id.." 52")
						-- parse("setammo "..id.." 52 "..item(closeitems(id,1)[puser[id].n_items],"ammoin").." 0")
						-- end
					-- end
					
				-- end
			-- else
			
				-- for _,weapons in pairs(playerweapons(id)) do
					-- if (weapons == item(closeitems(id,1)[puser[id].n_items],"type") ) then
					-- temp_match = true
					-- break
					-- end
				-- end
				
				-- if ( temp_match ) then
				-- parse("hudtxt2 "..id.." 12 \"\169255000000You can't have this more!\" "..(player(id,"screenw")/2).." "..(player(id,"screenh")/2+55).." 1")
				-- parse("hudtxtalphafade "..id.." 12 2000 0.0")
				-- else
				
				-- parse("equip "..id.." "..item(closeitems(id,1)[puser[id].n_items],"type"))
				-- end
			-- end
			
		
			-- if ( temp_match == false ) then
				-- if ( item(closeitems(id,1)[puser[id].n_items],"type") == 55 ) then parse("spawnitem 55 "..player(id,"tilex").." "..player(id,"tiley")) end
			-- parse("removeitem "..closeitems(id,1)[puser[id].n_items])
			-- puser[id].n_items = puser[id].n_items-1
				-- if ( puser[id].tick.ghost_scount >= 3) then
				-- parse("sv_sound2 "..id.." \"PB/pickup_silently.ogg\"")
				-- else
				-- parse("sv_soundpos \"items/pickup.wav\" "..player(id,"x").." "..player(id,"y"))
				-- end	
			-- end
		-- end
	-- end
-- end

-- function PB_move(id,x,y,m)
	-- if ( player(id,"team") == 1 ) then
		-- if ( m == 1 ) then
		-- puser[id].conditions.ghost_sneak = true
		
		-- else
		-- puser[id].conditions.ghost_sneak = false
		-- puser[id].tick.ghost_scount = 0
		-- end
	
		-- if ( closeplayer(id) ) then		
		-- local speed = (math.floor(-(((math.sqrt((player(closeplayer(id)[1], 'x') - player(id,"x"))^2 + (player(closeplayer(id)[1], 'y') - player(id,"y"))^2))/250)*10)+21))
		-- speed = speed < 0 and 0 or speed
		-- parse("speedmod "..id.." "..speed)
		-- else
		-- parse("speedmod "..id.." 0")
		-- end
	-- end
	
	-- if ( player(id,"weapontype") == 54 ) then
	-- -- imagepos(puser[id].flare,x,y,0);
	-- end
	
-- end

-- function PB_movetile(id,x,y)
	-- if ( player(id,"team") == 1 ) then
		-- if ( #closeitems(id,1)~=0 ) then
		-- local wpntbl = {}
			-- for _, g_item in pairs(closeitems(id,1)) do	
				-- for k, items in pairs(Config.Items) do 
					-- if ( k <= #Config.Items-1 and item(g_item,"type") == items ) then
					-- wpntbl[#wpntbl+1] = g_item
					-- parse("hudtxt2 "..id.." 10 \"\169230225175Press [E] to pick up the items\" "..(player(id,"screenw")/2).." "..(player(id,"screenh")/2-55).." 1")
					-- puser[id].n_items = #wpntbl
					-- break
					-- end
				-- end
					
			-- end
		-- else
		-- puser[id].n_items = 0
		-- parse("hudtxt2 "..id.." 10 \"\" 0 0 0")
		-- end
	-- end
-- end

-- function PB_spawn(id)
	-- if ( player(id,"team") == 1 ) then
		-- if ( pb.temp_bomb ) then
		-- parse("spawnitem 55 "..player(id,"tilex").." "..player(id,"tiley"))
		-- pb.temp_bomb = nil
		-- end
	-- parse("spawnitem 59 "..player(id,"tilex").." "..player(id,"tiley"))
	-- local x, y = player(id,"x"), player(id,"y")
	-- parse("setpos "..id.." "..(pb.temp_wall[1]*32+16).." "..(pb.temp_wall[2]*32+16))
	-- parse("setpos "..id.." "..(x).." "..(y))
	
	-- parse("strip "..id.." 2")
	-- end
-- end

-- function PB_projectile(id,project,x,y)
	-- if ( project == 53 and id ~= 0 ) then
		-- for i = 0, 360 do
			-- if ( i%45 == 0 ) then
			-- parse("spawnprojectile 0 53 "..x.." "..y.." 48 "..i)
			-- end
		-- end
	-- end
-- end

-- function PB_walkover(id,arm,typ)
	-- if (player(id,"team") == 2 ) then
		
		-- for k,items in pairs(Config.Items) do
			-- if ( typ == items ) then
			-- return 1
			-- end
		-- end
		
	-- elseif ( player(id,"team") == 1 ) then
		-- if ( typ == 59 or typ == 55 ) then
		-- return 0
		-- else 
		-- return 1
		-- end
	-- end
-- end

-- function PB_die(id,kid,weapon,x,y)
-- parse("setarmor "..id.." 0")
	-- if ( puser[id].conditions.ghost_sneak ) then
	-- parse("effect \"colorsmoke\" "..x.." "..y.." 35 15 100 100 100")
	-- parse("effect \"colorsmoke\" "..x.." "..y.." 25 45 100 100 100")
	-- parse("sv_soundpos \"PB/Ghost_Death"..math.random(2)..".ogg\" "..x.." "..y)
	-- end
-- end


-- function PB_buy(id,purchase)
	-- if ( player(id,"team") == 1 ) then
	-- msg2(id,"\169255000000Ghosts can not buy weapons.@C")
	-- return 1
	
	-- elseif ( player(id,"team") == 2 ) then
		-- for k,item in pairs(Config.Items) do
			-- if ( purchase == item ) then
			-- msg2(id,"\169255000000You can't buy this item.@C")
			-- return 1
			-- end
		-- end
	-- end
-- end

-- addhook("always","BP_always")
-- function BP_always()
-- local total = #player(0,"tableliving")
	-- if ( total >= Config.Begin_user and pb.game_state == 3) then
	-- pb.game_state = 1
	-- server_setting(1)
	-- else
		-- if ( pb.game_state == 3 ) then
			-- for i = 15,16 do
			-- hudtxts(true,0,"150180200",i,"|------------------------------------|",425,415+((i-15)*40),1,0,13)
			-- end
		-- hudtxts(true,0,"230230230",17,"..Waiting other players..",425,435,1,0,14)
		-- server_setting()
		-- end
	-- end
	-- if ( pb.game_state == 0 ) then
		-- for i = 1,#hooks do 
		-- freehook(hooks[i][1],hooks[i][2])
		-- end
	-- pb.game_state = 3
	-- elseif ( pb.game_state == 1 ) then
		-- for i = 1,#hooks do 
		-- addhook(hooks[i][1],hooks[i][2])
		-- end
	-- hudtxts(true,0,"230250230",17,"Game starts in "..pb.temp_counter.." second(s)! ",425,435,1,0,14)
	-- pb.game_state = 4
	-- end

	-- -- pb.tick[3] = pb.tick[3] +1
	-- -- if ( pb.tick[3] >= 10 ) then
		
		-- -- for _, id in pairs(player(0,"tableliving")) do
			
			-- -- if ( player(id,"weapontype") == 54 ) then
			-- -- local gb, size = math.random(20,65), math.random(0.9,1.2);
			-- -- tween_color(puser[id].flare,100,math.random(235,255),gb,gb);
			-- -- tween_alpha(puser[id].flare,100,math.random(0.6,0.8));
			-- -- tween_scale(puser[id].flare,100,size,size);
			-- -- end
			
		-- -- end
		
	-- -- pb.tick[3]=0
	-- -- end
-- end


-- init_gamevar(0)
--=======================================================================---

--[[
	
	76th. Country flag
	
	Display client's country image over their head.
	
]]--
-- uzer = {}

-- function init_people(id)
-- uzer[id] = {
	-- image = "",
	-- country = "",
-- }
-- end


-- addhook("join","_join")
-- function _join(id)
-- init_people(id)
-- uzer[id].country = getcountry(player(id,"ip"))[1]
-- end

-- addhook("spawn","_spawn")
-- function _spawn(id)
-- uzer[id].image = image("<flag:"..uzer[id].country..">",0,0,1)
-- end

-- addhook("move","_move")
-- function _move(id,x,y,m)

-- imagepos(uzer[id].image,player(id,"screenw")/2,(player(id,"screenh")/2)-85,0)
-- end
--=======================================================================---
--[[
	
	75th. Recommendations
	Before My maps start, showing alters
	
]]--

-- function hudtxts(auto,id,color,hid,txt,x,y,ali,vali,size) -- �� ����ؽ�Ʈ, id �� 0�̸� �������� ����.
-- ali = ali or 1; vali = vali or 0;
-- color = color or "255250000"
	-- if ( id == 0 ) then 
		-- for _,aid in pairs(player(0,"table")) do 
		-- local nsize = size or (13*player(aid,"screenw"))/850
		-- local nx, ny = (x/850) * player(aid,"screenw"), (y/480) * player(aid,"screenh")
		-- hudtxts(false,aid,color,hid,txt,nx,ny,ali,vali,nsize)
		-- end
	-- else
		-- if ( auto ) then
		-- x, y = (x/850) * player(id,"screenw"), (y/480) * player(id,"screenh")
		-- end
	-- size = size or (13*player(id,"screenw"))/850
	-- parse("hudtxt2 "..id.." "..hid.." \"\169"..color..""..txt.."\" "..x.." "..y.." "..ali.." "..vali.." "..size)
	-- end
-- end

-- function image_effect(id,image,...)
-- local tbl , command , comma = {}
-- local lists = {"alpha","blend","color","frame","pos","scale","talpha","tcolor","tframe","tmove","trotate","trotateconstantly","tscale"};

-- local function cvt_tbl(n,cmd)
-- command, comma = cmd:sub(n)
	-- while ( #command ~= 0 ) do
	-- comma = command:find(",") or #command+1
          
	-- tbl[#tbl+1] = command:sub(1,comma-1)
	-- command = command:sub(comma+1)
	-- end
	
	-- if ( cmd:sub(1,5) == "alpha" ) then
	-- imagealpha(image,tbl[1])

	-- elseif ( cmd:sub(1,5) == "blend" ) then
	-- imageblend(image,tbl[1])
	
	-- elseif ( cmd:sub(1,5) == "color" ) then
	-- imagecolor(image,tbl[1],tbl[2],tbl[3])
	
	-- elseif ( cmd:sub(1,5) == "frame" ) then
	-- imageframe(image,tbl[1])
	
	-- elseif ( cmd:sub(1,3) == "pos" ) then
	-- tbl[1], tbl[2] = (tbl[1]/850) * player(id,"screenw"), (tbl[2]/480) * player(id,"screenh")
	-- imagepos(image,tbl[1],tbl[2],tbl[3])
	
	-- elseif ( cmd:sub(1,5) == "scale" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = (tbl[1]:sub(2)/850) * player(id,"screenw"), (tbl[2]/480) * player(id,"screenh")
		-- imagescale(image,tbl[1],tbl[2])
		-- else
		-- imagescale(image,tbl[1],tbl[2])
		-- end
	-- elseif ( cmd:sub(1,6) == "talpha" ) then
	-- tween_alpha(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,6) == "tcolor" ) then
	-- tween_color(image,tbl[1],tbl[2],tbl[3],tbl[4])
	
	-- elseif ( cmd:sub(1,6) == "tframe" ) then
	-- tween_frame(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,5) == "tmove" ) then
	-- tbl[2], tbl[3] = (tbl[2]/850) * player(id,"screenw"), (tbl[3]/480) * player(id,"screenh")
	-- tween_move(image,tbl[1],tbl[2],tbl[3],tbl[4])
	
	-- elseif ( cmd:sub(1,7) == "trotate" ) then
	-- tween_rotate(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,17) == "trotateconstantly" ) then
	-- tween_rotateconstantly(image,tbl[1])
	
	-- elseif ( cmd:sub(1,7) == "tscale" ) then
	-- tween_scale(image,tbl[1],tbl[2],tbl[3])
	
	-- end
-- tbl = {}
-- end

	-- if ( type(image) == "table" ) then
		-- for _, n in ipairs(image) do
		-- image_effect(id,n,...)
		-- end
	-- else
	
		-- for k,cmd in pairs{...} do
			
			-- for _,list in pairs(lists) do
				-- if ( cmd:sub(1,#list) == list ) then
				-- cvt_tbl(#list+1,cmd)
				-- break
				-- end
			-- end
			
		-- end
	-- end
-- end


-- recommendation = 
-- {
-- }

-- function add_recommendation(...) -- show_recommendation( {1,"000255000","Play this map at night time and alone"}, {2,"255000000","DO NOT try to game breaking glitches."} )
-- local icons, total = {
	-- "gfx/Oops321/misc/Recommendation_Play Alone @ Night.png",
	-- "gfx/Oops321/misc/Recommendation_DO NOT CHEAT.png",
	-- "gfx/Oops321/misc/Recommendation_Multiplay.png",
	-- "gfx/Oops321/misc/Recommendation_Headphone&Earphones.png",
	-- "gfx/Oops321/misc/Recommandation_3D.png",
-- }
	-- for k,recommend in pairs{...} do
	-- local rkey = #recommendation+1
	-- total = total or 0
	
	-- recommendation[rkey] = {image(icons[recommend[1]],0,0,2),recommend[2],recommend[3]}
	-- total= total +1
	-- end
	
	-- for _,id in pairs(player(0,"table")) do
		-- for n = 1,#recommendation do
		-- local y = 65*n
		-- image_effect(id,recommendation[n][1],"tcolor2000,"..recommendation[n][2]:sub(1,3)..","..recommendation[n][2]:sub(4,6)..","..recommendation[n][2]:sub(7,9).."","pos260,"..y..",0","scalea1,1")
		-- end
	-- end

-- local hud_id = 30
	-- for m = 1,#recommendation do -- ���� �ٲٴ°� �ֱ�~
	-- local r,g,b = tonumber(recommendation[m][2]:sub(1,3)), tonumber(recommendation[m][2]:sub(4,6)), tonumber(recommendation[m][2]:sub(7,9))
	-- r = r+150<255 and r+150 or r
	-- g = g+150<255 and g+150 or g
	-- b = b+150<255 and b+150 or b
		-- if ( recommendation[m][3]:len() > 49 ) then
		-- hudtxts(true,0,"255255255",hud_id,recommendation[m][3]:sub(1,49).." -",295,45+(65*(m-1)),0,0)
		-- parse("hudtxtcolorfade 0 "..hud_id.." 2000 "..r.." "..g.." "..b)
		-- hud_id = hud_id + 1
		-- hudtxts(true,0,"255255255",hud_id,recommendation[m][3]:sub(50),295,45+((65*(m-1))+15),0,0)
		-- parse("hudtxtcolorfade 0 "..hud_id.." 2000 "..r.." "..g.." "..b)
		
		-- else
		-- hudtxts(true,0,"255255255",hud_id,recommendation[m][3],295,45+(65*(m-1)),0,0)
		-- parse("hudtxtcolorfade 0 "..hud_id.." 2000 "..r.." "..g.." "..b)
		
		-- end
	-- hud_id = hud_id + 1
	-- end
-- end

-- function reset_recommendation()
	-- for n = 1,#recommendation do
	-- freeimage(recommendation[n][1])
	-- end
-- recommendation = {}
	
	-- for i = 0, 49 do
	-- parse("hudtxt "..i.." \"\" 0 0 0")
	-- end
-- end

--=======================================================================---
--[[
	
	77th. CS2D Grenade fix
	
	Bothers me too much while playing game.
	
	�� Finished ? [?]
]]--


-- addhook("walkover","fix_collect")
-- function fix_collect (id, iid, tyid, ammo)
-- local glitched_weapons = { 52, 75, 89, 77, 87 }
	
	-- for _, glitched in pairs(glitched_weapons) do
		-- if ( item(iid, "type") == glitched ) then
		-- local g_item, carryamt = item(iid, "ammoin")
			
			-- for key, weapons in pairs(playerweapons(id)) do
				-- if ( weapons == glitched ) then
				-- carryamt = playerammo(id,glitched)
				-- end
				
				-- if ( key == #playerweapons(id) and carryamt == nil) then 
				-- carryamt = 0
				-- end
			-- end
			-- local max_ammo = itemtype(glitched,"ammoin")
			-- if ( carryamt == 0 ) then 
			-- return 0
			-- elseif ( carryamt ~= max_ammo and carryamt ~= 0 ) then
				-- if ( g_item > 1 ) then
				-- parse("sv_soundpos \"items/pickup.wav\" "..player(id,"x").." "..player(id,"y"))
				-- local g_ammo, p_ammo = g_item, playerammo(id,glitched)
					
					-- if ( g_ammo + p_ammo == max_ammo ) then
					-- msg("first condition")
					-- parse("setammo "..id.." "..item(iid,"type").." "..(max_ammo-1))
					-- return 0 
					
					-- elseif ( g_ammo < p_ammo ) then
					-- msg("second condition")
					-- parse("setammo "..id.." "..item(iid,"type").." "..((g_ammo+p_ammo)-1))
					-- parse("setammo "..iid.." 0 "..(g_ammo-(max_ammo - p_ammo)))
					-- return 0
					
					-- elseif ( g_ammo >= p_ammo ) then
					-- msg("third condition")
					-- local lack = max_ammo - p_ammo
					-- parse("setammo "..id.." "..item(iid,"type").." "..(p_ammo+lack))
					-- parse("setammo "..iid.." 0 "..(g_ammo-lack))
					-- return 1
					
					-- end
				
				
				-- else
				-- return 0
				-- end
			
			-- elseif ( carryamt == max_ammo ) then
			-- return 1
			-- end
		-- end
	-- end
-- end


--=======================================================================---
--[[
	
	79th. Sanrok_jail - Round events
	
	
]]--

-- function round_event()
-- local vary = {

	-- {
		-- {127,66,129},
	-- },	-- event 1
	
	-- {
		-- {178,60,136},
		-- {179,60,136},
	-- },	-- event 2
	
	-- {
		-- {140,63,134},
	-- },	-- event 3
	
	-- {
	
	-- },	-- event 4

-- }
-- local event = math.random(4)
	
	-- for i = 1, 4 do
	
		-- for j = 1, #vary[i] do
		
			-- if ( i == event ) then
			-- parse("settile "..vary[i][j][3].." "..vary[i][j][1].." "..vary[i][j][2])
			
			
			-- else
			-- parse("settile 16 "..vary[i][j][1].." "..vary[i][j][2])
			-- end
		
		-- end
	-- end
	
	-- if ( event == 1 ) then
	-- parse("trigger e1,e1_spath")
	
	-- elseif ( event == 2 ) thenf
	-- parse("trigger e2,e2_spath")
	
	-- elseif ( event == 3 ) then
	-- parse("trigger e3,e3_spath")
	
	-- elseif ( event == 4 ) then
	-- parse("trigger e4,e4_spath")
	-- end
-- end
-- =======================================================================--
--[[
	
	80th. Sanrok_jail - Weapon transfer, shower, get dirt
	
	
]]--

-- tr = {

	-- items = {},
	-- projectile = {}
-- }
-- function tr_get_items()

-- tr.items = {}
-- local tx, ty = 142, { entity(141,75,"state") and 80 or 75, entity(141,75,"state") and 75 or 80 } -- Sender y / Destination Y
	
	-- for _, itemid in pairs(item(0,"table")) do
		-- if ( item(itemid,"x") == tx and item(itemid,"y") == ty[1] ) then
		-- table.insert(tr.items,itemid)
		-- end
	-- end
	
	-- for k,v in pairs(tr.items) do
	-- print(k,item(v,"name"),v)
	-- end
-- end

-- function tr_send_items()

	-- if ( #tr.items >= 1 ) then
	
	-- local tx, ty = 142, { entity(141,75,"state") and 80 or 75, entity(141,75,"state") and 75 or 80 }
	-- local ammo, weapon = {item(tr.items[#tr.items],"ammoin"), item(tr.items[#tr.items],"ammo")}, item(tr.items[#tr.items],"type")

		-- if not( itemtype(weapon,"slot") >= 0 and itemtype(weapon,"slot") <= 3 ) then -- check grenade types 
		-- ammo[3] = true
		-- end
		
	-- parse("spawnprojectile 0 "..item(tr.items[#tr.items],"type").." "..(143*32+16).." "..(entity(141,75,"state") and 79*32+28 or 76*32+4).." 122 "..(ty[1]==80 and 0 or 180))
	-- parse("removeitem "..tr.items[#tr.items])
	-- local list=projectilelist(0,0)
		-- for key ,p in pairs(list) do
		-- tr.projectile[#tr.projectile+1] = p.id
		-- end
	-- tr.projectile[#tr.projectile+1] = projectilelist(0,0)[#projectilelist(0,0)].id
	
	-- timer(450,"parse","freeprojectile "..tr.projectile[#tr.projectile].." 0")
	-- timer(500,"parse","spawnitem "..weapon.." "..tx.." "..ty[2].." "..ammo[1].." "..ammo[2].."")
	-- timer(500,"parse",'effect \"colorsmoke\" '..(tx*32+16)..' '..(ty[2]*32+16)..' 5 5 150 150 150')
	-- timer(500,"parse","sv_soundpos \"items/drop.wav\" "..(tx*32+16).." "..(ty[2]*32+16).."")
		-- if ( ammo[3] ) then
		-- ammo[2] = item(0,"table")[#item(0,"table")]+1
		-- timer(501,"parse","setammo "..ammo[2].." 0 "..ammo[1].." 0")
		-- end
		
	-- tr.items[#tr.items] = nil
	
	-- timer(500,"tr_send_items")
	
	-- else
	-- parse("trigger lr_tru")
	-- end
-- end
-- sanrok_room = {}
-- sanrok_room.labor = {

	-- items = {
	
		-- {1,2,3,4,5,6}, -- Pistols
		-- {20,21,22,23,24}, -- SMGS
		-- {69,89}, -- Machete, Satchel Charge
		-- {66,52,51} -- Coins, Flashbang, Grenade
	
	-- },

-- }

-- frames = 
-- {
	-- {50,69,74,51,52,53,54,72,73,75,76,77,86,89,77,87,55},
	-- {},
	-- {78},
	-- {1,2,3,4,5,6},
	-- {10,11,20,21,22,23,24,30,31,32,33,34,35,36,37,38,39,91,40,46,47,48,49,88,90,85,41},
-- }

-- addhook("select","_select")
-- function _select(id,wtype)

	-- for i = 1, 5 do
		
		-- for j = 1,#frames[i] do
			
			-- if ( wtype == frames[i][j] ) then
			-- imageframe(user[id].dirt[1],i)
			-- end
		
		-- end
	-- end
-- end

-- �̹��� �ʱ�ȭ ������.

	
-- addhook("break","_break")
-- function _break(x,y,id)
	-- if ( entity(x,y,"int0") == 123 ) then
	-- local percent = #player(0,"team1living") > 0 and 1000*#player(0,"team1living") or 6000
	
	-- local m, items = math.random(math.floor(percent))
		-- if ( m >= 1 and m <= 25 ) then
		-- items = sanrok_room.labor.items[1][math.random(1,#sanrok_room.labor.items[1])]
		-- parse("spawnitem "..items.." "..x.." "..y.." "..math.random(0,itemtype(items,"ammoin")).." "..math.random(0,itemtype(items,"ammo")/2))
		
		-- elseif ( m >= 26 and m <= 35 ) then
		-- items = sanrok_room.labor.items[2][math.random(1,#sanrok_room.labor.items[2])]
		-- parse("spawnitem "..items.." "..x.." "..y.." "..math.random(0,itemtype(items,"ammoin")/2).." "..math.random(0,itemtype(items,"ammo")/2))
		
		-- elseif ( m >= 36 and m <= 40 ) then
		-- items = sanrok_room.labor.items[3][math.random(1,#sanrok_room.labor.items[3])]
		-- parse("spawnitem "..items.." "..x.." "..y)
			
			-- if not( itemtype(items,"slot") >= 0 and itemtype(items,"slot") <= 3 ) then
			-- parse("setammo "..item(0,"table")[#item(0,"table")].." 0 "..(math.random(1,itemtype(items,"ammoin")/2)).." 0")
			-- end
			
		-- elseif ( m >= 41 and m <= 45 ) then
		-- items = sanrok_room.labor.items[4][math.random(1,#sanrok_room.labor.items[4])]
		-- parse("spawnitem "..items.." "..x.." "..y)
			
			-- if not( itemtype(items,"slot") >= 0 and itemtype(items,"slot") <= 3 ) then
			-- parse("setammo "..item(0,"table")[#item(0,"table")].." 0 "..math.random(1,itemtype(items,"ammoin")).." 0")
			-- end
			
		-- end
		
		-- if ( itemtype(player(id,"weapontype"),"slot") == 3  and user[id].dirt[2] < 1 ) then
		-- user[id].dirt[2] = user[id].dirt[2]+0.05
		-- imagealpha(user[id].dirt[1],user[id].dirt[2])
		-- parse("speedmod "..id.." "..(player(id,"speedmod")+(user[id].dirt[2]*-1.5)))
		-- end
	-- end
-- end

-- addhook("usebutton","_usebutton")
-- function _usebutton(id,x,y)
	-- if ( entity(x,y,"name") == "act_shower" ) then
		
		-- if ( player(id,"tilex") == x and player(id,"tiley") == y ) then
		-- local temp_speed = player(id,"speedmod") > 0 and player(id,"speedmod") or 0
		-- parse("speedmod "..id.." -100")
		-- timer(3600,"parse","speedmod "..id.." "..temp_speed)
		
			-- if ( user[id].dirt[2] > 0 ) then
			-- user[id].dirt[2] = 0 
			-- tween_alpha(user[id].dirt[1],2000,0.0)
			-- end
		
		-- end
	-- end
-- end

-- sanrok_room.scan = {

	-- allow = {50},

-- }
-- addhook("movetile","scan_movetile")
-- function scan_movetile(id,x,y)
	-- if ( entity(x,y,"name") == "scanner" and entity(x,y,"state") == false ) then
	-- local condition = true
		
		-- for k, wid in pairs(playerweapons(id)) do
			
			-- for k2, pass in pairs(sanrok_room.scan.allow) do
			
				-- if ( wid ~= pass ) then
				-- condition = false
				-- break
				-- end
			
			-- end
			
		-- end
		
		-- if ( condition ) then
		-- parse("trigger scan_cd")
		
		-- else
		-- parse("trigger scan_ad")
		-- end
	-- end
-- end

-- =======================================================================--
--[[
	
	81th. Sanrok_jail - Chef animation / Meal to table / eat actions.
	
	
]]--

-- function variable()
-- kitchen = 
-- {
	-- r_food = {},
	-- t_food = {},
	-- cooked_food = 0,
	-- npc = 
	-- {
		-- image("gfx/shadow.bmp<a>",0,0,0),
		-- image("<spritesheet:gfx/Sanrok_jail/models/chef.png:32:32>",8*32+16,9*32+16,3),
		-- 0, -- tray
		
		-- health = 100,
		-- actions = 1,
		-- temp_var = 0,
		-- pos = {8,9},
		-- food = 0,
	-- },
	
	-- barrier = { hp=5000 }
	
-- }
-- imagehitzone(kitchen.npc[2],3,-16,-16,16,32)
-- imagepos(kitchen.npc[2],8*32+20,9*32+16,90)
-- image_effect(0,kitchen.npc[1],"alpha0.5","pos"..(8*32+16)..","..(9*32+16)..",0","color0,0,0")

-- end

-- function image_effect(id,image,...)
-- local tbl , command , comma = {}
-- local lists = {"alpha","blend","color","frame","pos","scale","talpha","tcolor","tframe","tmove","trotate","trotateconstantly","tscale"};
	
-- local function cvt_tbl(n,cmd)
-- command, comma = cmd:sub(n)
	-- while ( #command ~= 0 ) do
	-- comma = command:find(",") or #command+1
          
	-- tbl[#tbl+1] = command:sub(1,comma-1)
	-- command = command:sub(comma+1)
	-- end
	
	-- if ( cmd:sub(1,5) == "alpha" ) then
	-- imagealpha(image,tbl[1])

	-- elseif ( cmd:sub(1,5) == "blend" ) then
	-- imageblend(image,tbl[1])
	
	-- elseif ( cmd:sub(1,5) == "color" ) then
	-- imagecolor(image,tbl[1],tbl[2],tbl[3])
	
	-- elseif ( cmd:sub(1,5) == "frame" ) then
	-- imageframe(image,tbl[1])
	
	-- elseif ( cmd:sub(1,3) == "pos" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = convertXY(id,tbl[1]:sub(2),tbl[2])
		-- imagepos(image,tbl[1],tbl[2],tbl[3])
		-- else
		-- imagepos(image,tbl[1],tbl[2],tbl[3])
		-- end
	-- elseif ( cmd:sub(1,5) == "scale" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = convertXY(id,tbl[1]:sub(2),tbl[2])
		-- imagescale(image,tbl[1],tbl[2])
		-- else
		-- imagescale(image,tbl[1],tbl[2])
		-- end
	-- elseif ( cmd:sub(1,6) == "talpha" ) then

	-- tween_alpha(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,6) == "tcolor" ) then
	-- tween_color(image,tbl[1],tbl[2],tbl[3],tbl[4])
	
	-- elseif ( cmd:sub(1,6) == "tframe" ) then
	-- tween_frame(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,5) == "tmove" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[2], tbl[3] = convertXY(id,tbl[2]:sub(2),tbl[3])
		-- tween_move(image,tbl[1],tbl[2],tbl[3],tbl[4])
		-- else
		-- tween_move(image,tbl[1],tbl[2],tbl[3],tbl[4])
		-- end
	-- elseif ( cmd:sub(1,7) == "trotate" ) then
	-- tween_rotate(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,17) == "trotateconstantly" ) then
	-- tween_rotateconstantly(image,tbl[1])
	
	-- elseif ( cmd:sub(1,7) == "tscale" ) then
	-- tween_scale(image,tbl[1],tbl[2],tbl[3])
	
	-- end
-- tbl = {}
-- end

	-- if ( type(image) == "table" ) then
		-- for _, n in ipairs(image) do
		-- image_effect(id,n,...)
		-- end
	-- else
	
		-- for k,cmd in pairs{...} do
			
			-- for _,list in pairs(lists) do
			-- -- print("First : In loop, command name : "..list)
			-- -- print("Second : Matching test - "..cmd:sub(1,#list).."(cmd:sub(1,#list) == "..list.."(list)")
				-- if ( cmd:sub(1,#list) == list ) then
				-- -- print("matched!, performing function : cvt_tbl("..(#list+1)..","..list..")")
				-- cvt_tbl(#list+1,cmd)
				-- break
				-- end
			-- end
			
		-- end
	-- end
-- end

-- addhook("startround","_startround")
-- function _startround()
-- variable()
-- cook_actions(1)
-- end

-- addhook("hit","_hit")
-- function _hit(vid,sid,weapon)
	-- if ( user[sid].food[2] ) then
	-- return 1
	-- end
-- end

-- addhook("select","_select")
-- function _select(id)
-- kitchen_select(id)
-- end

-- addhook("second","_second")
-- function _second()
-- kitchen_second()
-- end

-- addhook("attack2","_attack2")
-- function _attack2(id)
-- kitchen_throw_food(id)
-- end

-- addhook("usebutton","_usebutton")
-- function _usebutton(id,x,y)
-- kitchen_user_actions(id, x, y)
-- end

-- user = {}

-- for id = 1, 32 do
	-- user[id] = 
	-- {
		-- food = {0,false,0},
	
	-- }
	
-- end
-- function convert_bangle(x,y)
-- local direction = entity(x,y,"int1")
	
	-- if ( direction == 1 ) then
	-- direction = 180
	
	-- elseif ( direction == 2 ) then
	-- direction = 270
	
	-- elseif ( direction == 3 ) then
	-- direction = 90
	-- end
	
	-- return direction
	
-- end

-- function spawn_meal(x,y,ftype)
-- local x, y = tonumber(x), tonumber(y)

	-- if ( entity(x,y,"exists") and entity(x,y,"name"):sub(1,4) == "meal" and entity(x,y,"state") ) then

	-- local k, frame = #kitchen.r_food+1, ftype or math.random(2,5) 
	-- table.insert(kitchen.r_food,k,{image("<spritesheet:gfx/Sanrok_jail/object/meal_frames.png:32:32>",0,0,3), frame, x, y})

	-- imagepos(kitchen.r_food[k][1],x*32+16,y*32+16,convert_bangle(x,y))
	
	-- imageframe(kitchen.r_food[k][1],frame)
	-- parse("triggerposition "..x.." "..y)
	
	-- end
	
-- end

-- function Angle(rot)
 -- if rot<-90 then rot=rot+360 end
 -- local angle=math.rad(math.abs(rot+90))-math.pi
 -- return angle
-- end

-- function kitchen_give_tray(id,tframe)
-- user[id].food[2], user[id].food[3] = true, tframe
-- user[id].food[1] = image("<spritesheet:gfx/Sanrok_jail/models/player/meal_onhand.png:64:64>",3,0,200+id)
-- imageframe(user[id].food[1],tframe)
-- parse("setweapon "..id.." 50")
-- end

-- function kitchen_user_actions(id, x, y)
	-- if ( entity(x,y,"name"):sub(1,4) == "meal" ) then
	
		-- if not( user[id].food[2] ) then
	
		-- local hx, hy, k = player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*6), player(id,"y")+math.floor(3*math.sin(Angle(player(id,"rot")))*6)
			
			-- for i = 1, #kitchen.r_food do
				
				-- if ( kitchen.r_food[i][3] == x and kitchen.r_food[i][4] == y ) then
				-- k = i 
				-- end
			
			-- end
		-- kitchen_give_tray(id,kitchen.r_food[k][2])

		-- freeimage(kitchen.r_food[k][1]); 
		-- table.remove(kitchen.r_food,k)
		
		-- else
		-- parse("triggerposition "..x.." "..y)
		-- end
	-- cook_actions(1)
	-- elseif ( entity(x,y,"name"):sub(1,5) == "table" ) then
	-- local x, y, k = tonumber(x), tonumber(y)	
		-- if ( user[id].food[2] ) then
			
		-- local temp_con = true
			-- if ( #kitchen.t_food > 0 ) then
				
				-- for i = 1, #kitchen.t_food do
					
					-- if ( kitchen.t_food[i][3] == x and kitchen.t_food[i][4] == y ) then
					-- temp_con = false
					-- end
				
				-- end
				
			-- end
		
			-- if ( temp_con ) then
	
			-- k = #kitchen.t_food+1
	
			-- user[id].food[2] = false
			-- freeimage(user[id].food[1]) 
			
				-- if ( user[id].food[3] == 1 ) then

				-- table.insert(kitchen.t_food,k,{image("<spritesheet:gfx/Sanrok_jail/object/meal_frames.png:32:32>",0,0,3),0,x,y})
				-- imageframe(kitchen.t_food[k][1], user[id].food[3])
				-- imagepos(kitchen.t_food[k][1], x*32+16, y*32+16, convert_bangle(x,y))
				-- parse("triggerposition "..x.." "..y)
				
				-- else
			
				-- table.insert(kitchen.t_food,k,{image("<spritesheet:gfx/Sanrok_jail/object/meal_frames.png:32:32>",0,0,3),10,x,y})
				
				-- imagepos(kitchen.t_food[k][1], x*32+16, y*32+16, convert_bangle(x,y))
				-- imageframe(kitchen.t_food[k][1], user[id].food[3])
				-- imagehitzone(kitchen.t_food[k][1],103,-16,-18,32,34)
				
				-- end
			-- else 
			
			-- parse("triggerposition "..x.." "..y)
			-- end	
		-- parse("setweapon "..id.." 50")
		-- else
			-- if ( #kitchen.t_food > 0 ) then
		
				-- for i = 1, #kitchen.t_food do
					
					-- if ( kitchen.t_food[i][3] == x and kitchen.t_food[i][4] == y ) then
					-- k = i
					-- end
				
				-- end
				
			-- end
			-- if ( kitchen.t_food[k] and kitchen.t_food[k][2] == 0 ) then
			
			
			-- freeimage(kitchen.t_food[k][1])
			-- table.remove(kitchen.t_food,k)
			
			-- user[id].food[1] = image("<spritesheet:gfx/Sanrok_jail/models/player/meal_onhand.png:64:64>",3,0,200+id)
			
			-- user[id].food[3], user[id].food[2] = 1, true
			
			-- end
			
		-- parse("triggerposition "..x.." "..y)
		-- parse("setweapon "..id.." 50")
		-- end
		
	-- elseif ( entity(x,y,"name") == "trash" ) then
	-- user[id].food[2] = false 
	-- freeimage(user[id].food[1])
	
	-- elseif ( entity(x,y,"name") == "kitchen_offalarm" ) then
	-- local health = kitchen.barrier.hp > 0 and kitchen.barrier.hp or 0 
		-- for n = 1, #kitchen.barrier do
		-- imagehitzone(kitchen.barrier[n],0)
		-- tween_alpha(kitchen.barrier[n],1000,0.0)
		-- end
		
	-- timer(500,"parse","lua kitchen.barrier={hp="..health.."}")
	-- local triggers = entity(8,11,"trigger")
	-- parse("trigger "..triggers)
	
	-- kitchen.npc.actions = 1 
	-- image_effect(0,{kitchen.npc[1],kitchen.npc[2]},"tmove800,"..(8*32+20)..","..(9*32+16),"trotate300,0")
	-- kitchen.npc.pos = {8,9}
	-- timer(800,"parse","lua tween_rotate(kitchen.npc[2],300,90)")
	-- timer(1000,"cook_actions",kitchen.npc.actions)
	
	-- elseif ( entity(x,y,"name") == "dine_closed" ) then
	-- parse("trigger dine_cde")
		-- if ( kitchen.barrier[11] ) then
			-- for n = 11, 12 do
			-- imagehitzone(kitchen.barrier[n],0)
			-- tween_alpha(kitchen.barrier[n],500,0.0)
			-- kitchen.barrier[n] = nil
			-- end
		-- end
		
	-- elseif ( entity(x,y,"name") == "dine_cself1" and entity(1,9,"state") ) then
		
		-- if (type(kitchen.temp_var) ~= "table" or kitchen.temp_var[2] == false ) then
		-- parse("trigger kitchen_knife")
		-- kitchen.temp_var = {10,true}
		-- kitchen.npc[1] = image("gfx/sprites/block.bmp",5*32,11*32,1)
		-- imagehitzone(kitchen.npc[1], 104, -16, -16, 48, 48)
		-- imagealpha(kitchen.npc[1],0.0)
		
		-- elseif ( type(kitchen.temp_var) == "table" and kitchen.temp_var[1] == 0 ) then
		-- parse("trigger dine_cself1,dine_cstove"..kitchen.temp_var[3]..",food"..kitchen.temp_var[3]..",dine_userfood"..kitchen.temp_var[3])
		-- end
	
	
	-- elseif ( entity(x,y,"name") == "dine_cstove"..kitchen.temp_var[3] and kitchen.temp_var[2] ) then
		
		-- if ( kitchen.temp_var[4] == nil or kitchen.temp_var[4] == 0 ) then
		-- parse("trigger feffect"..kitchen.temp_var[3]..",fde"..kitchen.temp_var[3])
		-- timer(entity(x,y,"int0")*1000,"parse","lua kitchen.temp_var[4]=15")
		-- else
		-- kitchen_give_tray(id,math.random(2,5))
		-- kitchen.temp_var[4] = kitchen.temp_var[4] -1
			-- if ( kitchen.temp_var[4] == 0 ) then
			-- parse("trigger dine_cself1,dine_cstove"..kitchen.temp_var[3]..",food"..kitchen.temp_var[3])
			-- kitchen.temp_var = 0
			-- end
			
		-- end
		
	-- end
	
-- end

-- addhook("hitzone","_hitzone")
-- function _hitzone(img,id,dynid,wid,ix,iy,dmg)
	
	-- for i = 1, #kitchen.t_food do
	
		-- if ( img == kitchen.t_food[i][1] ) then
	
			-- if ( wid == 50 ) then
	
			-- kitchen.t_food[i][2] = kitchen.t_food[i][2] -1
			-- parse("sethealth "..id.." "..(player(id,"health")+math.random(10,15)))
			-- parse("sv_soundpos \"sanrok_jail/player/eat"..math.random(4)..".ogg\" "..ix.." "..iy)
				-- if ( kitchen.t_food[i][2] == 0 ) then
				-- parse("sv_soundpos \"sanrok_jail/player/burp"..math.random(2)..".ogg\" "..ix.." "..iy)
				-- imageframe(kitchen.t_food[i][1],1)
				-- imagehitzone(kitchen.t_food[i][1],0)
				-- parse("triggerposition "..kitchen.t_food[i][3].." "..kitchen.t_food[i][4])
				-- end
				
			-- end
		
		-- end
	
	-- end

	-- if ( img == kitchen.npc[2] and kitchen.npc.health > 0 ) then
		
		-- if ( player(id,"team") == 1 ) then
		-- kitchen.npc.health = kitchen.npc.health - dmg
			
			-- if ( kitchen.npc.health <= 0 ) then
			-- imagehitzone(kitchen.npc[2],0)
			-- freeimage(kitchen.npc[2]); freeimage(kitchen.npc[1])
			-- parse("sv_soundpos \"player/die"..math.random(3)..".wav\" "..ix.." "..iy)
			-- parse("trigger npc_chef")

				
			-- else
			-- parse("sv_soundpos \"sanrok_jail/player/hpain"..math.random(3)..".ogg\" "..ix.." "..iy)
			-- end
		-- chef_emergency(0)
		-- end
	
	-- end
	
	-- if ( #kitchen.barrier > 0 ) then
		
		-- for k,v in pairs(kitchen.barrier) do
			
			-- if ( img == kitchen.barrier[k] ) then
			-- parse("sv_soundpos \"weapons/ricmetal"..math.random(2)..".wav\" "..ix.." "..iy)
			
				-- if ( k >= 11 ) then
				-- kitchen.barrier.hp = kitchen.barrier.hp - dmg
				-- msg(kitchen.barrier.hp)
					-- if ( kitchen.barrier.hp <= 0 ) then
						
						-- for n = 11, 12 do
						-- imagehitzone(kitchen.barrier[n],0)
						-- tween_alpha(kitchen.barrier[n],500,0.0)
						-- kitchen.barrier[n] = nil
						-- end
						
					-- parse("trigger dine_cde")
					-- parse("sv_soundpos \"materials/metal"..math.random(3)..".wav\" "..ix.." "..iy)
					-- end
				-- end
			-- break
			-- end
			
		-- end
	
	-- end
	
	-- if ( entity(1,9,"state") and img == kitchen.npc[1] ) then
		
		-- if ( wid == 50 ) then
		-- kitchen.temp_var[1] = kitchen.temp_var[1]-1
		
			-- if ( kitchen.temp_var[1] == 0 ) then
			-- kitchen.temp_var[3] = math.random(2)
			-- imagehitzone(kitchen.npc[1], 0)
			-- parse("trigger kitchen_knife,dine_userfood"..kitchen.temp_var[3])
			-- end
			
		-- end
		
	-- end
	
-- end



-- function kitchen_throw_food(id)
	
	-- if ( user[id].food[2] ) then
	-- user[id].food[2] = false
	-- freeimage(user[id].food[1])
	-- user[id].food[1] = image("<spritesheet:gfx/Sanrok_jail/object/meal_frames.png:32:32>",0,0,3) 
	
	-- imageframe(user[id].food[1], user[id].food[3])
	-- imagepos(user[id].food[1], player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*6), player(id,"y")+math.floor(3*math.sin(Angle(player(id,"rot")))*6),player(id,"rot"))
	
	-- tween_move(user[id].food[1],800,player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*12), player(id,"y")+math.floor(3*math.sin(Angle(player(id,"rot")))*12))
	-- tween_alpha(user[id].food[1],1000,0.0)
	-- tween_rotateconstantly(user[id].food[1],5)
	-- end
	
-- end


-- function kitchen_select(id)
	-- if ( user[id].food[2] ) then
	-- parse("setweapon "..id.." 50")
	-- end
-- end

-- function cook_actions(action)
-- action = tonumber(action)
	-- if ( kitchen.npc.health > 0 ) then
		-- if ( action == 1 and kitchen.npc.actions == 1 ) then
			
			-- if ( #kitchen.r_food == 0 ) then
			
				-- if ( kitchen.cooked_food > 0 ) then
				-- local to_y = entity(4,8,"state") == false  and 8 or 7
				-- image_effect(0,{kitchen.npc[1],kitchen.npc[2],kitchen.npc[3]},"tmove1500,"..(6*32+8)..","..(to_y*32+16),"trotate300,"..math.deg(-math.atan2( (8*32+16) - (6*32+16), (kitchen.npc.temp_var[4]*32+16) - (to_y*32+16))))
				-- kitchen.npc.actions = 9.5
				
				-- kitchen.npc.pos = {6,to_y}
				-- timer(1600,"cook_actions",kitchen.npc.actions)
				-- else
				
				-- image_effect(0,{kitchen.npc[1],kitchen.npc[2]},"trotate500,225","tmove1000,"..(6*32+8)..","..(11*32+16))
				-- kitchen.npc.pos = {6,11}
				-- kitchen.npc.actions = 2 
				
				-- timer(1000,"parse",'lua image_effect(0,kitchen.npc[2],"trotate200,270")')
				-- timer(1400,"cook_actions",kitchen.npc.actions)
				-- end
		
			-- end
			
		-- elseif ( action == 2 ) then
		-- imageframe(kitchen.npc[2],2)
		-- parse("trigger kitchen_knife")
		-- timer(500,"parse","lua kitchen.npc.temp_var,kitchen.npc.actions=2,3")
		
		-- elseif ( action == 5 ) then
		-- tween_rotate(kitchen.npc[2],500,0)
		-- kitchen.npc.actions = 6 
		
		-- timer(200,"cook_actions",kitchen.npc.actions)
		
		-- elseif ( action == 6 ) then
		-- local to_y = kitchen.npc.food == 3 and 8*32+16 or 7*32+16
		-- kitchen.npc.temp_var = {6*32+8,to_y}
		-- kitchen.npc.pos = {6,math.floor(to_y/32)}
		-- image_effect(0,{kitchen.npc[1],kitchen.npc[2]},"tmove2000,"..(6*32+8)..","..(to_y))
		-- kitchen.npc.actions = 7
		-- timer(2200,"cook_actions",kitchen.npc.actions)
		
		-- elseif ( action == 7 ) then
		-- tween_rotate(kitchen.npc[2],200,270)
		-- kitchen.npc.actions = 8
		
		-- timer(500,"cook_actions",kitchen.npc.actions)
		
		-- elseif ( action == 8 ) then
		-- parse("trigger food"..(kitchen.npc.food-2)..",feffect"..(kitchen.npc.food-2))
		-- imageframe(kitchen.npc[2],1)
		-- kitchen.npc.actions = 9
		
		-- timer(1000,"cook_actions",kitchen.npc.actions)
		
		-- elseif ( action == 9 ) then
		-- parse("trigger feffect"..(kitchen.npc.food-2))
		-- kitchen.cooked_food = 15
		-- chef_get_food()		
		
		-- elseif ( action == 9.5 ) then
		
		-- local to_y, rot = entity(4,8,"state") == false  and 8 or 7 
		-- rot = math.deg(-math.atan2( (8*32+16) - (6*32+16), (kitchen.npc.temp_var[4]*32+16) - (to_y*32+16)))
		-- chef_get_food(rot)
		
		-- elseif ( action == 10 ) then
		-- kitchen.npc.temp_var[4] = find_empty_table()
		-- image_effect(0,{kitchen.npc[1],kitchen.npc[2],kitchen.npc[3]},"tmove1500,"..(8*32+20)..","..(kitchen.npc.temp_var[4]*32+16),"trotate300,"..math.deg(-math.atan2( (6*32+16) - (8*32+16), kitchen.npc.temp_var[2] - (kitchen.npc.temp_var[4]*32+16))))
		-- kitchen.npc.pos = {8,find_empty_table()}
		-- kitchen.npc.actions = 11
		-- timer(1500,"parse","lua image_effect(0,{kitchen.npc[1],kitchen.npc[2],kitchen.npc[3]},'trotate300,90')")
		-- timer(1700,"cook_actions",kitchen.npc.actions)
		
		-- elseif ( action == 11 ) then
		-- spawn_meal(9,kitchen.npc.temp_var[4],kitchen.npc.temp_var[3])
		-- freeimage(kitchen.npc[3])
		-- kitchen.npc[3] = 0
		-- imageframe(kitchen.npc[2],1)
			
			-- if ( find_empty_table() ) then
				-- if ( kitchen.cooked_food > 0 ) then
				-- local to_y = entity(4,8,"state") == false and 8 or 7
				-- kitchen.npc.actions = 9.5
				
				-- image_effect(0,{kitchen.npc[1],kitchen.npc[2],kitchen.npc[3]},"tmove1500,"..(6*32+8)..","..(to_y*32+16),"trotate300,"..math.deg(-math.atan2( (8*32+16) - (6*32+16), (kitchen.npc.temp_var[4]*32+16) - (to_y*32+16))))
				-- kitchen.npc.pos = {6,to_y}
				-- timer(1600,"cook_actions",kitchen.npc.actions)
				
				-- else
				-- kitchen.npc.actions = 1 
				-- image_effect(0,{kitchen.npc[1],kitchen.npc[2]},"tmove800,"..(8*32+20)..","..(9*32+16),"trotate300,"..math.deg(-math.atan2( (8*32+16) - (8*32+16), (kitchen.npc.temp_var[4]*32+16) - (9*32+16))))
				-- kitchen.npc.pos = {8,9}
				-- timer(800,"parse","lua tween_rotate(kitchen.npc[2],300,90)")
			
				-- end
				
			-- else
			
			-- kitchen.npc.actions = 1 
			-- image_effect(0,{kitchen.npc[1],kitchen.npc[2]},"tmove800,"..(8*32+20)..","..(9*32+16),"trotate300,"..math.deg(-math.atan2( (8*32+16) - (8*32+16), (kitchen.npc.temp_var[4]*32+16) - (9*32+16))))
			-- kitchen.npc.pos = {8,9}
			-- timer(800,"parse","lua tween_rotate(kitchen.npc[2],300,90)")
			-- end
		
		-- end
		
	-- end
	
-- end

-- function chef_get_food(rot)
-- local rot = rot or 270
	-- kitchen.npc.temp_var[3] = math.random(2,5)
	
	
	-- kitchen.npc[3] = image("<spritesheet:gfx/Sanrok_jail/models/player/meal_onhand.png:64:64>",0,0,3)
	-- image_effect(0,kitchen.npc[3],"pos"..kitchen.npc.temp_var[1]..","..kitchen.npc.temp_var[2]..","..rot,"frame"..kitchen.npc.temp_var[3])
	-- imageframe(kitchen.npc[2],6)
	
	-- kitchen.npc.actions = 10
	-- kitchen.cooked_food = kitchen.cooked_food -1

	-- timer(500,"cook_actions",kitchen.npc.actions)
	
		-- if ( kitchen.cooked_food == 0 ) then
		-- parse("trigger food"..(kitchen.npc.food-2))
		-- end
-- end

-- function find_empty_table()
	
	-- for y = 7, 11 do
		
		-- if ( entity(9,y,"state") ) then
		
		-- return y
		-- end
	
	-- end

-- return nil
-- end

-- function chef_emergency(act)
-- act = tonumber(act)
	-- if ( act == 0 ) then
		-- if ( kitchen.npc.actions ~= -1 ) then
		
			-- if ( kitchen.npc.actions >= 3 and kitchen.npc.actions <= 4 ) then
			-- parse("trigger kitchen_knife")
			-- end
			
		-- kitchen.npc.actions = -1
		-- freetimer()
			
			-- if ( kitchen.npc[3] ~= 0 ) then
			-- freeimage(kitchen.npc[3])
			-- end
			
		-- imageframe(kitchen.npc[2],5)
		-- local rot = math.deg(-math.atan2( (kitchen.npc.pos[1]*32+16) - (8*32+16), (kitchen.npc.pos[2]*32+16) - (11*32+16)))
		
		-- image_effect(0,{kitchen.npc[1],kitchen.npc[2]},"tmove1000,"..(8*32+16)..","..(11*32+16),"trotate300,"..rot.."")
		
		-- timer(1000,"chef_emergency",1)
		-- end
	-- elseif ( act == 1 and kitchen.npc.health > 0 ) then
	-- parse("trigger alarm,as,kitchen_offalarm")
	-- tween_rotate(kitchen.npc[2],300,180)
	-- imageframe(kitchen.npc[2],1)
		
		-- for y = 7, 12 do
		-- kitchen.barrier[#kitchen.barrier+1] = image("<tile:178>",9*32,y*32,3)
		-- imagehitzone(kitchen.barrier[#kitchen.barrier],102,0,0,32,32)
		-- imagealpha(kitchen.barrier[#kitchen.barrier],0.0)
		-- tween_alpha(kitchen.barrier[#kitchen.barrier],500,1.0)
			
			-- if ( kitchen.barrier.hp > 0 and y >= 11 ) then
			-- kitchen.barrier[y] = image("<tile:178>",20*32,y*32,3)
			-- imagehitzone(kitchen.barrier[y],102,0,0,32,32)
			-- imagealpha(kitchen.barrier[y],0.0)
			-- tween_alpha(kitchen.barrier[y],500,1.0)
			-- parse("trigger dine_cde")
			-- end
		-- end
		
	-- end
	
-- end

-- function kitchen_second()

	-- if ( kitchen.npc.temp_var ~= 0 and kitchen.npc.actions == 3 or kitchen.npc.actions == 4  ) then
		
		-- if ( kitchen.npc.actions == 3 ) then
		-- tween_rotate(kitchen.npc[2],500,230)
		-- kitchen.npc.actions = 4
		
		-- elseif ( kitchen.npc.actions == 4 ) then
		
		-- tween_rotate(kitchen.npc[2],500,270)
		-- kitchen.npc.actions = 3 
		-- end
	-- kitchen.npc.temp_var = kitchen.npc.temp_var -1
	
	
	-- elseif ( kitchen.npc.temp_var == 0 and kitchen.npc.actions == 3 or kitchen.npc.actions == 4 ) then
	-- local food = math.random(3,4)
	-- imageframe(kitchen.npc[2],food)
	-- kitchen.npc.food, kitchen.npc.actions = food, 5
	-- parse("trigger kitchen_knife")
	-- cook_actions(kitchen.npc.actions)
	-- end
	
-- end

-- _startround()

--=======================================================================--
--[[
	
	82th. Sanrok_jail - Piano
	
	
]]--
-- sanrok = {}
-- slient = {}
-- dofile("maps/sanrok_jail/utils.lua")

-- local tbl = {"A","Z","S","X","C","F","V","G","B","N","J","M","K",",","L",".","/","Q","2","1","W","E","R","T","Y","U","I","O","P","E","4","5","7","8","9","-",
			-- "uparrow","downarrow","rightarrow","leftarrow","escape","F6","mouse2"}
	
		-- for k, v in pairs(tbl) do
		-- addbind(v)
		-- end
	
-- function init(id)

-- slient[id] =
-- {
	-- image = {image("<spritesheet:gfx/Sanrok_jail/hud/hud_overhead_v1.png:16:16>",0,0,1)},
	
	-- rooms = 
	-- {
		-- instrument =
		-- {
			-- ui =  
			-- {
					
				-- {
					-- image("gfx/Sanrok_jail/ui/piano_keyboard.png",0,0,2,id), 
				-- },
				
				-- {
					-- temp = 1,
				-- },
						
			-- },
			
			-- personal_color = math.random(100,255)..""..math.random(100,255)..""..math.random(100,255),
			-- state = false,
			-- guide = {true,true},
			-- style = {1,false}, -- One hand: asdf / zxcv | Two hands
			-- octave = {1,1},
		-- },
		
	-- },
	
-- }



	
	-- for i = 1, 6 do
	-- table.insert(slient[id].rooms.instrument.ui[2],image("<spritesheet:gfx/Sanrok_jail/ui/Piano_keys_frame.png:13:94>",0,0,2,id))
	-- end
	-- local p = slient[id].rooms.instrument.ui[1][1]

	-- slient[id].rooms.instrument.ui[1] = {
		-- p,
		-- image("gfx/Sanrok_jail/ui/piano_guideline.png",0,0,2,id), 
		-- image("gfx/Sanrok_jail/ui/piano_guideline.png",0,0,2,id), 
		-- image("gfx/Sanrok_jail/ui/Piano_guide_number.png",0,0,2,id),
		-- image("gfx/Sanrok_jail/ui/Piano_guide_number2.png",0,0,2,id),
	
	-- }
	-- image_effect(id,{slient[id].rooms.instrument.ui[1][1],slient[id].rooms.instrument.ui[1][2],slient[id].rooms.instrument.ui[1][3],slient[id].rooms.instrument.ui[1][4],slient[id].rooms.instrument.ui[1][5]},"posa425,380,0","scalea1,1","alpha0.0")
	-- image_effect(id,{slient[id].rooms.instrument.ui[2][1],slient[id].rooms.instrument.ui[2][2],slient[id].rooms.instrument.ui[2][3],slient[id].rooms.instrument.ui[2][4],slient[id].rooms.instrument.ui[2][5],slient[id].rooms.instrument.ui[2][6]},"posa425,380,0","scalea1,1","alpha0.0")
	
-- end
 

-- addhook("movetile","_movetile")
-- addhook("usebutton","_usebutton")
-- addhook("key","_key")
-- addhook("radio","_radio")
-- addhook("menu","_menu")

-- function _menu(id,title,button)
-- piano_menu_actions(id, title, button)
-- end

-- function _radio(id)
	-- if ( slient[id].rooms.instrument.state ) then
	-- return 1
	-- end
-- end

-- function _movetile(id,x,y)
-- over_piano_seat(id, x, y)
-- end


-- function _usebutton(id,x,y)
-- sit_piano_seat(id, x, y)
-- end

-- function _key(id, key, state)
-- piano_press_action(id, key, state)
-- end
-- -----------------------------------------------------[[ Actual function below ]]
-- function over_piano_seat(id, x, y)
	-- if ( x == 11 and y >= 3 and y <= 4 ) then
	-- hudtxts(true,id,"160160105",40,"Press \169230230230[\169150195095E\169230230230]\169160160105 to play the piano.",425,205,1,0,13) 
	-- else
	-- remove_hud(id,40)
	-- end
-- end

-- function sit_piano_seat(id, x, y)
	
	-- if ( x == 11 and y >= 3 and y <= 4 and slient[id].rooms.instrument.state == false ) then
	-- slient[id].rooms.instrument.state = true
	-- parse("setpos "..id.." "..(11*32+24).." "..player(id,"y"))
	-- parse("speedmod "..id.." -100")
	-- remove_hud(id,40,true,500)
	-- pm_action(id,"Remind that some personal menu will eventually pops up while playing the piano", 2, true) 
	-- pm_action(id,"                     \169220210120To avoid those pop up, unbind some keys by typing \"/bind \"key\" \".", 2) 
	-- pm_action(id,"                     \169220210120If you want recover the setting after play, open your \"4.Options\" menu.", 2) 
	-- image_effect(id,slient[id].rooms.instrument.ui[1][1],"talpha500,0.8")
	-- piano_guide_appear(id)
	-- end
	
-- end

-- function piano_press_image(id, key)
	-- local playable_keys = 
		-- { 
		-- -- modify +84/ +84/ +84/ +84/ +84/ +84 -- key 4 | y : 427

		
		
			-- {"1","A",4,156},
			-- {"Q","Z",2,162},
			-- {"2","S",4,168},
			-- {"W","X",3,175},
			-- {"E","C",1,187},
			-- {"4","F",4,192},
			-- {"R","V",2,199},
			-- {"5","G",4,204},
			-- {"T","B",3,210},
			-- {"Y","N",1,223},
			-- {"7","J",4,228},
			-- {"U","M",2,235},
			-- {"8","K",4,240},
			-- {"I",",",2,246},
			-- {"9","L",4,252},
			-- {"O",".",3,258},
			-- {"P","/",1,270},
			-- {"-","NONE",4,276},
		-- }
	
	-- for i = 1, #playable_keys do
	
		-- if ( key == playable_keys[i][1] or key == playable_keys[i][2] ) then
		-- local n, octave = slient[id].rooms.instrument.ui[2].temp
		-- octave = key == playable_keys[i][1] and slient[id].rooms.instrument.octave[1] or slient[id].rooms.instrument.octave[2]
		
		-- image_effect(id,slient[id].rooms.instrument.ui[2][n],"posa"..(playable_keys[i][4]+(84*(octave-1)))..",427,0","frame"..playable_keys[i][3],"alpha1.0","talpha200,0.0")
		-- slient[id].rooms.instrument.ui[2].temp=slient[id].rooms.instrument.ui[2].temp+1
			
			-- if ( slient[id].rooms.instrument.ui[2].temp > 6 ) then
			-- slient[id].rooms.instrument.ui[2].temp = 1
			-- end
			
		-- end
		
	-- end
	
	
-- end

-- function piano_event(id, octave, note)
-- local ptbl, x, y, id = {}, player(id,"x"), player(id,"y"), tonumber(id)
	
	-- for _, p in pairs(player(0,"table")) do

		-- if ( player(p,"health") <= 0 or player(p,"team") == 0 ) then
		
		-- table.insert(ptbl,p)
		-- end
		
		-- if ( player(p,"health") > 0 and player(p,"tilex") >= 9 and player(p,"tilex") <= 104 and player(p,"tiley") >= 1 and player(p,"tiley") <= 11 ) then
		-- table.insert(ptbl,p)
		-- end
		
	-- end
	
	-- local ny = y-15
	-- image_effect(id,slient[id].rooms.instrument.overhead[1],"pos"..x..","..ny..",0","alpha1.0","tmove500,"..x..","..(ny-math.random(15,25)).."","talpha300,0.0","color"..slient[id].rooms.instrument.personal_color:sub(1,3)..","..slient[id].rooms.instrument.personal_color:sub(4,6)..","..slient[id].rooms.instrument.personal_color:sub(7,9).."")
	
	-- for _, audience in pairs(ptbl) do
	-- parse("sv_soundpos \"Sanrok_jail/player/Piano/L"..octave.."-"..note..".ogg\" "..x.." "..y.." "..audience)
	-- end
-- end

-- --[[
	-- ���̵� ����
	-- �⺻���� = 
	-- {
		-- Q W E R T Ű ���̵� [ ǥ�� ]
		-- Ű ���� 1�� [ ǥ�� ]
		
		-- Z X C V B Ű ���̵� [ ��ǥ�� ]
		-- Ű ���� 2�� [ ��ǥ�� ]
	-- }
	
	-- ��ո�� ų �� -
	-- �̹��� [2][3][4][5] ��ü ��￿
	
	-- �Ѽ� ��￿-
	-- Ű ��Ÿ�� Q W E R �� ��
	-- [2][4]
	-- Z X C V �� ��
	-- [2][5]
	
	

-- ]]

-- function piano_guide_appear(id) -- Honestly, my brain could not function normal while scripting this part. IDK why FUCK THIS SHITTY PIANO SCRIPT FFS PLEASE KILL ME
-- id = tonumber(id)
-- local show = {}
	-- if ( slient[id].rooms.instrument.guide[1] ) then -- Border 
		
		-- if ( slient[id].rooms.instrument.style[2] ) then
		-- table.insert(show,slient[id].rooms.instrument.ui[1][2])
		-- table.insert(show,slient[id].rooms.instrument.ui[1][3])
		-- else
		-- table.insert(show,slient[id].rooms.instrument.ui[1][2])
		-- end
		
	-- end
	
	-- if ( slient[id].rooms.instrument.guide[2] ) then -- key guide
		
		-- if ( slient[id].rooms.instrument.style[2] ) then
		-- table.insert(show,slient[id].rooms.instrument.ui[1][4])
		-- table.insert(show,slient[id].rooms.instrument.ui[1][5])
		-- else
		
			-- if ( slient[id].rooms.instrument.style[1] == 1 ) then
			-- table.insert(show,slient[id].rooms.instrument.ui[1][4])
			
			-- else
			-- table.insert(show,slient[id].rooms.instrument.ui[1][5])
			-- end
		
		-- end
		

	-- end 
-- local tmp = {slient[id].rooms.instrument.ui[1][2],slient[id].rooms.instrument.ui[1][3],slient[id].rooms.instrument.ui[1][4],slient[id].rooms.instrument.ui[1][5]}
	-- image_effect(id,tmp,"talpha500,0.0")
	-- image_effect(id,show,"talpha500,0.7")
-- piano_guide_movement(id)
-- end

-- function piano_guide_movement(id)
-- id = tonumber(id)

	-- if ( slient[id].rooms.instrument.state ) then
		
		-- if ( slient[id].rooms.instrument.style[2] ) then
		
		-- image_effect(id,slient[id].rooms.instrument.ui[1][2],"blend0","posa"..(132+(84*slient[id].rooms.instrument.octave[1]))..","..(428)..",0")
		-- image_effect(id,slient[id].rooms.instrument.ui[1][3],"blend0","posa"..(132+(84*slient[id].rooms.instrument.octave[2]))..","..(428)..",0")
		-- image_effect(id,slient[id].rooms.instrument.ui[1][4],"blend0","posa"..(132+(84*slient[id].rooms.instrument.octave[1]))..","..(443)..",0")
		-- image_effect(id,slient[id].rooms.instrument.ui[1][5],"blend0","posa"..(132+(84*slient[id].rooms.instrument.octave[2]))..","..(443)..",0")
		
		-- else
		-- local oct = slient[id].rooms.instrument.style[1]+3
		-- image_effect(id,slient[id].rooms.instrument.ui[1][2],"blend0","posa"..(132+(84*slient[id].rooms.instrument.octave[1]))..","..(428)..",0")
		-- image_effect(id,slient[id].rooms.instrument.ui[1][oct],"blend0","posa"..(132+(84*slient[id].rooms.instrument.octave[1]))..","..(443)..",0")
		
		-- end
		
	-- end
	
-- end

-- --[[
	-- �ǾƳ� �� ����
	-- �⺻��￿=
	-- {
		-- ��Ÿ��: 1
		-- �μ� �÷���: ����
		-- ����: ����
		-- Ű ���̵�: ����
	-- }
	
	-- �ɼ� - 
	-- 1. Change play key | ( ��Ÿ��1 : Z X C V / ��Ÿ��2 : Q W E R ) -- slient[id].rooms.instrument.style[1] �� ���� ���� / slient[id].rooms.instrument.style[2] ���Ͻ� ��.
	-- 2. Two hands mode / One hand mode ( ��Ÿ��[2]: ���� / ��Ÿ��[2]: ���� ) -- slient[id].rooms.instrument.style[2] �� ���� ����
	-- 3. Display playable border | ( Enabled / Disabled ) -- slient[id].rooms.instrument.guide[1] �� ���� ����
	-- 4. Display key guide | ( Enabled / Disabled ) -- slient[id].rooms.instrument.guide[2] �� ���� ����.
	-- 6.
	-- 7.
	-- 8.
	-- 9. (Please press \"0.Cancel\" otherwise you will stop to play it!)
	-- 0. Cancel
	
	-- ��Ÿ�� ����.
	-- �μո�￿false - ��Ÿ��[1] ���� ����.
	
	-- �μո�￿true - ��/�Ʒ� Ű�� ��Ÿ��[1], ����/������ Ű�� ��Ÿ��[2]
	-- -------------------
	-- Ű ������ ����
	
	
	-- �Ѽ� ��￿- ��Ÿ��[1] ��￿
	-- ��Ÿ��1 : Q W E R T Y U I O P 
	-- ��Ÿ��2 : Z X C V B N M , . /
	
	-- �μ� ��￿- ��Ÿ�� ���� �Ұ�.
	-- ��Ÿ��[1] : Q W E R T Y U I O P 
	-- ��Ÿ��[2] : Z X C V B N M , . /
	
-- ]]

-- function piano_menu_actions(id, title, button)
	-- if ( title == "Piano option" and button ~= 0 ) then
		
		-- if ( button == 1 ) then
		-- slient[id].rooms.instrument.style[1] = slient[id].rooms.instrument.style[1]==1 and 2 or 1
		
		-- elseif ( button == 2 ) then
		-- slient[id].rooms.instrument.style[2] = slient[id].rooms.instrument.style[2]==false and true or false
		-- slient[id].rooms.instrument.octave = {2,1}

		-- elseif ( button == 3 ) then
		-- slient[id].rooms.instrument.guide[1] = slient[id].rooms.instrument.guide[1]==false and true or false
		
		-- elseif ( button == 4 ) then
		-- slient[id].rooms.instrument.guide[2] = slient[id].rooms.instrument.guide[2]==false and true or false
		-- end
		
	-- piano_press_action(id,"F6", 1)
	-- piano_guide_appear(id)
	-- end

-- end
	
-- function piano_press_action(id, key, state)

	-- if ( slient[id].rooms.instrument.state and state == 1 ) then
		
		-- if ( key == "uparrow" ) then
			
			-- if ( slient[id].rooms.instrument.octave[1] < 6 ) then
			-- slient[id].rooms.instrument.octave[1] = slient[id].rooms.instrument.octave[1] +1
			
			-- else
			-- slient[id].rooms.instrument.octave[1] = 1
			-- end
		-- piano_guide_movement(id)	
		-- elseif ( key == "downarrow" ) then
			
			-- if ( slient[id].rooms.instrument.octave[1] > 1 ) then
			-- local guide_n = slient[id].rooms.instrument.style[1]
			-- slient[id].rooms.instrument.octave[1] = slient[id].rooms.instrument.octave[1] -1
			-- -- image_effect(id,slient[id].rooms.instrument.ui[guide_n+3],"blend0","talpha500,0.7","posa"..(132+(84*sclient[id].piano.octave))..","..(428+(15*(key-2)))..",0")
			-- else
			-- slient[id].rooms.instrument.octave[1] = 6
			-- end
		-- piano_guide_movement(id)
		-- elseif ( key == "rightarrow" ) then
		-- local oct = slient[id].rooms.instrument.style[2]==false and 1 or 2 
		
			-- if ( slient[id].rooms.instrument.octave[oct] < 6 ) then
			-- local guide_n = slient[id].rooms.instrument.style[1]
			-- slient[id].rooms.instrument.octave[oct] = slient[id].rooms.instrument.octave[oct] +1
			-- else
			-- slient[id].rooms.instrument.octave[oct] = 1
			-- end
		-- piano_guide_movement(id)	
		-- elseif ( key == "leftarrow" ) then
		-- local oct = slient[id].rooms.instrument.style[2]==false and 1 or 2 
			
			-- if ( slient[id].rooms.instrument.octave[oct] > 1 ) then
			-- local guide_n = slient[id].rooms.instrument.style[1]
			-- slient[id].rooms.instrument.octave[oct] = slient[id].rooms.instrument.octave[oct] -1
			-- else
			-- slient[id].rooms.instrument.octave[oct] = 6
			-- end
		-- piano_guide_movement(id)
		-- elseif ( key == "F6" ) then
		-- local txtbl = 
		-- {  
			-- "Change play style| play with "..(slient[id].rooms.instrument.style[1]==1 and "Z X C V" or "Q W E R"),
			-- slient[id].rooms.instrument.style[2] ==false and "Disabled" or "Enabled", 
			-- slient[id].rooms.instrument.guide[1] ==false and "Disabled" or "Enabled",  
			-- slient[id].rooms.instrument.guide[2] ==false and "Disabled" or "Enabled" 
		-- }
		
		
		-- menu(id,"Piano option@b,"..(slient[id].rooms.instrument.style[2]==false and txtbl[1] or "("..txtbl[1]..")")..",Two hands mode|"..txtbl[2]..",Display playable borders|"..txtbl[3]..",Display key guide|"..txtbl[4]..",,,,,(Please press \"0.Cancel\" otherwise you will stop to play it!)")
		
		-- elseif ( key == "escape" ) then
		-- image_effect(id,{slient[id].rooms.instrument.ui[1][1],slient[id].rooms.instrument.ui[1][2],slient[id].rooms.instrument.ui[1][3],slient[id].rooms.instrument.ui[1][4],slient[id].rooms.instrument.ui[1][5]},"talpha500,0.0")
		-- parse("speedmod "..id.." 0")
		-- timer(500,"parse","lua slient["..id.."].rooms.instrument.state=false")
		-- end
		
		-- local playable_keys = 
		-- {
			-- {"1","A",0,9},
			-- {"Q","Z",0,10},
			-- {"2","S",0,11},
			-- {"W","X",0,12},
			-- {"E","C",1,1},
			-- {"4","F",1,2},
			-- {"R","V",1,3},
			-- {"5","G",1,4},
			-- {"T","B",1,5},
			-- {"Y","N",1,6},
			-- {"7","J",1,7},
			-- {"U","M",1,8},
			-- {"8","K",1,9},
			-- {"I",",",1,10},
			-- {"9","L",1,11},
			-- {"O",".",1,12},
			-- {"P","/",2,1},
			-- {"-","NONE",2,2},
		-- }
		
		-- if ( slient[id].rooms.instrument.style[2] == false ) then
		-- local style = slient[id].rooms.instrument.style[1]
			
			-- for i = 1, #playable_keys do
				
				-- if ( key == playable_keys[i][style] ) then
				-- piano_event(id, slient[id].rooms.instrument.octave[1]+playable_keys[i][3], playable_keys[i][4])
				-- piano_press_image(id, key)
				-- break
				-- end
			
			-- end
		-- else
		-- local user_press, n 
			
			-- for i = 1, #playable_keys do
				
				-- if ( key == playable_keys[i][2] ) then
				-- user_press, n = 2, i
				-- break
				
				-- elseif ( key == playable_keys[i][1] ) then
				-- user_press, n = 1, i 
				-- break
				-- end
			
			-- end
			
			-- if ( user_press ) then
			-- piano_event(id, slient[id].rooms.instrument.octave[user_press]+playable_keys[n][3], playable_keys[n][4])
			-- piano_press_image(id, key)
			-- end
		
		-- end
		
	-- end
	
-- end

-- init(1)
--=======================================================================--
--[[
	
	83th. 
	
	
]]--

-- function n()
-- msg("Sample image \174gfx/sprites/block.bmp")
-- end
--=======================================================================--
--[[
	
	84th. Fifa minigame for sanrok
	
	
]]--

-- function image_effect(id,image,...)
-- local tbl , command , comma = {}
-- local lists = {"freeimage","alpha","blend","color","frame","pos","scale","hitzone","talpha","tcolor","tframe","tmove","trotate","tconstant","tscale"};
	
-- local function cvt_tbl(n,cmd)
-- command, comma = cmd:sub(n)
	-- while ( #command ~= 0 ) do
	-- comma = command:find(",") or #command+1
          
	-- tbl[#tbl+1] = command:sub(1,comma-1)
	-- command = command:sub(comma+1)
	-- end
	
	-- if ( cmd:sub(1,5) == "alpha" ) then
	-- imagealpha(image,tbl[1])
	
	-- elseif ( cmd:sub(1,9) == "freeimage" ) then
	-- freeimage(image);
	-- image = 0;
	
	-- elseif ( cmd:sub(1,5) == "blend" ) then
	-- imageblend(image,tbl[1])
	
	-- elseif ( cmd:sub(1,5) == "color" ) then
	-- imagecolor(image,tbl[1],tbl[2],tbl[3])
	
	-- elseif ( cmd:sub(1,5) == "frame" ) then
	-- imageframe(image,tbl[1])
	
	-- elseif ( cmd:sub(1,3) == "pos" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = convertXY(id,tbl[1]:sub(2),tbl[2])
		-- imagepos(image,tbl[1],tbl[2],tbl[3])
		-- else
		-- imagepos(image,tbl[1],tbl[2],tbl[3])
		-- end
	-- elseif ( cmd:sub(1,5) == "scale" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[1], tbl[2] = convertXY(id,tbl[1]:sub(2),tbl[2])
		-- imagescale(image,tbl[1],tbl[2])
		-- else
		-- imagescale(image,tbl[1],tbl[2])
		-- end
	
	-- elseif ( cmd:sub(1,7) == "hitzone" ) then
	-- tbl[1], tbl[2], tbl[3], tbl[4], tbl[5] = tonumber(tbl[1]), tonumber(tbl[2]), tonumber(tbl[3]), tonumber(tbl[4]), tonumber(tbl[5])
	-- imagehitzone(image,tbl[1],tbl[2],tbl[3],tbl[4],tbl[5])
		
	-- elseif ( cmd:sub(1,6) == "talpha" ) then

	-- tween_alpha(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,6) == "tcolor" ) then
	-- tween_color(image,tbl[1],tbl[2],tbl[3],tbl[4])
	
	-- elseif ( cmd:sub(1,6) == "tframe" ) then
	-- tween_frame(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,5) == "tmove" ) then
		-- if ( tbl[1]:sub(1,1)=="a" ) then
		-- tbl[2], tbl[3] = convertXY(id,tbl[2]:sub(2),tbl[3])
		-- tween_move(image,tbl[1],tbl[2],tbl[3],tbl[4])
		-- else
		-- tween_move(image,tbl[1],tbl[2],tbl[3],tbl[4])
		-- end
	-- elseif ( cmd:sub(1,7) == "trotate" ) then
	-- tween_rotate(image,tbl[1],tbl[2])
	
	-- elseif ( cmd:sub(1,9) == "tconstant" ) then
	
	-- tween_rotateconstantly(image,tbl[1])
	
	-- elseif ( cmd:sub(1,7) == "tscale" ) then
	-- tween_scale(image,tbl[1],tbl[2],tbl[3])
	
	-- end
-- tbl = {}
-- end

	-- if ( type(image) == "table" ) then
		-- for _, n in ipairs(image) do
		-- image_effect(id,n,...)
		-- end
	-- else
	
		-- for k,cmd in pairs{...} do
			
			-- for _,list in pairs(lists) do
			-- --print("First : In loop, command name : "..list)
			-- -- print("Second : Matching test - "..cmd:sub(1,#list).."(cmd:sub(1,#list) == "..list.."(list)")
				-- if ( cmd:sub(1,#list) == list ) then
				-- -- print("matched!, performing function : cvt_tbl("..(#list+1)..","..list..")")
				-- cvt_tbl(#list+1,cmd)
				-- break
				-- end
			-- end
			
		-- end
	-- end
-- end
-- --[[
	-- Expected player variables
	
	-- 1. When player dies while in the game. <-> Delete all modified value in game variable.
	-- 2. Use their weapons while in the game. <-> Can not harm player.
	-- 3. Use Medishot <-> add preventation variable in medishot ( unable to use in particular actions )
	-- 4. Tased <-> Still get tased, but do better make variable that hold speedmod.

-- ]]

-- addhook("usebutton","_usebutton")
-- -- addhook("key","_key")

-- local binds = {"W","A","S","D"}

-- for i = 1,#binds do
-- addbind(binds[i])
-- end

-- sanrok = { rooms ={} }; --// Delete here

-- dofile("maps/sanrok_jail/utils.lua");
-- sanrok.rooms.minigame = {
	-- slot = 
	-- {
		-- { },{ }
	
	-- },
	
	
	-- setting =
	-- {
		-- max_goal = 9,
		-- team_setting = 1,
		-- gamemode = 1,
		-- visual = {true},
	-- }
-- }	

-- function convertXY(id, x, y)
-- local width, height = player(id,"exists") == false and 850 or player(id,"screenw"), player(id,"exists") == false and 480 or player(id,"screenh");
	-- if ( id ~= 0 ) then
	-- id, x, y = tonumber(id), tonumber(x), tonumber(y)
	-- return (x / 850) * width, (y / 480) * height
	-- end
-- end


-- function initialize_minigame_ball()
-- sanrok.rooms.minigame.ball = {
		-- coordinate =
		-- {
			-- default = {530, 126}, 
			-- current = {0,0},
			-- final_current = { 0,0 },
			
			
		-- },

	-- image = image("gfx/sanrok_jail/object/soccer_ball.png",0,0,1),
	-- rotation = 0,
	-- spin_speed = 0,
			
-- }
-- end

-- initialize_minigame_ball()

-- function initialize_minigame()
	-- for i = 1,2 do
	-- -- local multiply_x = 4744+(146*(i-1))
	-- local multiply_x = 455+(146*(i-1))
	
	-- sanrok.rooms.minigame.slot[i] = 
	-- {
		-- team = 0,
		-- score = {0,image("<spritesheet:gfx/decals.bmp:32:32:a>",0,0,1)},
		-- coordinates =
		-- {
			-- -- spawn = { {multiply_x,818}, {multiply_x,840}, {multiply_x,862}, {multiply_x,884}, {multiply_x,906} },
			-- spawn = { {multiply_x,79}, {multiply_x,101}, {multiply_x,123}, {multiply_x,145}, {multiply_x,167} },
			-- b_area = { x = {396+(252*(i-1)), 412+(252*(i-1))}, {70,84}, {94,108}, {118,132}, {142,156}, {170,184} },
		
		-- },
		
		-- condition = 
		-- {
			-- slot = { false, false, false, false, false },
			
		-- },
		
		-- image = {},
		-- slot_id = {0,0,0,0,0},
		-- key = { 0, 0, 0, 0, 0 },
	
	-- }

	-- image_effect(0,sanrok.rooms.minigame.slot[i].score[2],"frame37","alpha0.5","pos"..((15+(i-1))*32+16)..",16,0")
	-- end
	
-- end

-- function character_modifier(slot, index, mode)
-- --[[
	-- 1. �̹��� ����
	-- 2. �̹��� ����
	-- 3. �̹��� �̵�
	
-- ]]

-- slot, index = tonumber(slot), tonumber(index)
-- local id = sanrok.rooms.minigame.slot[slot].slot_id[index];
	-- if ( mode == 0 ) then
	-- local pteam = player(id,"team")==1 and "t"..math.random(4) or "ct"..math.random(4);
	-- sanrok.rooms.minigame.slot[slot].image[index] = image("<spritesheet:gfx/player/"..pteam..".bmp:32:32:m>",0,0,1);
	-- local teamcolor = player(id,"team")==1 and {"255","200","200"} or {"200","200","255"};
	-- local color = sanrok.rooms.minigame.setting.team_setting == 1 and {"255","255","255"} or teamcolor;
	
	-- image_effect(0,smap.minigame.images[slot+1],"color"..color[1]..","..color[2]..","..color[3]..",scale0.3,0.3","frame3","pos"..smap.minigame.coordinate.spawn[slot][1]..","..smap.minigame.coordinate[slot][2]..",0")
	-- elseif ( mode == 1 ) then
	-- freeimage(sanrok.rooms.minigame.slot[slot].image[index])
	-- sanrok.rooms.minigame.slot[slot].slot_id[index] = 0

	-- elseif ( mode == 3 ) then
	
	
	-- end
	-- -- ��ġ
	
-- end

-- function scoreboard_control(slot,score)
-- slot, score = tonumber(slot), tonumber(score) or 0
	
	-- if ( score == 0 ) then 
		
		-- for n = 1, 2 do
		-- sanrok.rooms.minigame.slot[n].score[1] = 0
		-- imageframe(sanrok.rooms.minigame.slot[n].score[2],37)
		-- end
		
	-- else
	
	-- sanrok.rooms.minigame.slot[slot].score[1] = sanrok.rooms.minigame.slot[slot].score[1] + score
	-- imageframe(sanrok.rooms.minigame.slot[slot].score[2], 37+sanrok.rooms.minigame.slot[slot].score[1])
		
		-- if ( sanrok.rooms.minigame.slot[slot].score[1] == sanrok.rooms.minigame.setting.maxgoal ) then --// When reach to goal value
		-- local t_color, win_side = ( sanrok.rooms.minigame.slot[slot].team == 1 ) and "185080080" or "080145200";
		-- win_side = ( slot == 1 ) and "Left" or "Right";
		-- area_message(1, "\169"..(sanrok.rooms.minigame.setting.team_setting==1 and tcolor or "205205110")..""..win_side.." side has won the game!", x, mx, y, my);
		-- --// x, y ��ǥ �����ϱ�
		
			-- if ( sanrok.rooms.minigame.setting.gamemode == 2 ) then --// Death game penalty action
			-- area_message(1, "\169230230230[\169160020020DEATH GAME\169230230230]: \169205205110"..(( slot == 1 ) and "Right" or "Left").." side players were slained by losing game..", x, mx, y ,my)
			-- local opposite = ( slot == 1 ) and 2 or 1;
				
				-- for _, victim in pairs(sanrok.rooms.minigame.slot[opposite].slot_id) do
					-- if ( victim ~= 0 ) then
					-- parse("customkill 0 \"Losing Penalty\" "..victim);
					-- end
					
				-- end
				
			-- end
			
			-- local ptbl = {} --// Get all minigame players
				
				-- for i = 1, 2 do
					
					-- for _, v in pairs(sanrok.rooms.minigame.slot[i].slot_id) do
						
						-- if ( v ~= 0 ) then
						-- ptbl[#ptbl+1] = v;
						-- end
						
						-- if ( slot == i ) then --// Play sound for winner and losers 
						-- parse("sv_sound2 "..v.." \"sanrok_jail/vo/game_win.ogg\"") -- weeeeee
						
						-- else
						-- parse("sv_sound2 "..v.." \"sanrok_jail/vo/game_lose.ogg\"") -- oooooooooo
						
						-- end
						
					-- end
					
				-- end
				
				-- for _, id in pairs(ptbl) do
				-- parse("speedmod "..id.." "..slient[id].game.velocity)
				-- end
				
			-- image_effect(0,{sanrok.rooms.minigame.slot[1].score[2], sanrok.rooms.minigame.slot[2].score[2]},"freeimage")
				
				-- for i = 1, 2 do
					
					-- for _, v in pairs(sanrok.rooms.minigame.slot[i].image) do
					-- freeimage(v)
					-- end
					
				-- end
				
			-- initialize_minigame();
			
			
		-- end
		
	-- end

-- end

-- function check_slot_empty(n)
-- n =  tonumber(n);
	-- for i = 1, 5 do
		
		-- if ( sanrok.rooms.minigame.slot[n].condition.slot[i] ) then
		-- msg("Check result : slot is not empty")
		-- return false
		-- end
	
	-- end
	
	-- return true
	
-- end

-- function check_sit_empty(slot, index)
	-- if ( sanrok.rooms.minigame.slot[tonumber(slot)].condition.slot[tonumber(index)] ) then
	-- return false
	-- end

-- return true
-- end

-- function get_sit_player(slot)
-- local tbl = {};
	-- if ( slot ) then
	-- slot = tonumber(slot);
		
		-- for _, list in pairs (sanrok.rooms.minigame.slot[slot].slot_id) do
			
			-- if ( list ~= 0 ) then
			-- table.insert(tbl, list );
			-- end
			
		-- end
		
	-- else
		
		-- for i = 1, 2 do
			
			-- for _, list in pairs (sanrok.rooms.minigame.slot[i].slot_id) do
				
				-- if ( list ~= 0 ) then
				-- table.insert(tbl,  list );
				-- end
				
			-- end
		
		-- end
		
	-- end
	-- return tbl;
-- end

-- function mg_menu_control(id,m)
	
	-- if ( m == 0 ) then
	
	-- local gm_txt = ""
		
		-- if ( sanrok.rooms.minigame.setting.gamemode == 1 ) then
		-- gm_txt = "Casual"
		-- else
		-- gm_txt = "Death"
		-- end
		
	-- local visual = sanrok.rooms.minigame.setting.team_setting == 1 and "Visual Setting" or "(Visual Setting|Does not support in current Team mode.)";
	-- menu(id,"Minigame-Foosball@b,Team Setting,Score Setting,Game mode|"..gm_txt..","..visual)
	
	-- elseif ( m == 1 ) then --// Team setting
	-- local ctxt = sanrok.rooms.minigame.setting.team_setting == 1 and "Team affects the slot" or "Team doesn't affect the slot"
	-- menu(id,"Team Setting@b,(Current : "..ctxt.."),Decided by first picker|Affect slot,Collaborate with any forces|Does not affect slot,,,,,,Return")

	-- elseif ( m == 2 ) then
	-- menu(id,"Score Setting,(Current : "..sanrok.rooms.minigame.setting.max_goal.."|Max: 9),[+],[-],Reset score,,,,,Return")
	
	-- elseif ( m == 3 ) then
	-- local gm_tbl = 
	-- {
		-- "Casual",
		-- "Death",
		-- "Practice",
	-- }
	-- local gm_txt = gm_tbl[sanrok.rooms.minigame.setting.gamemode]
	-- menu(id,"Game mode@b,(Current : "..gm_txt.."),Casual|Play safe!,Death|Risk you and your team's life,Practice|Freely play without score game.,,,,,Return");
	
	-- elseif ( m == 4 ) then
	-- menu(id,"Visual Setting,Show colour of team side,,,,,,,,Return");
	-- end
	
-- end

-- addhook("usebutton","_usebutton")
-- function _usebutton(id,x,y)

	-- if ( entity(x,y,"name") == "mg_menu" ) then
	-- mg_menu_control(id,0);
	-- end

-- end

-- addhook("menu","_menu")
-- function _menu(id, t , b)
-- b = tonumber(b)

	-- if ( t == "Minigame-Foosball" ) then
	-- mg_menu_control(id,b)
	
	-- elseif ( t == "Team Setting" ) then
	-- local mini_user = get_sit_player(slot)
	-- table.insert(mini_user,id);
		
		-- if ( b <= 8 and b >= 1 ) then
		-- sanrok.rooms.minigame.setting.team_setting = b-1
		-- mg_menu_control(id,1);
		-- pm_action(mini_user,"Team setting has been changed.", 2) ;
		-- elseif ( b == 9 ) then
		-- mg_menu_control(id,0)
		
		-- end
	
	-- elseif ( t == "Score Setting" ) then
		
		-- if ( b <= 8) then
			
			-- if ( b == 2 ) then
			-- sanrok.rooms.minigame.setting.max_goal = sanrok.rooms.minigame.setting.max_goal < 9 and  sanrok.rooms.minigame.setting.max_goal +1 or 9
			-- elseif ( b == 3 ) then
			-- sanrok.rooms.minigame.setting.max_goal = sanrok.rooms.minigame.setting.max_goal > 1 and  sanrok.rooms.minigame.setting.max_goal -1 or 1
			
			-- elseif ( b == 4 ) then
			-- scoreboard(0,0)
			
			-- end
		-- mg_menu_control(id,2)
		
		-- elseif ( b == 9 ) then
		-- mg_menu_control(id,0)
		-- end
				
	-- elseif ( t == "Game mode" ) then
		
		-- if ( b <= 8 and b >= 1 ) then
		-- sanrok.rooms.minigame.setting.gamemode = b-1
		-- mg_menu_control(id,3)
			
		-- elseif ( b == 9 ) then
		-- mg_menu_control(id,0)
		-- end
			
	-- elseif ( t == "Visual Setting" ) then
		-- if ( b == 1 ) then
		-- target_list = {{13,0},{13,1},{17,0},{17,1}};
		-- sanrok.rooms.minigame.setting.visual[1] = not sanrok.rooms.minigame.setting.visual[1]
			-- for k = 1, #target_list do
				
				-- if ( entity(target_list[k][1],target_list[k][2],"state") == false ) then
				-- parse("triggerposition "..target_list[k][1].." "..target_list[k][2])
				-- end
			
			-- end
		-- mg_menu_control(id,4)
		-- elseif ( b == 9 ) then
		-- mg_menu_control(id,0)
		
		-- end
		
	-- end
	
-- end

-- addhook("use","_use")
-- function _use(id,event)
	-- if ( event == 0 ) then
	
		-- for i = 1, 2 do
			
			-- for j = 1, #sanrok.rooms.minigame.slot[i].coordinates.b_area do
				
				-- if ( player(id,"x") >= sanrok.rooms.minigame.slot[i].coordinates.b_area.x[1] and player(id,"x") <= sanrok.rooms.minigame.slot[i].coordinates.b_area.x[2] and player(id,"y") >= sanrok.rooms.minigame.slot[i].coordinates.b_area[j][1] and player(id,"y") <= sanrok.rooms.minigame.slot[i].coordinates.b_area[j][2] ) then
					
					-- if ( sanrok.rooms.minigame.setting.team_setting == 1 ) then
						
						-- if ( sanrok.rooms.minigame.slot[i].condition.slot[j] and tonumber(id) == sanrok.rooms.minigame.slot[i].slot_id[j] ) then
						-- --// If chair slot is occupied and presser equals to player who sitting on the chair
						-- sanrok.rooms.minigame.slot[i].condition.slot[j] = false;
						-- msg("You are no longer sitting on the chair.")
						-- sanrok.rooms.minigame.slot[i].slot_id[j] = 0;
						-- parse("speedmod "..id.." 0")
							
							-- if ( check_slot_empty(i) ) then
							-- sanrok.rooms.minigame.slot[i].team = 0
							-- msg("\169230230230 Slot["..i.."] is empty, 0 value has been assigned to team.")
							-- local e = { entity(13,0,"state"), entity(13,1,"state"), entity(17,0,"state"), entity(17,1,"state") } --// slot1-1, 2, slot2-1 ,2
								
								-- for key , state in pairs(e) do
								-- local slot = key >= 3 and 2 or 1;
									-- if ( slot == i and state == false ) then
									-- parse("trigger slot"..slot.."-"..player(id,"team"))
									-- end
									
								-- end
								
							-- end
						
						-- else
						
							-- if ( sanrok.rooms.minigame.slot[i].team == player(id,"team") or sanrok.rooms.minigame.slot[i].team == 0 ) then
							-- msg("pressed slot: "..i.." | area index : "..j)
							
								-- if ( check_sit_empty(i,j) ) then
								
									-- if ( check_slot_empty(i) ) then
									
									-- sanrok.rooms.minigame.slot[i].team = sanrok.rooms.minigame.slot[i].team == 0 and player(id,"team") or sanrok.rooms.minigame.slot[i].team
									-- msg("This are has been modified to team : "..sanrok.rooms.minigame.slot[i].team )
											
										-- if ( sanrok.rooms.minigame.slot[i].team ~= 0 and sanrok.rooms.minigame.setting.visual[1] ) then
										-- parse("trigger slot"..i.."-"..player(id,"team"));
										-- end
										
									-- end
									
								-- sanrok.rooms.minigame.slot[i].condition.slot[j] = true;
								-- sanrok.rooms.minigame.slot[i].slot_id[j] = tonumber(id);
								-- parse("speedmod "..id.." -100")
								-- break
								-- end
							
							-- end
						
						-- end
						
					-- end
					
				-- end
				
			-- end
			
		-- end
	
	-- end
	
-- end	

-- initialize_minigame()
--=======================================================================--
--[[
	
	85th. Hudtxt3 positioning system
	New fix new version 
	
]]--

-- function hudtxts(mode, auto_scale, player_id, text_color, hud_id, text, x, y , ali, vali, size)
-- ali = ali or 0; vali = vali or 0;
-- text_color = ( type(text_color) == "string" ) and text_color or "255250000" --// Set default CS2D color if type is not string
	
	-- if ( mode == 0 ) then --// default hudtxt function
		
		-- if ( player_id == 0 ) then --// Parse hudtxt function for everyone in game.
			
			-- for _, aid in pairs(player(0,"table")) do
			-- local t_size = size or 13;
			-- t_size = ( type(t_size) == "string" and t_size:find("a") ) and (tonumber(t_size:sub(2))*player(aid,"screenw"))/850 or t_size
			
			-- local nx, ny;
			-- nx = ( auto_scale ) and (x/850) * player(aid,"screenw") or x;
			-- ny = ( auto_scale ) and (y/480) * player(aid,"screenh") or y;
			
			-- hudtxts(0, false, aid, text_color, hud_id, text,nx, ny, ali, vali, t_size);
			-- end
		
		-- else
			
		-- x = ( auto_scale ) and ( x/850 ) * player(player_id,"screenw") or x;
		-- y = ( auto_scale ) and ( y/480 ) * player(player_id,"screenh") or y;
		
		-- size = size or 13; 
		-- size = ( type(size) == "string" and size:find("a") ) and ( tonumber(size:sub(2)) * player(player_id,"screenw"))/850 or size;
		
		-- parse("hudtxt2 "..player_id.." "..hud_id.." \"\169"..text_color..""..text.."\" "..x.." "..y.." "..ali.." "..vali.." "..size);
		
		-- end
	
	-- elseif ( mode == 1 ) then --// set hudtxt in specific position
	-- auto_scale = false;
		-- if ( player_id == 0 ) then
			
			-- for _, aid in pairs(player(0,"table")) do
			-- local t_size = size or 13;
			-- t_size = ( type(t_size) == "string" and t_size:find("a") ) and (tonumber(t_size:sub(2))*player(aid,"screenw"))/850 or t_size
			
			-- hudtxts(1, false, aid, text_color, hud_id, text, x, y, ali, vali, t_size);
			-- end
			
		-- else
		
		-- x = ( x - player(player_id,"x"))+ (player(player_id,"screenw")/2)
		-- y = ( y - player(player_id,"y")) + (player(player_id,"screenh")/2)
		
		-- size = size or 13; 
		-- size = ( type(size) == "string" and size:find("a") ) and ( tonumber(size:sub(2)) * player(player_id,"screenw"))/850 or size;
		
		-- parse("hudtxt2 "..player_id.." "..hud_id.." \"\169"..text_color..""..text.."\" "..x.." "..y.." "..ali.." "..vali.." "..size);
		-- end
		
	-- end
		
-- end
	
--=======================================================================--
--[[
	
	86th. Actual fifa function
	
	
-- ]]--
-- function BanList()
	-- ban_requested = true
	-- parse("bans")
	-- return ban_list
-- end

-- ban_count = 0
-- ban_requested = false
-- ban_counting = false

-- addhook("log","ban_logger")
-- function ban_logger(txt)
	-- if ban_requested then
		-- if txt == "----- List of Bans -----" then
			-- return 1
		-- elseif string.sub(txt, 1, 11) == "bans total:" then
			-- ban_list = {}
			-- ban_counting = true
			-- ban_count = tonumber(string.sub(txt, 13))
			-- return 1
		-- elseif ban_counting and string.sub(txt, 1, 2) == "* " then
			-- txt = string.sub(txt, 3)

			-- ban_count = ban_count - 1

			-- local ban_type
			-- local ban_id
			-- if string.sub(txt, 1, 7) == "USGN ID" then
				-- ban_id = tonumber(string.sub(txt, 10))
				-- ban_type = "usgn"
			-- elseif string.sub(txt, 1, 2) == "IP" then
				-- ban_id = string.sub(txt, 4)
				-- ban_type = "ip"
			-- elseif string.sub(txt, 1, 4) == "Name" then
				-- ban_id = string.sub(txt, 6)
				-- ban_type = "name"
			-- end

			-- -- Temporal ban?
			-- if string.find(txt, "%(temp") then
				-- local tban_id
				-- local tban_time
				-- local tban_reason

				-- if ban_type == "usgn" then
					-- tban_id = string.sub(txt, 10, txt:find("%(temp")-2)
				-- elseif ban_type == "ip" then
					-- tban_id = string.sub(txt, 4, txt:find("%(temp")-2)
				-- elseif ban_type == "name" then
					-- tban_id = string.sub(txt, 6, txt:find("%(temp")-2)
				-- end
				-- tban_time, tban_reason = txt:match('%(temp, (%d+) sec%) %[(.+)%]')

				-- table.insert(ban_list, {t = ban_type,id = tban_id,extra = tban_reason.." ("..tban_time.." secs.)"})
			-- elseif ban_type and ban_id then
				-- table.insert(ban_list, {t = ban_type,id = ban_id,extra=""})
			-- end

			-- if ban_count <= 0 then
				-- ban_counting = false
				-- ban_requested = false
			-- end
			-- return 1
		-- end
	-- end
-- end

-- --player_unban_menu = CreateMenu("Unban player@b")
-- player_unban_menu = CreateMenu(365)

-- function player_unban_menu:getcustombutton(b,id,def)
	-- if ban_list[b] then
		-- local but = ban_list[b]
		-- if but.t == "usgn" then
			-- return "USGN ID #"..but.id.."|"..but.extra
		-- elseif but.t == "ip" then
			-- return "IP "..but.id.."|"..but.extra
		-- elseif but.t == "name" then
			-- return Translate(id, 99).." "..FixedName(but.id).."|"..but.extra
		-- end
	-- end
-- end

-- function player_unban_menu:click(id,b,page)
	-- if ban_list[b] then
		-- local but = ban_list[b]
		-- if but.t == "usgn" then
			-- parse("unban "..but.id)
		-- elseif but.t == "name" then
			-- parse('unban "'..but.id..'"')
		-- elseif but.t == "ip" then
			-- parse("unban "..but.id)
		-- end

		-- player_unban_menu:OpenPlayer(id, 1)
		-- BanList()
	-- end
-- end

-- function player_unban_menu:OpenPlayer(id,page)
	-- BanList()
	-- local page = page or 1
	-- menu(id, player_unban_menu.title.." | Page "..page.."@b,"..player_unban_menu:PageText(page, id))
-- end

-- AddMenu(player_unban_menu, 26)

-- --=======================================================================--
-- --[[
	
	-- 87th. 
	
	
-- ]]--

-- game_menu = {}

-- function CreateMenu(title,txt) -- 365
	-- if title then -- true
		-- local modifier = "" 
		-- if string.find(title, "@") then -- mismatch
			-- modifier = title:match("@(.+)")
			-- title = title:sub(1, title:find("@")-1)
		-- end

		-- title = tonumber(title) or title -- 365
		-- game_menu[title] = {} -- game_menu[365] = {}
		-- game_menu[title].title = title -- game_menu[365] = {.title = 365 }
		-- game_menu[title].modifier = modifier -- game_menu[365] = { title = 365, modifier = "" };
		-- setmetatable(game_menu[title], {__index = class_menu})

		-- game_menu[title]:SetText(txt)
		-- return game_menu[title]
	-- end
-- end

-- class_menu = {}

-- function InsertMenuTags(id,text)
	-- text = InsertTags(id, text)
	-- text = string.gsub(text, string.char(169)..".........", "")
	-- return text
-- end

-- function ButtonPage(b)
	-- if b < 9 then return 1 end
	-- if b >= 9 then
		-- local bt = b - 9
		-- return math.floor(bt/7) + 2
	-- end
-- end

-- function PageButtons(p)
	-- if p == 1 then return 8 end
	-- return 7
-- end

-- function GetButtons(page)
	-- local t = {}
	-- if page == 1 then
		-- for i = 1, 8 do table.insert(t, i) end
	-- elseif page > 1 then
		-- for i = 1, 7 do table.insert(t, 8 + i + (page-2)*7) end
	-- end
	-- return t
-- end

-- function class_menu:SetText(txt)
	-- if type(txt) == "string" then
		-- self.buttonText = txt:split(",")
	-- elseif type(txt) == "table" then
		-- self.buttonText = txt
	-- else
		-- self.buttonText = {}
	-- end
-- end

-- function class_menu:getcustombutton(button,id,default)
-- end

-- function class_menu:click(id,button,page)
-- end

-- function class_menu:getbutton(b,p,id)
	-- local button = GetButtons(p)[b]
	-- local defaultBtText = self.buttonText[button]
	-- local btText = self:getcustombutton(button, id, defaultBtText) or defaultBtText or ""
	-- return InsertMenuTags(id, btText)
-- end

-- function class_menu:PageText(p, id)
	-- local text = ""
	-- for i = 1, PageButtons(p) do
		-- text = text .. self:getbutton(i, p, id) ..","
	-- end	
	-- if p == 1 then
		-- text = text..Translate(id, 311).."|"..Translate(id, 313).." "..p+1
	-- elseif p > 1 then
		-- text = text..Translate(id, 312).."|"..Translate(id, 313).." "..(p-1)..","..Translate(id, 311).."|"..Translate(id, 313).." "..(p+1)
	-- end
	-- return text
-- end

-- function class_menu:gettitle(id)
	-- if type(self.title) == "string" then
		-- return self.title
	-- elseif type(self.title) == "number" then
		-- if id then
			-- return Translate(id, self.title)
		-- else
			-- return "trans:"..self.title
		-- end
	-- end
-- end

-- function class_menu:OpenPlayer(id,page)
	-- local page = page or 1
	-- if string.len(self.modifier) > 0 then
		-- menu(id, self:gettitle(id).." | Page "..page.."@"..self.modifier..","..self:PageText(page, id))
-- --		menu(id, self:gettitle(id).." | Page "..page.."@"..self.modifier..","..self:PageText(page, id))
	-- else
		-- menu(id, self:gettitle(id).." | Page "..page..","..self:PageText(page, id))
-- --		menu(id, self:gettitle(id).." | Page "..page..","..self:PageText(page, id))
	-- end
-- end

-- addhook("menu","menu_click")
-- function menu_click(id,men,sel)
	-- local menu_name, menu_page = string.match(men, "(.+) | Page (%d+)")
	-- if menu_name and menu_page then
		-- menu_page = tonumber(menu_page)

		-- local menu_id, lan_id = TranslationID(menu_name, USER[id]["lan"])
		-- menu_id = menu_id or menu_name
		-- if menu_id then
			-- local menu_object = game_menu[menu_id]
			-- if menu_object then
				-- local button = GetButtons(menu_page)[sel] or 0
				-- if menu_page then
					-- if sel == 9 then
						-- menu_object:OpenPlayer(id, menu_page+1)
					-- elseif sel == 8 and menu_page > 1 then
						-- menu_object:OpenPlayer(id, menu_page-1)
					-- else
						-- menu_object:click(id, button, menu_page)
					-- end
				-- end
			-- end
		-- end
	-- end
-- end


--=======================================================================--
--[[
	
	88th. Shoot range spectator mode
	
	
]]--
-- addbind("escape");
-- sanrok = {}
-- dofile("maps/sanrok_jail/utils.lua");

-- sanrok_room = {

	-- shootrange = 
	-- {
	
		-- specdummy = {},
	-- }
	
-- };

-- slient = {};

-- for id = 1 ,32 do
	-- slient[id] = 
	-- { 	
		-- rooms = {
		
			-- shootrange = 
			-- {
				-- spectator = false,
			-- }
		-- },
		
		-- player_armour = 0,
		-- player_velocity = 0,
		-- weapons = {},
	
	-- }
	
	
-- end

-- function get_weapons(id)
-- slient[id].weapons = {};

	-- for _, weapon_id in pairs(playerweapons(id)) do
		-- if ( weapon_id ~= 50 ) then
		
		-- local ammoin, ammo = playerammo(id,weapon_id);
		-- table.insert(slient[id].weapons,{weapon_id,ammoin,ammo});
		
		-- end
		
	-- end
	
-- end

-- function shootrange_spawndummy(id)
-- local team = player(id,"team")==1 and "t" or "ct";
-- table.insert(sanrok_room.shootrange.specdummy,id,image("<spritesheet:gfx/player/"..team..""..(tonumber(player(id,"look"))+1)..".bmp:32:32:<m>>",0,0,0));
-- image_effect(0,sanrok_room.shootrange.specdummy[id],"pos"..player(id,"x")..","..player(id,"y")..","..player(id,"rot"),"hitzone3,0,0,32,32","frame3");
-- end

-- function shootrange_spec_toggle(id)
	-- if ( slient[id].rooms.shootrange.spectator ) then
	-- slient[id].player_armour = player(id,"armor");
	-- slient[id].player_velocity = player(id,"speedmod");
	-- parse("setarmor "..id.." 206");
	-- parse("speedmod "..id.." -100");
	-- shootrange_spawndummy(id);
	-- parse("setpos "..id.." "..(9*32+16).." "..(6*32+16));
	-- get_weapons(id);
		
		-- for _, weapon in pairs(playerweapons(id)) do
			
			-- if ( weapon ~= 50 ) then
			-- parse("strip "..id.." "..weapon)
			-- end
			
		-- end
		
	-- else
	
	-- freeimage(sanrok_room.shootrange.specdummy[id])
	-- sanrok_room.shootrange.specdummy[id] = nil;
	-- remove_hud(id,40,true,500)
	
	-- parse("setarmor "..id.." "..slient[id].player_armour);
	-- parse("speedmod "..id.." "..slient[id].player_velocity);
	-- parse("setpos "..id.." "..(5*32+16).." "..(7*32+16));
	
		-- for i = 1, #slient[id].weapons do
		-- parse("equip "..id.." "..slient[id].weapons[i][1]);
		-- parse("setammo "..id.." "..slient[id].weapons[i][1].." "..slient[id].weapons[i][2].." "..slient[id].weapons[i][3]);
		-- end
		
	-- end
	
-- end

-- addhook("usebutton","shootrange_usebutton")
-- function shootrange_usebutton(id, x, y)
	
	-- if ( entity(x,y ,"name") == "SH_spec" ) then
	-- slient[id].rooms.shootrange.spectator = true
	-- shootrange_spec_toggle(id);
	-- pm_action(id,"You've entered spectating mode, when you get damages from something, spectator mode automatically canceled.",2,true);
	-- hudtxts(0,true,id,"160160105",40,"Press \169230230230[\169150195095ESC\169230230230]\169160160105 to exit the spectator mode.",425,10,1,0,13) 
	
	-- end

-- end

-- addhook("hit","_hit")
-- function _hit(id,src)
	-- if (slient[src].rooms.shootrange.spectator) then
	-- return 1
	-- end
	
	-- if ( slient[id].rooms.shootrange.spectator ) then
	-- return 1
	-- end
-- end

-- addhook("hitzone","shootrange_hitzone")
-- function shootrange_hitzone(img,id,dynid,wid,ix,iy,dmg)
	
	-- if ( #sanrok_room.shootrange.specdummy >= 1 ) then
		
		-- for i = 1, #sanrok_room.shootrange.specdummy do
		
			-- if ( img == sanrok_room.shootrange.specdummy[i] ) then
			-- slient[i].rooms.shootrange.spectator = false;
			-- shootrange_spec_toggle(i);
			-- pm_action(i, "You've forced to left the spectator mode. - [Injured by something] ",1,true);
			-- end
			
		-- end
	
	-- end
	
-- end
-- addhook("attack","shootrange_attack")
-- function shootrange_attack(id)
	-- if ( slient[id].rooms.shootrange.spectator ) then
	-- local c_area = { 7, 24, 1 , 12 };
	-- local px, py = math.floor(player(id,"mousemapx")/32), math.floor(player(id,"mousemapy")/32)
		
		-- if ( px >= c_area[1] and px <= c_area[2] and py >= c_area[3] and py <= c_area[4] and entity(px,py,"name")=="SH_specarea" ) then
		-- parse("setpos "..id.." ".. math.floor(player(id,"mousemapx")) .." "..  math.floor(player(id,"mousemapy") ))
		-- end
	
	-- end

-- end

-- addhook("key","shootrange_key")
-- function shootrange_key(id,key,state)
	-- if ( key == "escape" and state == 1 and slient[id].rooms.shootrange.spectator ) then
	-- slient[id].rooms.shootrange.spectator = false;
	-- shootrange_spec_toggle(id)
	-- pm_action(id, "You've left the spectator mode.",2,true);
	-- end
-- end

--=======================================================================--
--[[
	
	89th. Shoot range drop weapon
	
	
]]--
-- item_table = {};
-- addhook("usebutton","_usebutton")
-- function _usebutton(id,x,y)
	-- if ( entity(x,y,"name") == "SH_throw" ) then
	-- local item_con = false;
		-- for _, weapons in pairs(playerweapons(id)) do
			
			-- if not( weapons == 55 or weapons == 50 ) then
			-- item_con = true
			-- local ammoin , ammo = playerammo(id,weapons);
			-- parse("strip "..id.." "..weapons);
			-- parse("spawnitem "..weapons.." 2 4 "..ammoin.." "..ammo);
			-- table.insert(item_table,{item(0,"table")[#item(0,"table")],5})
			-- end
			
		-- end
		
		-- if ( item_con ) then
		-- parse("effect \"smoke\" "..(2*32+16).." "..(4*32+16).." 5 10")
		-- parse("sv_soundpos \"items/drop.wav\" "..(2*32+16).." "..(4*32+16))
		-- end
		
	-- end	
	
-- end

-- addhook("second","_second")
-- function _second()
	-- if ( #item_table ~= 0 ) then
		
		-- for i = 1, #item_table do	
			
			-- if ( item_table[i][2] ~= 0 ) then
			-- item_table[i][2] = item_table[i][2] -1; 
			
				-- if ( item_table[i][2] == 0 ) then
				-- parse("removeitem "..item_table[i][1])
				-- item_table[i] = nil
				-- end
				
			-- end
		
		-- end
		
	-- end
	
-- end

--=======================================================================--
--[[
	
	90th. Shootrange Dummy
	
	
]]--

--[[ ����￿���� �ý��� 

	���̺� ����
	1. �̹���
	2. ����￿�Է� ���� ( �и� / �� )
	
]]
-- sanrok = {}
-- dofile("maps/sanrok_jail/utils.lua");

-- sanrok_room = {

	-- shootrange = 
	-- {
	
		-- target_dummies = {},
		-- target_objects = {},
		
		-- player = {},
		
		-- game = {
		
			-- state = false,
			-- ranks = {
				-- --{"Player\007",123248(12:32:48)} // SHT
				
			-- }, 
			-- timer = {false,0},
			-- shot_missed = 0,
			
		-- },
		
		-- setting = {
		
		-- mode = 2, 
		
		-- respawn_time = 1000,
		-- despawn_time = 1000,
		
		-- spawntype = 1,
		-- spawn_amount = 30,
		-- HP_adjust = 0,
		
		-- inf_shot = false,
		
		-- score = {0,0},
		
		
		
		-- }
	-- }
	
-- -- };
-- function SH_compare_rank(record)
	-- for key, rank in pairs (sanrok_room.shootrange.game.ranks) do
	-- end
	
-- end

-- rank_list =
-- {
	-- --[[
	
		-- 1. Name
		-- 2. USGN online
		-- 3. Steam Online
		-- 4. Time
		-- 5. Shot miss
		
	-- ]]--
	-- {"Oops321",true,true}
-- }
-- function comp(a, b)
    -- if ( a > b ) then
    -- return b;
    -- end
-- end


-- function SHT_start_timer()
	
-- end

-- function SH_write_rank(id, record)
-- id = tonumber(id);
	-- if ( #sanrok_room.shootrange.game.ranks ~= 0 ) then
	-- msg("[DEBUG]: \169230230230 Found more than one element in rank table.")
	-- local prev;
		-- for key, rank in pairs (sanrok_room.shootrange.game.ranks) do
			
			-- if ( player(id,"name") == rank[1]:sub(1,rank[1]:find("\007")-1) ) then
			-- msg("[DEBUG]: \169200255200Previous record has been found! ["..key.."]");
			-- prev = key;
			-- break;
			-- end
		-- end
	
		-- if ( prev ) then
		-- msg("[DEBUG]: \169200255200Overwritting previous record..");
		-- sanrok_room.shootrange.game.ranks[prev] = {player(id,"name").."\007", record};
		-- else
		-- msg("[DEBUG]: \169200255200No previous record has been found, adding new one.");
		-- table.insert(sanrok_room.shootrange.game.ranks,{player(id,"name").."\007", record});
		-- end
		
	-- else
	-- msg("[DEBUG]: \169200255200Rank table is empty, just adding.");
	-- table.insert(sanrok_room.shootrange.game.ranks,{player(id,"name").."\007", record});
	-- end
	
	-- local file = io.open("maps/sanrok_jail/data/Shootrange.rnk","w");
	-- file:write(table.uneval(sanrok_room.shootrange.game.ranks));
	-- file:close();
-- end

-- function SH_load_ranks() --// ��ũ �ҷ�����
-- local file = io.open("maps/sanrok_jail/data/Shootrange.rnk","r");
	-- if ( file ) then
	-- local temp = loadstring("return "..file:read("*a")); sanrok_room.shootrange.game.ranks = temp(); file:close();
	-- end
-- end

-- function SH_read_ranks(id)
	-- if ( #sanrok_room.shootrange.game.ranks ~= 0 ) then
	-- msg("Table has elements")
		-- for _, rank in pairs (sanrok_room.shootrange.game.ranks) do
		-- msg("Start loop")
		-- local temp_img, nextstr, comma, str_Image;
		-- nextstr = rank[1]:find("\007");
		-- comma = rank[1]:find(",", nextstr+1) or #rank[1]+1;
		
		-- temp_img = {rank[1]:sub(nextstr+1,comma-1), (#rank[1] == comma-1) and nil or rank[1]:sub(comma+1)};
		-- print(temp_img[1].."|"..temp_img[2]);
		
			-- -- str_Image = "\174gfx/Sanrok_jail/misc/icon_x_mark.png"
			-- -- str_Image = "\174gfx/Sanrok_jail/misc/icon_usgn.png" .. "\174gfx/Sanrok_jail/misc/icon_steam.png"
		-- end
	
	-- else
	-- msg("Table is empty, try again")
	-- end
	
-- end

-- function test()
-- msg("Sample image \174gfx/Sanrok_jail/misc/icon_steam.png")
-- msg("Sample image \174gfx/Sanrok_jail/misc/icon_usgn.png")
-- msg("Sample image \174gfx/Sanrok_jail/misc/icon_x_mark.png")
-- local n = "\007hello"
	-- if ( n:find("\007") ) then
	-- msg("hi!")
	-- end
-- end	

-- function SH_call_menu(page)
-- local mode = sanrok_room.shootrange.setting.mode;

-- local conv_tbl = 
	-- {
		-- [1] = sanrok_room.shootrange.setting.spawntype == 1 and "Target Dummy" or "Snark",

	-- }

	-- if ( mode == 4 ) then
	-- local stype = sanrok_room.shootrange.setting.spawntype;
		
		-- if ( stype == 1 ) then
		-- conv_tbl[1] = "Zombie";
		
		-- elseif ( stype == 2 ) then
		-- conv_tbl[1] = "Headcrab";
		
		-- elseif ( stype == 3 ) then
		-- conv_tbl[1] = "Snark";
		
		-- elseif ( stype == 4 ) then
		-- conv_tbl[1] = "Vorigaunt";
		
		-- elseif ( stype == 5 ) then
		-- conv_tbl[1] = "Randomize";
		-- end
		
	-- end
	
-- local menutxt, m = {
		
	-- {"Reflection Test", true, true, true, true, false},
	-- {"Aim Test", true, true, false, true, false},
	-- {"Training Course", false, false, false, false, false},
	-- {"NPC Arena",false, false, true, true, true},
	
	-- m_txt = {
	
		-- "Respawn time | "..(type(sanrok_room.shootrange.setting.respawn_time)=="number" and ""..(sanrok_room.shootrange.setting.respawn_time/1000).." second" or sanrok_room.shootrange.setting.respawn_time), -- 2
		-- "Despawn time | "..(type(sanrok_room.shootrange.setting.despawn_time)=="number" and ""..(sanrok_room.shootrange.setting.despawn_time/1000).." second" or sanrok_room.shootrange.setting.despawn_time), -- 3
		-- "Spawn type | "..conv_tbl[1], 													-- 4
		-- "Spawn amount | "..sanrok_room.shootrange.setting.spawn_amount,					-- 5
		-- "NPC Health | +"..sanrok_room.shootrange.setting.HP_adjust,						-- 6
	-- }

-- }
	

	-- if ( page == 1 ) then --// Main page

	-- m = "Shoot range Setting - ["..menutxt[sanrok_room.shootrange.setting.mode][1].."],Switch mode";

		-- for j = 1, #menutxt.m_txt do
		-- m = menutxt[mode][j+1] and m..","..menutxt.m_txt[j] or m..",("..menutxt.m_txt[j]..")";
		-- end

	-- return m..",,,Other setting"; -- 9
	
	-- elseif ( page == 2 ) then --// Switch mode
	-- m = "Switch mode"
		
		-- for i = 1, #menutxt do
			
			-- if ( mode == i ) then
			-- m = m..",("..menutxt[i][1]..")";
			
			-- else
			-- m = m..","..menutxt[i][1];
			-- end
			
		-- end
		
	-- return m..",,,,,Previous";
	
	-- elseif ( page == 3 ) then --// Respawn menu
	-- return menutxt.m_txt[1]..",100,300,500,1000,3000,Randomize|100~3000,,(These are miliseconds.),Previous";
	
	-- elseif ( page == 4 ) then --// Despawn menu
	-- return menutxt.m_txt[2]..",100,300,500,1000,3000,Randomize|100~3000,,(These are miliseconds.),Previous";
	
	-- elseif ( page == 5 ) then --// Spawn type
	-- m = menutxt.m_txt[3];
		
		-- if ( mode == 4) then
		-- m = m..",Zombie,Headcrab,Snark,Vorigaunt,Randomzie,,,,Previous";
		
		-- return m
		-- else
		-- m = m..",Dummy,Snark|<!>Dangerous,,,,,,,Previous";
		-- return m
		-- end
	
	-- elseif ( page == 6 ) then --// Spawn amount
	-- return menutxt.m_txt[4]..",5,10,20,30,50,,,,Previous";
	
	-- elseif ( page == 7 ) then --// Other setting
	-- return "Other setting|"..menutxt[mode][1]..",Infinity shooting|"..((sanrok_room.shootrange.setting.inf_shot) and "Enabled" or "Disabled")..",Reset score counter,,,,,,,Previous";
	
	-- elseif ( page == 8 ) then --// HP setting
	-- return menutxt.m_txt[5]..",+0,+10,+30,+50,+100,+Randomize,,,Previous";
	-- end
	
-- end

-- function SH_action_menu(id, t , b)
	-- if not( sanrok_room.shootrange.game.state ) then
		-- if ( t:sub(1,19) == "Shoot range Setting" ) then

			-- if ( b == 1 ) then
			-- menu(id,SH_call_menu(2))
			
			-- elseif ( b == 2 ) then
			-- menu(id,SH_call_menu(3))
			
			-- elseif ( b == 3 ) then
			-- menu(id,SH_call_menu(4))
			
			-- elseif ( b == 4 ) then
			-- menu(id,SH_call_menu(5))
			
			-- elseif ( b == 5 ) then
			-- menu(id,SH_call_menu(6))
			
			-- elseif ( b == 6 ) then
			-- menu(id,SH_call_menu(8))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(7))
			
			-- end
		
		-- elseif ( t:sub(1,11) == "Switch mode" ) then
			
			-- if ( b > 0 and b < 9 ) then
			-- sanrok_room.shootrange.setting.mode = b;
			-- sanrok_room.shootrange.setting.spawntype = sanrok_room.shootrange.setting.mode == 4 and sanrok_room.shootrange.setting.spawntype or 1;
			
				-- if ( b == 2 ) then
					-- msg("YO!")
					-- for i = 1,10 do
					-- timer(100,"parse","trigger SH_aimw"..i);
					-- end
					
				-- else
					-- for i = 122, 131 do
						
						-- if not( entity(i,112,"state") ) then
						-- parse("triggerposition "..i.." 112");
						-- end
					-- end
				-- end
			-- menu(id,SH_call_menu(2))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- elseif ( t:sub(1,12) == "Respawn time" ) then
			
			-- if ( b > 0 and b < 9 ) then
			-- local adjust_var = {100,300,500,1000,3000,"Randomized"};
			-- sanrok_room.shootrange.setting.respawn_time = adjust_var[b]
			-- menu(id,SH_call_menu(3))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- elseif ( t:sub(1,12) == "Despawn time" ) then
			
			-- if ( b > 0 and b < 9 ) then
			-- local adjust_var = {100,300,500,1000,3000,"Randomized"};
			-- sanrok_room.shootrange.setting.despawn_time = adjust_var[b]
			-- menu(id,SH_call_menu(4))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- elseif ( t:sub(1,10) == "Spawn type" ) then
			
			-- if ( b > 0 and b < 9 ) then
			-- sanrok_room.shootrange.setting.spawntype = b;
			-- menu(id,SH_call_menu(5))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- elseif ( t:sub(1,12) == "Spawn amount" ) then
		
			-- if ( b > 0 and b < 9 ) then
			-- local adjust_var = {5,10,20,30,50,"Randomized"};
			-- sanrok_room.shootrange.setting.spawn_amount = adjust_var[b]
			-- menu(id,SH_call_menu(6))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- elseif ( t:sub(1,10) == "NPC Health" ) then
			
			-- if ( b > 0 and b < 9 ) then
			-- local adjust_var = {0,10,30,50,100,"Randomized"};
			-- sanrok_room.shootrange.setting.spawn_amount = adjust_var[b]
			-- menu(id,SH_call_menu(8))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- elseif ( t:sub(1,13) == "Other setting" ) then
			
			-- if ( b > 0 and b < 9 ) then
				
				-- if ( b == 1 ) then
				-- sanrok_room.shootrange.setting.inf_shot = not(sanrok_room.shootrange.setting.inf_shot);
				-- elseif ( b == 2 ) then
				
				-- end
				
			-- menu(id,SH_call_menu(7))
			
			-- elseif ( b == 9 ) then
			-- menu(id,SH_call_menu(1))
			-- end
			
		-- end
	-- else
	-- msg2(id,sanrok.t_preset[1].."Can not change setting during the game begun.");
	-- end
-- end

-- addhook("usebutton","SH_usebutton")
-- function SH_usebutton(id,x,y)
	
	-- if ( entity(x,y,"name") == "SH_menu" ) then
	-- menu(id,SH_call_menu(1));
	
	-- elseif ( entity(x,y,"name") == "SH_starter" and sanrok_room.shootrange.game.state == false ) then
	-- local limit = sanrok_room.shootrange.setting.mode == 4 and 4 or 1;
		
		-- if ( #get_area_player(13, 4, 18, 9) >= 1 and #get_area_player(13, 4, 18, 9) <= limit ) then
		-- --// Start action
		-- local name = ' ';
		
		-- sanrok_room.shootrange.player = get_area_player(13, 4, 18, 9);
			
			-- for i = 1, #sanrok_room.shootrange.player do
			-- name = name.."\169"..math.random(100,255)..""..math.random(100,255)..""..math.random(100,255).." "..player(sanrok_room.shootrange.player[i],"name");
			-- name = (#sanrok_room.shootrange.player > 1 and i ~= #sanrok_room.shootrange.player ) and name.."," or name.." ";
				
			-- end
			
		-- area_message(1, sanrok.t_preset[2].."Training has begun, Player - ["..name.."\169220210120]", 0, 50, 0, 50 )
		-- sanrok_room.shootrange.game.state = true;
		-- else
		-- area_message(1, sanrok.t_preset[1].."Need more player / less player to begin! [Require 1 ~ "..limit.." player(s)]", 0, 50, 0, 50 )
		-- end
	-- end
	
-- end

-- addhook("menu","SH_action_menu")
-- --[[
	-- Dummy table
	-- 1. image
	-- 2. x coordinate
	-- 3. y coordinate
	-- 4. Is dummy move?
	-- 5. Damage type ( 1. Everything / 2. Melee only / 3. Ranged only )
	-- 6. Remove on death?
	-- 7. Triggers
-- ]]

-- function SH_spawnobject(otype, x, y, angle, move, dmgtype, ROD, Entity)

	-- if ( otype == 0 ) then
	-- --// [[Check old dummy's position with new dummy's position]]
	-- local CON_Occupied = false;
	
		-- if ( #sanrok_room.shootrange.target_dummies ~= 0 ) then --// Check whether dummy table is empty.
			
			-- for i = 1, #sanrok_room.shootrange.target_dummies do
			
				-- if ( x == sanrok_room.shootrange.target_dummies[i][2] and y == sanrok_room.shootrange.target_dummies[i][3] ) then
				-- --// Compare new coordinates with existing dummies coordinates
				-- CON_Occupied = true
				-- end
				
			-- end
		
		-- end
	-- --// If new position isn't occupied
		-- if not( CON_Occupied ) then
		-- local tx, ty = x*32+16, y*32+16; -- Convert tileXY to pixelXY
		-- local pid = sanrok_room.shootrange.player[math.random(1,#sanrok_room.shootrange.player)]; -- Pick random players in shoot range
		
		-- angle = ( type(angle)=="string" ) and math.deg(-math.atan2(tx - player(pid,"x"), ty - player(pid,"y"))) or angle;
		
		-- table.insert(sanrok_room.shootrange.target_dummies,#sanrok_room.shootrange.target_dummies+1,{image("gfx/sanrok_jail/models/target_dummy.png",x*32+16,y*32+16,0), tx, ty, move, dmgtype, ROD, Entity});
		-- image_effect(0,sanrok_room.shootrange.target_dummies[#sanrok_room.shootrange.target_dummies][1],"pos"..tx..","..ty..","..angle,"hitzone103,-16,-16,16,16");
		
			-- --// Check dummy has move parameter 
			-- if ( move ) then
			-- local to_x, to_y = (type(move[1])=="string") and math.random(-3,3) or move[1], (type(move[2])=="string") and math.random(-3,3) or move[2];
					-- --// Find walkable place
				-- while true do
				-- local arena_area, limiter = { 13, 18, 3, 9 }, 10; --// Shoot range area table, Prevention of stack overflow
					
					-- if ( tile(to_x+x, to_y+y, "walkable") and to_x+x >= arena_area[1] and to_x+x <= arena_area[2] and to_y+y >= arena_area[3] and to_y+y <= arena_area[4] ) then
					-- break
					
					-- else
					-- --// if final tile was not walkable or outside of area, randomize coordinate or keep the value.
					-- to_x = type(move[1])=="string" and math.random(-3,3) or move[1];
					-- to_y = type(move[2])=="string" and math.random(-3,3) or move[2];
					
					-- end
				
				-- limiter = limiter -1;
					-- if ( limiter == 0 ) then --// Prevention of stack overflow
					-- msg("could not find right position to spawn, quitting.")
					-- to_x, to_y = 0, 0;
					
					-- break
					-- end
					
				-- end
				
			-- image_effect(0,sanrok_room.shootrange.target_dummies[#sanrok_room.shootrange.target_dummies][1],"tmove1000,"..(tx+(to_x*32+16))..","..(ty+(to_y*32+16)))
			-- end
		
		-- end
	
	-- elseif ( otype > 0 and otype < 5 ) then
	-- local tx, ty, pid = x*32+16, y*32+16, sanrok_room.shootrange.player[math.random(1,#sanrok_room.shootrange.player)];
	-- local angle = ( type(angle)=="string" ) and math.deg(-math.atan2(tx - player(pid,"x"), ty - player(pid,"y"))) or angle;
	
	-- parse("spawnnpc "..otype.." "..x.." "..y.." "..angle)
	-- parse("damageobject "..objectat(x,y).." "..(-sanrok_rooms.setting.HP_adjust).." 0");
		
		-- if ( Entity ) then
		-- table.insert(target_objects,{objectat(x,y,40),Entity});
		-- end
		
	-- elseif ( type(otype) == "string" ) then
	-- SH_spawnobject(math.random(1,4), x, y, angle, false, false, Entity);
	-- end	
	
-- end	

-- addhook("objectkill","sanrok_objectkill")
-- function sanrok_objectkill(dyid, id)
	
	-- if ( #target_objects > 0 ) then
		
		-- for i = 1, #target_objects do
			
			-- if ( target_objects[i][1] == dyid ) then
			
				-- for _, list in pairs(target_objects[i][2]) do
				-- parse("trigger "..list);
				-- end
				
			-- break
			-- end
		
		-- end
		
	-- end
	
-- end


-- addhook("hitzone","_hitzone")
-- function _hitzone(img,id,dynid,wid,ix,iy,dmg)
-- msg("[DEBUG - Image hit]: \169230230230 You hit an image - ["..img.."]")
	-- for i = 1, #sanrok_room.shootrange.target_dummies do
	-- local melee = {50,69,74,78,85};
	
		-- if ( img == sanrok_room.shootrange.target_dummies[i][1] ) then
			
			-- if ( sanrok_room.shootrange.target_dummies[i][5] == 2 or sanrok_room.shootrange.target_dummies[i][5] == 3 ) then
			-- local melee_con, final_con = false;
			-- final_con = sanrok_room.shootrange.target_dummies[i][5] == 2 and true or false;
				-- for _, melee_wpn in pairs(melee) do
				
					-- if ( player(id,"weapontype") == melee_wpn ) then
					-- melee_con = true
					-- end
				
				-- end
				
				-- if ( melee_con == final_con ) then
				-- image_effect(0,sanrok_room.shootrange.target_dummies[i][1],"talpha400,0.0","tscale1000,0,0","pos"..ix..","..iy..",0","tconstant10","hitzone0");
				-- end
			
			-- else
			
			-- msg("\169100255100[DEBUG - CONDITION] : image matches with table - i value ["..i.."]");
			-- image_effect(0,sanrok_room.shootrange.target_dummies[i][1],"talpha400,0.0","tscale1000,0.0,0.0","pos"..ix..","..iy..",0","tconstant10","hitzone0");
				
				-- if ( sanrok_room.shootrange.target_dummies[i][7] ) then
					-- for k, list in pairs(sanrok_room.shootrange.target_dummies[i][7]) do
					-- parse("trigger "..list)
					-- end
				-- end
				
			-- end
			
		-- end
		
	-- end
	
-- end


-- function f()
-- SH_spawnobject(0,math.random(13,18),math.random(4,9),"Random",{"r","r"},3);
-- end

--=======================================================================--
--[[
	
	91th. Image as light source
	map : experimental
	
-- ]]--
-- fstp = 0
-- addhook("move","_footstep")
-- function _footstep(id,x,y,m)
-- fstp=fstp+1
	-- if (fstp==40) then
	-- parse("sv_soundpos \"xx_sample/concretew_B_0"..math.random(1,4)..".ogg\" \""..player(id,"x").."\" \""..player(id,"y").."\"")
	-- fstp=0
	-- end

-- end

-- start_state = false
-- light = image("<light>",0,0,3);
-- imagealpha(light,0.0);
-- imagecolor(light,250,170,75)

-- black = image("gfx/shadow.bmp<n>",0,0,2);
-- imageblend(black,2);
-- imagescale(black,55,55)
-- imagepos(black,player(1,"screenw")/2,player(1,"screenh")/2,0);

-- function effects(mode)
-- imagepos(light,player(1,"x"),player(1,"y"),0);

	-- if ( mode == 1 ) then
	-- imagescale(light,1,0);
	-- imagealpha(light,0.5);
	-- tween_alpha(light,200,0.0);
	-- tween_scale(light,200,0,0);
	-- parse("effect \"sparkles\" "..(player(1,"x")).." "..(player(1,"y")).." 3 5 255 220 0")
	
	-- elseif ( mode == 2 ) then
	-- imagescale(light,1,0);
	-- imagealpha(light,0.5);
	-- parse("effect \"sparkles\" "..(player(1,"x")).." "..(player(1,"y")).." 3 5 255 220 0")
	-- parse("trigger loop");
	-- start_state = true 
	-- end
	
-- end

	
	
-- addhook("always","_new")
-- function _new()
	-- if ( start_state ) then
	-- imagepos(light,player(1,"x"),player(1,"y"),0);
	-- local b = math.random(3)
		-- if ( b == 1 ) then
		-- imagecolor(light,250,170,75)
		-- imagescale(light,0.95,0.95)
		-- elseif ( b == 2 ) then
		-- imagescale(light,1.05,1.05)
		-- imagecolor(light,250,185,75)
		-- elseif ( b == 3 ) then
		-- imagescale(light,1.0,1.0)
		-- imagecolor(light,250,155,75)
		-- end
	-- end
-- end
-- parse("speedmod 1 -12")
-- timer(2900,"parse","lua effects(1)");
-- timer(4383,"parse","lua effects(1)");
-- timer(5523,"parse","lua effects(2)");
--=======================================================================--
--[[
	
	92th. Health Bar
	
	
]]--
-- pl = {}
-- for id = 1, 32 do
-- pl[id] =
-- {
	-- image = {},
	-- scale = 0,
-- }
-- end

-- function set(id)
 -- pl[id].image[1] = image("gfx/hp_overlay.png",0,0,2,id);
 -- pl[id].image[2] = image("gfx/hp_bar.png",0,0,2,id);

 
 -- imagepos(pl[id].image[1],player(id,"screenw")/2,player(id,"screenh")/2-80,0)
 -- imagepos(pl[id].image[2],player(id,"screenw")/2,player(id,"screenh")/2-80,0)
 -- imagealpha(pl[id].image[2],0.4)
 -- imagescale(pl[id].image[2],0,1)
 
 -- pl[id].scale = 0 
 -- color_effect(id)
-- end

-- function updateHUD(id, dmg)
    -- if dmg then
        -- d = dmg
    -- else
        -- d = 0
    -- end
    -- local a = (player(id, 'health') - d) / player(id, 'maxhealth')
    -- local c = a * 255
    -- local b = 255 - c
    -- if c < 0 then
        -- c = 0
    -- end
    -- if b > 255 then
        -- b = 255
    -- end
   -- return b, c
-- end

-- function color_effect(id)
-- id = tonumber(id)

	-- if ( pl[id].scale + 0.01 < 1 ) then --// if ( scale variable + 0.01 ) is less than 1
	-- pl[id].scale = pl[id].scale + 0.01 --// Increasement
	-- imagescale(pl[id].image[2],pl[id].scale,0.7) --// Scale without tween_scale
	-- timer(25,"color_effect",id) --// Loop the function 
	-- else --// if scale variable + 0.01's result is larger than 1
	-- imagescale(pl[id].image[2],1,0.7)  --// Set default size ( prevention for image scale gets larger than overlay )
	-- end
-- local color = {updateHUD(id, pl[id].scale*100)} -- // get Red , Green color
-- imagecolor(pl[id].image[2],color[2],color[1],0) -- // err.. the order is mixed, figure out yourself buddy
-- end
--=======================================================================--
--[[
	
	93th. Anti team kill barbed wire
	Yurs request
	
]]--

-- addhook("hit","_hit")
-- function _hit(id,src,wpn,hp,ap,raw,obid)
	-- if (player(id,"team") == 2 and wpn == 255 ) then --// Barbed wires no longer harms survivors
		-- if ( id ~= src ) then
		-- return 1
		-- end
   -- end
   
-- end
--=======================================================================--
--[[
	
	94th. defuse kit is always buyable
	
	
]]--

-- parse("mp_buymenu |||||56");

-- addhook("buy","b")
-- function b(id,w)
	
	-- if ( w == 56 and player(id,"money") >= 200 ) then
	-- parse("spawnitem 56 "..player(id,"tilex").." "..player(id,"tiley"));
	-- parse("setpos "..id.." "..player(id,"x").." "..(player(id,"tiley")+32));
	-- parse("setpos "..id.." "..player(id,"x").." "..(player(id,"tiley")-32));
	-- parse("setmoney "..id.." "..player(id,"money")-200);
	-- else
	-- msg2(id,"\169255000000You have insufficient funds@C");
	-- end
	
-- end
	
--=======================================================================--
--[[
	
	95th. Check timer and always tick 
	
	~ Result
	always 50tick = 1000ms
	�� = 1000*0.05 = 50;
	( Formula : timer_milisecond*0.05 = always_tick ) 
	
]]--
-- tick = 0;
-- setting = 150
-- timer_setting = 3000
-- addhook("menu","m")
-- function m(id,t,b)
	-- if ( t == "o" ) then
		-- if ( b == 1 ) then
		
		-- if ( entity(1,5,"state") ) then parse("trigger a"); end
		-- if ( entity(3,5,"state") ) then parse("trigger b"); end
		
		
		-- elseif ( b == 2 ) then
		-- tick = setting;
		-- timer(timer_setting,"parse","trigger a");
		-- end
	-- end
	
-- end

-- addhook("serveraction","sva")
-- function sva(id,b)
	-- if ( b == 1 ) then
	-- menu(id,"o,Reset,Start count")
	-- end
-- end

-- addhook("always","al")
-- function al()
-- parse("hudtxt 100 \""..tick.."\" 300 100 1");
	-- if ( tick > 0 ) then
	-- tick = tick -1;
		-- if ( tick == 0 ) then
		-- parse("trigger b")
		-- end
	-- end
-- end

--=======================================================================--
--[[
	
	96th. Chef/Dining room Rewritting
	Code messed up, let's fix it.

-- -- ]]--
-- sanrok = {}

-- dofile("maps/sanrok_jail/utils.lua")
-- print("\169230230230[\169250210210Vital\169230230230]: \169235200100\"NPC\" script has been loaded.")
-- local sfx_path = "sanrok_jail/"
-- sanrok_npc = 
-- {
	-- ["chef"] = 
	-- {
		-- -- Image will be randomized if it has table value
		-- image = {pixel = "b", "gfx/Sanrok_jail/models/Chef.png","gfx/Sanrok_jail/models/Chef_SP.png"},
		-- frame_animation = true, -- choose spritesheet or not.
		-- spawn = {8,9,90}, -- X,Y, Rotation
		-- sound = -- pain, idle, interaction, death
		-- {
			-- pain = {sfx_path.."player/hpain1.ogg",sfx_path.."player/hpain2.ogg",sfx_path.."player/hpain3.ogg"},
			-- death = "DEFAULT", -- "DEFAULT" plays player's death sound
		-- },
		-- death = 
		-- {
			-- wanted_list = true, -- List killer in wanted list?
			-- score = true, -- Increase killer's score?
			-- drop = {66,66,66,66,"NONE","NONE","NONE",67}, -- Drop item upon death ( None is nothing. )
			-- trigger = "npc_chef",
		-- },
		-- team = 2, -- Oppose team can attack this npc
		-- animated_idle = false,
		-- interact = false,
		
		-- health = 9999,
		
		-- Animator =
		-- {
			-- auto_start = true,
			
			-- [1] = function(i) -- Move to ingredients
			-- sanrok_npcs[i][8][2] = 1;
			
			-- NPC_Animator(i,{"move",5.7,12,225,1000}); -- *Location modify*
			-- timer(1000,"parse","lua sanrok_npc.chef.Animator[2]("..i..")")
			-- end,
			
			-- [2] = function(i) -- Look at ingredients
			-- NPC_Animator(i,{"rotate",200,270});
			-- timer(1000,"parse","lua sanrok_npc.chef.Animator[3]("..i..")")

			-- end,
			
			-- [3] = function(i) -- Swing at ingredients and spawn cutting board
			-- sanrok_npcs[i][8][2] = 4;
			
			-- NPC_Animator(i,"swing_left",6,"sanrok_jail/object/place_bowl.ogg");
			-- parse("trigger dine_ingredient1");
			-- timer(500,"parse","lua NPC_Animator("..i..",{'move',6,12,0,200},1);") -- *Location modify*
			-- timer(600,"parse","lua sanrok_npc.chef.Animator[4]("..i..")")

			-- end,
			
			-- [4] = function(i) -- Move toward table and rotate 
			-- NPC_Animator(i,{'move',6,11,0,600}); -- *Location modify*
			-- timer(750,"parse","lua NPC_Animator("..i..",{'move',5.7,11,270,200});") -- *Location modify*
			-- timer(1300,"parse","lua sanrok_npc.chef.Animator[5]("..i..")")
			
			-- end,
			
			-- [5] = function(i) -- Hold knife, Toggle Knife image
			-- NPC_Animator(i,'frame',2);
				
				-- if not ( entity(4,11,"state") ) then -- *Location modify*
				-- parse("trigger kitchen_knife")
				-- end
				
			-- sanrok_npcs[i][8][20] = 2; -- Knife Swing amounts [DEFAULT : 15]
			-- timer(400,"parse","lua sanrok_npc.chef.Animator[6]("..i..")")
			-- end,
			
			-- [6] = function(i) -- Swing knife action
			-- sanrok_npcs[i][8][2] = 6;
			
			-- NPC_Animator(i,"swing_right",2,"sanrok_jail/player/knife_action"..math.random(4)..".ogg");
				-- if ( sanrok_npcs[i][8][20] > 0 ) then
				-- sanrok_npcs[i][8][20] = sanrok_npcs[i][8][20]-1;
				
				-- timer(350,"parse","lua sanrok_npc.chef.Animator[6]("..i..")")
				-- else
				-- timer(1000,"parse","lua sanrok_npc.chef.Animator[7]("..i..")")
				-- NPC_Animator(i,"frame",6);
					
					-- if ( entity(4,11,"state") ) then
					-- parse("trigger kitchen_knife")
					-- end
				-- sanrok_npcs[i][8][20] = 2 -- Food mixing amount [DEFAULT : 8]
				-- parse("trigger dine_ingredient1,dine_ingredient2")
				-- parse("sv_soundpos \"sanrok_jail/object/place_bowl.ogg\" "..(5*32+16).." "..(11*32+16)) -- *Location modify*
				-- end
				
			-- end,
			
			-- [7] = function(i) -- Ingredient mixing action
			-- local swing_direction = math.random(2);
			-- swing_direction = swing_direction == 1 and "swing_right" or "swing_left";
			-- sanrok_npcs[i][8][2] = 7;
			
				-- if ( sanrok_npcs[i][8][20] > 0 ) then
				-- sanrok_npcs[i][8][20] = sanrok_npcs[i][8][20]-1;
				
				-- NPC_Animator(i,swing_direction,6,"sanrok_jail/player/ingredient_action"..math.random(3)..".ogg");
				-- timer(350,"parse","lua sanrok_npc.chef.Animator[7]("..i..")")
				-- else
				
					-- if ( triggercondition(0,12,false) ) then  -- dine_ingredient2 | Location modify
						
						-- local varient = math.random(2)
						-- sanrok_npcs[i][8][21] = varient;
						-- parse("trigger dine_userfood"..varient);
						-- local n_y = varient == 1 and 8 or 7;
						
						-- triggercondition(1,n_y,false);
					-- end
					-- timer(1000,"parse","lua sanrok_npc.chef.Animator[8]("..i..")")
					
				-- end
					
			-- end,
			
			-- [8] = function(i) -- Pick up uncooked food and rotate to north
				-- sanrok_npcs[i][8][2] = 8;
				-- parse("trigger dine_userfood"..sanrok_npcs[i][8][21])
				-- NPC_Animator(i,"frame",sanrok_npcs[i][8][21]+2);
				-- timer(800,"parse","lua sanrok_npc.chef.Animator[9]("..i..")")
			-- end,
			
			-- [9] = function(i) -- Rotate to north
				
				-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"trotate200,0");
				-- timer(230,"parse","lua sanrok_npc.chef.Animator[10]("..i..")")
				
			-- end,
			
			
			-- [10] = function(i) -- Head to gas stove, but depend on food type.
				-- sanrok_npcs[i][8][2] = 11;
				
				-- local fy,speed, nAnim = ( sanrok_npcs[i][8][21] == 1 ) and 8 or 7; -- Pot type then set to second stove
				-- speed = ( fy == 8 ) and 1500 or 1200;
				-- nAnim = ( fy == 8 ) and 1600 or 1300;
				
				-- NPC_Animator(i,{'move',6,fy,0,speed});
				-- timer(nAnim,"parse","lua sanrok_npc.chef.Animator[11]("..i..")")

			-- end,
			
			
			-- [11] = function(i)
				
				-- local fy = ( sanrok_npcs[i][8][21] == 1 ) and 8 or 7; -- Pot type then set to second stove
				-- NPC_Animator(i,{'move',5.7,fy,0,500});
				-- NPC_Animator(i,{'rotate',300,270});
				-- timer(1300,"parse","lua sanrok_npc.chef.Animator[12]("..i..")")
				
			-- end,
			
			-- [12] = function(i)
				
				-- NPC_Animator(i,"frame",1);
				-- parse("trigger dine_oven_start,dine_cook"..sanrok_npcs[i][8][21]..",");
				-- sanrok_npcs[i][8][2] = 13;
				-- --timer(1300,"parse","lua sanrok_npc.chef.Animator[13]("..i..")") This one will be excuted in map.
				
			-- end,
			
			-- [13] = function(i) -- Get food action
			
				-- if ( find_empty_distribute() ) then
				
				-- local des_y = find_empty_distribute();
			
				-- sanrok_npcs[i][8][22] = image("<spritesheet:gfx/Sanrok_jail/models/player/meal_onhand.png:64:64>",0,0,1);
				-- imageframe(sanrok_npcs[i][1],6); 
				-- image_effect(0,sanrok_npcs[i][8][22],"frame"..math.random(2,5),"pos"..(sanrok_npcs[i][6][1]*32+16)..","..(sanrok_npcs[i][6][2]*32+16)..","..imageparam(sanrok_npcs[i][1],"rot"));
				-- smap.rooms.kitchen.food_stock = smap.rooms.kitchen.food_stock -1
				-- sanrok_npcs[i][8][1] = true;
				
					-- if ( smap.rooms.kitchen.food_stock <= 0 ) then -- Make stock empty and disable images
					
						-- smap.rooms.kitchen.food_stock = 0;
						-- triggercondition(1,7,true,"dine_cook2");
						-- triggercondition(1,8,true,"dine_cook1");
						-- sanrok_npcs[i][8][1] = false;
						
					-- end
					
				-- timer(500,"parse","lua sanrok_npc.chef.Animator[14]("..i..","..des_y..")")
				
				-- end
				
			-- end,
			
			-- [14] = function(i, des_y) -- Rotate to distribute table
			
			-- local rot = math.deg(-math.atan2( (sanrok_npcs[i][6][1]*32+16) - (8*32+16), (sanrok_npcs[i][6][2]*32+16) - (des_y*32+16)))
			-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2],sanrok_npcs[i][8][22]},"trotate300,"..rot);
			-- timer(350,"parse","lua sanrok_npc.chef.Animator[15]("..i..","..des_y..")")
			
			-- end,
			
			-- [15] = function(i, des_y) -- Forward to distribute table
			-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2],sanrok_npcs[i][8][22]},"tmove1000,"..(8*32+16)..","..(des_y*32+16));
			-- timer(1100,"parse","lua image_effect(0,{sanrok_npcs["..i.."][1],sanrok_npcs["..i.."][2],sanrok_npcs["..i.."][8][22]},'trotate300,90')")
			-- timer(1400,"parse","lua sanrok_npc.chef.Animator[16]("..i..","..des_y..")")
				
			-- end,
			
			-- [16] = function(i, des_y) -- Put down food
				
				-- meal_spawn(1,1,9,des_y,imageparam(sanrok_npcs[i][8][22],"frame")+1)
				-- freeimage(sanrok_npcs[i][8][22]);
				-- NPC_Animator(i,"frame",1);
				
			-- timer(500,"parse","lua sanrok_npc.chef.Animator[17]("..i..","..des_y..")")
				
			-- end,
			
			-- [17] = function(i,des_y) -- Rotate to gas stove
			
				-- local rot = math.deg(-math.atan2( (8*32+16) - (sanrok_npcs[i][6][1]*32+16), (des_y*32+16) - (sanrok_npcs[i][6][2]*32+16) ))	
				-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"trotate300,"..rot);
				-- timer(500,"parse","lua sanrok_npc.chef.Animator[18]("..i..")")
			
			-- end,
			
			-- [18] = function(i) -- Multiple action 
				
				-- if ( find_empty_distribute() ) then	-- Check empty table
					
					-- if ( smap.rooms.kitchen.food_stock > 0 ) then -- If stock is available
					-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"tmove1000,"..(sanrok_npcs[i][6][1]*32+16)..","..(sanrok_npcs[i][6][2]*32+16));
					-- timer(1000,"parse","lua sanrok_npc.chef.Animator[13]("..i..")") -- reutrn to get food action
					-- sanrok_npcs[i][8][1] = true;
					
					-- else -- If stock is empty
					-- timer(1000,"parse","lua sanrok_npc.chef.Animator[1]("..i..")") -- Go back to first action
					-- sanrok_npcs[i][8][1] = false;
					-- end
					
				-- else -- set to idle
				
				-- local rot = pos_to_angle(8*32+16,imageparam(sanrok_npcs[i][1],"x"),9*32+16,imageparam(sanrok_npcs[i][1],"y"))
				-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"tmove900,"..(8*32+16)..","..(9*32+16)..","..rot);
				-- timer(1200,"parse","lua image_effect(0,{sanrok_npcs["..i.."][1],sanrok_npcs["..i.."][2]},'trotate300,90')"); 
				-- sanrok_npcs[i][8][1] = false;
				
				-- end
			-- end,
			
			-- [19] = function(i)
				
			-- end,
			
			-- [20] = function(i)
				
			-- end,
			
			-- [21] = function(i)
				
			-- end,
			
			-- [22] = function(i)
				
			-- end,
			-- [23] = function(i)
				
			-- end,
			-- ["emergency"]= function(i,action)
				
				-- if ( action == 0 and not(sanrok_npcs[i][8][3]) ) then
					-- local list =
					-- {
						-- "lua NPC_Animator("..i..",{'move',6,12,0,200},1);",
						-- "lua NPC_Animator("..i..",{'move',5.7,11,270,200});",
						-- "lua NPC_Animator("..i..",{'rotate',300,90},1);",
						-- "lua NPC_Animator("..i..",{'rotate',300,270},2);",
						-- "lua NPC_Animator("..i..",{'move',5.7,11,"..sanrok_npcs[i][6][3]..",1000});",
						-- "lua NPC_Animator("..i..",{'rotate',300,270},2);",
						-- "lua NPC_Animator("..i..",{'rotate',200,0});",
						-- "image_effect(0,{sanrok_npcs["..i.."][1],sanrok_npcs["..i.."][2],sanrok_npcs["..i.."][8][22]},'trotate300,90')",
					-- };
					
					-- for n = 1,20 do 
						
						-- if ( n >= 14 and n <= 17 ) then
						-- freetimer("parse","lua sanrok_npc.chef.Animator["..n.."]("..i..","..des_y..")"); --des_y �ѱ�°￿������
						-- else
						-- freetimer("parse","lua sanrok_npc.chef.Animator["..n.."]("..i..")"); 
						-- end
						
					-- end
					
					-- for j = 1, #list do
						-- freetimer("parse",list[j]);
					-- end
					
					
					-- if ( sanrok_npcs[i][8][2] == 4  ) then
						
						-- if ( entity(4,11,"state") ) then   -- *Location modify*
						-- parse("trigger kitchen_knife")
						-- end
						
					-- elseif ( sanrok_npcs[i][8][2] == 8 ) then
					-- parse("trigger dine_userfood"..sanrok_npcs[i][8][21])
					-- elseif ( sanrok_npcs[i][8][2] == 10 ) then
					-- sanrok_npcs[i][6][3] = 270;
					-- -- sanrok_npcs[i][6][4] = imageparam(i,"frame")+1;
					
					-- end
						
				-- sanrok_npcs[i][6][4] = imageparam(sanrok_npcs[i][1],"frame")+1;
				-- sanrok_npcs[i][8][3] = true;
				
				-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"frame5","tmove1000,"..(8*32+16)..","..(11*32+16),"trotate300,"..pos_to_angle(8*32+16,sanrok_npcs[i][6][1]*32+16,11*32+16,sanrok_npcs[i][6][2]*32+16))
				-- -- *Location modify*

				-- end

			-- end,
			
			-- ["calm"] = function(i)
			
			-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"frame1","tmove1000,"..(8*32+16)..","..(9*32+16),"trotate300,0") -- *Location modify*
			-- timer(1200,"parse","lua NPC_Animator("..i..",{'rotate',300,90},1);"); 
			-- -- Center Chef and let him look at entrance.
			
				-- if ( sanrok_npcs[i][8][2] ~= 1 ) then
				-- local rot = pos_to_angle(sanrok_npcs[i][6][1]*32+16,8*32+16,sanrok_npcs[i][6][2]*32+16,9*32+16); -- *Location modify*
				-- timer(1500,"parse","lua NPC_Animator("..i..",{'move',"..sanrok_npcs[i][6][1]..","..sanrok_npcs[i][6][2]..","..rot..",1000});") -- *Location modify*
				-- timer(2800,"parse","lua NPC_Animator("..i..",{'rotate',300,"..sanrok_npcs[i][6][3].."},1);");
				-- timer(3100,"parse","lua imageframe("..sanrok_npcs[i][1]..","..sanrok_npcs[i][6][4]..");");
				
				
				-- -- Return him back to previous location.
				-- end
				
			-- timer(5000,"parse","lua sanrok_npc.chef.Animator["..sanrok_npcs[i][8][2].."]("..i..")")
			-- sanrok_npcs[i][8][3] = false;
			-- end,
			
		-- },
	-- },
	
	-- ["trader"]=
	-- {
		-- image = {pixel = "m", "gfx/player/ct1.bmp","gfx/player/ct2.bmp", "gfx/player/ct4.bmp", "gfx/player/ct3.bmp", "gfx/player/vip.bmp"},
		-- frame_animation = true,
		-- spawn = {
		-- -- {19,3,90},
		-- -- {9,5,180},
		-- {10,17,0},
		-- -- {18,17,175}
		-- },
		-- sound =
		-- {
			-- pain = {sfx_path.."player/hpain1.ogg",sfx_path.."player/hpain2.ogg",sfx_path.."player/hpain3.ogg"},
			-- death = "DEFAULT", -- "DEFAULT" plays player's death sound
			-- idle = {sfx_path.."vo/npc/trader_idle1.ogg",sfx_path.."vo/npc/trader_idle2.ogg",sfx_path.."vo/npc/trader_idle3.ogg"},
			-- interact = {sfx_path.."vo/npc/trader_interact1.ogg",sfx_path.."vo/npc/trader_interact2.ogg",sfx_path.."vo/npc/trader_interact3.ogg"},
			-- interact_leave = {sfx_path.."vo/npc/trader_interact_leave1.ogg",sfx_path.."vo/npc/trader_interact_leave2.ogg",sfx_path.."vo/npc/trader_interact_leave3.ogg"},
			
		-- },
		-- death = 
		-- {
			
			-- wanted_list = false,
			-- score = true,
			-- drop = {66,66,67,"NONE","CUSTOM_1","NONE","NONE","NONE"},
			
		-- },
		-- team = 1,
		-- animated_idle = true,
		-- interact = true,
		-- disabled = true, -- Disable Spawn
		
		-- health = 100,
		
		-- Animator = 
		-- {
			
			-- [1] = function()
			-- end,
			
			-- ["emergency"]= function(i)
			-- end,
			
		-- }
	-- },

	-- ["configuration"] =
	-- {
		-- idle_timer = 0,
	-- }
-- };

-- sanrok_npcs = {};

-- function init_NPC()
	
	-- if ( #sanrok_npcs > 0 ) then
		
		-- for i = 1, #sanrok_npcs do
		-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"freeimage");
		-- end
		
	-- sanrok_npcs = {};
	-- end
	
	-- for Tag, v in pairs(sanrok_npc) do
		
		-- if ( Tag ~= "configuration" ) then
		
		-- local img = type(v.image)=="table" and v.image[math.random(1,#v.image)] or v.image;
		-- img = (v.frame_animation) and "<spritesheet:"..img..":32:32:"..v.image.pixel..">" or img;
		-- local coords, tmp_n = type(v.spawn[1])=="table" and math.random(1,#v.spawn) or {v.spawn[1],v.spawn[2],v.spawn[3]};
		-- tmp_n = type(coords)=="number" and coords or nil;	
		
		-- coords = tmp_n and {v.spawn[tmp_n][1],v.spawn[tmp_n][2],v.spawn[tmp_n][3]} or coords;
		
			-- if not ( v.disabled ) then
			-- table.insert(sanrok_npcs,{
				-- image(img,0,0,1),
				-- image("gfx/shadow.bmp<a>",0,0,0),
				-- Tag,
				-- v.health,
				-- v.interact,
				-- coords,
				-- 0,
				-- {},
				
			-- });
				-- if ( v.Animator.auto_start ) then
				-- local id = #sanrok_npcs;
				-- sanrok_npcs[id][8][2] = 1;
				-- timer(1000,"parse","lua sanrok_npc."..Tag..".Animator[1]("..id..")") -- �ִϸ����� �ڵ����۱�￿.�����ϰ��־�
				-- end
				
			-- local n = #sanrok_npcs;
			-- image_effect(0,sanrok_npcs[n][1],"hitzone3,-16,-16,32,32","shadow1","pos"..(sanrok_npcs[n][6][1]*32+16)..","..(sanrok_npcs[n][6][2]*32+16)..","..sanrok_npcs[n][6][3]);
			-- image_effect(0,sanrok_npcs[n][2],"color0,0,0","scale1.25,1.25","alpha0.5","pos"..(sanrok_npcs[n][6][1]*32+16)..","..(sanrok_npcs[n][6][2]*32+16)..","..sanrok_npcs[n][6][3]);
			-- end
		-- --[[
			-- 1. image
			-- 2. shadow image
			-- 3. npc name
			-- 4. npc health
			-- 5. interactable
			-- 6. coordinates
			-- 7. NPC state ( 0 is idle ) 
			-- 8. Temp table variable ( Hold special values )
			
			-- > about element 8
			-- 1) Animating state 
			-- 2) Static Animating state 
			-- 3) Emergency state ( boolean ) 
			
			-- 10) Swing effect
			-- 11) Bullet flying effecet
			-- 12) Bullet fire flare
			
			-- 20 ~ 29 )
				-- { Trader }
				-- 20. player id
				
				-- { Chef }
				-- 20. Knife Swings
				-- 21. Uncooked good varient
				-- 22. Tray varient
				-- 23. Target Y coordinate
		-- ]]
		-- end
		
	-- end
	
-- end

-- function find_NPC(x,y,typename)
	-- if ( type(x)=="table" ) then
		
		-- for ax = x[1], x[2] do
			
			-- for ay = y[1],y[2] do
			
				-- if ( objectat(ax,ay,40)~=0 ) then
				-- local nimage = sanrok_npc[typename].image;
					
					-- if ( type(nimage) == "table" ) then
					-- local nid
						-- for k, img in pairs(nimage) do
							
							-- if ( imageparam(objectat(ax,ay,40),"path"):find(img) ) then
							
							-- nid = objectat(ax,ay,40);
							-- break;
							-- end
							
						-- end
						
						-- if ( nid ) then
						-- -- sanrok_npcs���� ���¿������ �����°�
							-- for i = 1, #sanrok_npcs do
								-- if ( sanrok_npcs[i][1] == nid ) then
								
								-- return i;
								-- end
								
							-- end
							
						-- end
						
					-- end
					
				-- end
			
			-- end
			
		-- end
		
	-- end
	-- return false;
-- end
						
				
-- function NPC_StopSounds(npc)
-- local soundfiles = sanrok_npc[npc].sound;
	
	-- for _,tbl in pairs(soundfiles) do
        
		-- if ( type(tbl) == "table" ) then
            
			-- for _,sound in pairs(tbl) do
				-- parse("sv_stopsound \""..string.lower(tostring(sound)).."\" 0")
			-- end
			
        -- end
		
    -- end
	
-- end

-- function NPC_Animator(i,animation,frame, sound)
	
	-- if ( sanrok_npcs[i][4] > 0 ) then
	-- frame = (sanrok_npc[sanrok_npcs[i][3]].frame_animation) and ( (frame) and frame or imageparam(sanrok_npcs[i][1],"frame")+1 ) or nil;
	
		-- if ( frame ) then
		-- imageframe(sanrok_npcs[i][1],frame)
		-- sanrok_npcs[i][6][4] = frame;
		-- end
		
		-- if ( type(animation) == "string" ) then
			-- if ( animation:sub(1,6) == "swing_" ) then
			-- local x, y, rot, swing = imageparam(sanrok_npcs[i][1],"x"), imageparam(sanrok_npcs[i][1],"y"), imageparam(sanrok_npcs[i][1],"rot")
			-- sanrok_npcs[i][8][10] = (sanrok_npcs[i][8][10]~=nil and imageparam(sanrok_npcs[i][8][10],"path")=="gfx/knifeslash.bmp<a>" ) and sanrok_npcs[i][8][10] or image("gfx/knifeslash.bmp<a>",x,y,1);
			
			-- swing = (animation:sub(7)=="right") and 45 or -45
			
			-- imagepos(sanrok_npcs[i][1],x,y,rot-swing);
			-- imagepos(sanrok_npcs[i][8][10],x,y,rot);
			
			-- imagealpha(sanrok_npcs[i][8][10],1);
			
			-- tween_rotate(sanrok_npcs[i][1],200,rot);
			-- tween_alpha(sanrok_npcs[i][8][10],300,0.0)
			
			-- elseif ( animation == "frame" ) then
			-- image_effect(0,sanrok_npcs[i][1],"frame"..frame)
			-- end
		
		-- elseif ( type(animation) == "table" ) then
			
			-- if ( animation[1] == "move" ) then -- {"move",to_x, to_y, rot, speed}
			-- sanrok_npcs[i][8][1] = true;
			-- animation[4] = animation[4] or sanrok_npcs[i][6];
			-- sanrok_npcs[i][6] = {animation[2],animation[3],animation[4]};
			
			-- tween_rotate(sanrok_npcs[i][1],400,animation[4]);
			-- image_effect(0,{sanrok_npcs[i][2],sanrok_npcs[i][1]},"tmove"..animation[5]..","..(animation[2]*32+16)..","..(animation[3]*32+16));
			-- timer(animation[5],"parse","lua sanrok_npcs["..i.."][8][1]=false");
			
			-- elseif ( animation[1] == "shoot" ) then -- {"shoot",rot,damage}
			-- --[[
				-- �߰��Ұ�
				-- ������Ʈ ����￿( ����, ���ǽ� ) �߰�
				-- mp_kevlar �� �̿��� ������￿
				-- mp_shotweakening�� �̿��� ����￿����
				-- ����￿������ ��Ű��
				-- �Ÿ��߰� �ϱ�.. 352 �����پ� ����
				
				-- + ���� ��￿�߰�
			-- ]]
			-- local x, y = sanrok_npcs[i][6][1]*32+16,sanrok_npcs[i][6][2]*32+16
			-- local rec_x, rec_y = (sanrok_npcs[i][6][1]*32+16)+math.floor(3*math.cos(Angle(sanrok_npcs[i][6][3]))*-1), (sanrok_npcs[i][6][2]*32+16)+math.floor(3*math.sin(Angle(sanrok_npcs[i][6][3]))*-1)
			-- sanrok_npcs[i][6][3] = animation[2];
			-- imagepos(sanrok_npcs[i][1],rec_x,rec_y,sanrok_npcs[i][6][3]);
			-- tween_move(sanrok_npcs[i][1],100,x,y);
			
			-- sanrok_npcs[i][8][11] = (sanrok_npcs[i][8][11]~=nil and imageparam(sanrok_npcs[i][8][11],"path")=="gfx/sprites/block.bmp" ) and sanrok_npcs[i][8][11] or image("gfx/sprites/block.bmp",x,y,1);
			-- sanrok_npcs[i][8][12] = (sanrok_npcs[i][8][12]~=nil and imageparam(sanrok_npcs[i][8][12],"path")=="gfx/sprites/flare3.bmp" ) and sanrok_npcs[i][8][12] or image("gfx/sprites/flare3.bmp",x,y,1);
			
			-- image_effect(0,sanrok_npcs[i][8][11],"scale0.01,1","color255,230,0","alpha0.6","pos"..rec_x..","..rec_y..","..sanrok_npcs[i][6][3]);
			-- image_effect(0,sanrok_npcs[i][8][12],"scale1.5,1.5","blend1","color255,230,0","alpha0.8","talpha100,0.0","pos"..(sanrok_npcs[i][6][1]*32+16)+math.floor(3*math.cos(Angle(sanrok_npcs[i][6][3]))*6)..","..(sanrok_npcs[i][6][2]*32+16)+math.floor(3*math.sin(Angle(sanrok_npcs[i][6][3]))*6)..","..math.random(0,359));
			
			
			-- tween_alpha(sanrok_npcs[i][8][11],200,0.0)
			-- tween_move(sanrok_npcs[i][8][11],200,(sanrok_npcs[i][6][1]*32+16)+math.floor(3*math.cos(Angle(sanrok_npcs[i][6][3]))*128),(sanrok_npcs[i][6][2]*32+16)+math.floor(3*math.sin(Angle(sanrok_npcs[i][6][3]))*128));
			-- local pliving = player(0,"tableliving"); -- �ߺ� ������￿���ϱ� ���� �ӽ� ���� pliving
				-- for j = 2,352,1 do -- �Ÿ��� 11Ÿ��.
				-- local wx, wy = x+math.floor(3*math.cos(Angle(sanrok_npcs[i][6][3]))*j),y+math.floor(3*math.sin(Angle(sanrok_npcs[i][6][3]))*j)
						
					-- if ( animation[3] ~= 0 or animation[3] ~= nil ) then --// ����￿���� �����ϴ°�?
						
						-- for k,aid in pairs(pliving) do 
							
							-- if ( pliving[k] ~= nil and player(aid,"tilex") == math.floor(wx/32) and player(aid,"tiley") == math.floor(wy/32) ) then -- �÷��̾� ��ġ�� ���� ��ǥ ����
							-- parse("sethealth "..aid.." "..player(aid,"health")-animation[3]); -- ü�� ���� ( ���߿� �����ϱ� )
							-- parse("sv_soundpos \"player/hit"..math.random(1,3)..".wav\" "..wx.." "..wy) -- �÷��̾� ����￿����
							-- pliving[k] = nil; -- �ߺ�������￿���ϱ� ���� Ű���� ����.
							-- end
						
						-- end
						
						
					-- end
					
					-- if ( tile(math.floor(wx/32),math.floor(wy/32),"property") == 1 or tile(wx,wy,"property") == 3 or entity(math.floor(wx/32),math.floor(wy/32),"typename") == "Env_Breakable" ) then
						
						-- if ( entity(math.floor(wx/32),math.floor(wy/32),"typename") == "Env_Breakable" and ( animation[3] ~= 0 or animation[3] ~= nil ) )  then 
						-- local hit_type = 
						-- {
							-- "materials/wood",
							-- "materials/stone",
							-- "materials/metal",
							-- "materials/flesh",
							-- "materials/glass",
						-- }
						-- parse("damagetile "..math.floor(wx/32).." "..math.floor(wy/32).." "..animation[3]);
							-- if ( entity(math.floor(wx/32),math.floor(wy/32),"exists") and entity(math.floor(wx/32),math.floor(wy/32),"int2") ~= 5 ) then
							-- parse("sv_soundpos \""..hit_type[entity(math.floor(wx/32),math.floor(wy/32),"int2")+1]..""..math.random(1,3)..".wav\" "..wx.." "..wy)
							-- end
							
						-- end
						
						-- if ( math.random(2) == 1 ) then
						-- parse('effect "sparkles" '.. wx ..' '.. wy ..' 4 1 255 255 0')
						-- parse("sv_soundpos \"weapons/ric"..math.random(1,5)..".ogg\" "..wx.." "..wy)
						-- end
						
					-- imagealpha(sanrok_npcs[i][8][11],0.0)
					-- break;
					-- end
				-- end	
			-- parse('effect "smoke" '.. (sanrok_npcs[i][6][1]*32+16)+math.floor(3*math.cos(Angle(sanrok_npcs[i][6][3]))*6) ..' '.. (sanrok_npcs[i][6][2]*32+16)+math.floor(3*math.sin(Angle(sanrok_npcs[i][6][3]))*6) ..' 1 2')
			
			-- elseif ( animation[1] == "rotate" ) then -- {"rotate",rot_speed,rot}
			-- sanrok_npcs[i][6][3] = animation[3];
			-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"trotate"..animation[2]..","..animation[3].."")
			-- end
		
		-- end
		
		-- if ( sound ) then
		-- local snd = type(sound) == "table" and sound[math.random(1,#sound)] or sound;
		-- parse("sv_soundpos \""..sound.."\" "..(sanrok_npcs[i][6][1]*32+16).." "..(sanrok_npcs[i][6][2]*32+16))
		-- end
	
	-- end
	
-- end
-- ---- Tray actions
-- slient = {
	-- {

		-- rooms = 
		-- { 
			-- kitchen = 
			-- {
			
				-- 0, -- Tray image
				-- false, -- Tray holding boolean
				-- 0, -- Tray frame
			-- }
			
		-- }
		
	-- }

-- }
-- smap = 
-- {
	-- rooms =
	-- {
		-- kitchen =
		-- {
			-- tables = { {}, {} }, -- 1. Distribute / 2. Dine_table
			-- thrown = {},
			-- food_stock = 0,
			
			-- barrier = 5000, -- Health of barricade
		-- }
	-- }


-- }
-- function dine_clear_area(x1, x2, y1, y2, mode)
-- -- mode: [1] - Distribute [2] - Table
-- mode = mode or 1;
	-- for x = x1, x2 do
		
		-- for y = y1, y2 do
		
		-- local obid = objectat(x,y,40);
			
			-- if ( mode == 1 ) then
			
				-- if ( obid ~= 0 and ( imageparam(obid,"rot") ~= 270 or not(imageparam(obid,"path"):find("meal_frames")) ) ) then
				-- freeimage(obid);
				-- end
			
			-- else			
			
				-- if ( obid ~= 0 and ( not(imageparam(obid,"path"):find("meal_frames")) or imageparam(obid,"rot")>360)  ) then
				-- freeimage(obid);
				-- end	
				
			-- end
			
		-- end
	
	-- end
		
-- end

-- function find_empty_distribute(all_detection)
-- dine_clear_area(9,9,7,11)
-- local obid;
	
	-- for y = 7, 11 do
	-- obid = objectat(9,y,40);
	
		-- if not( all_detection ) then
		
			-- if ( obid == 0 or ( obid ~= 0 and ( imageparam(obid,"rot") ~= 270 or not(imageparam(obid,"path"):find("meal_frames")) ) ) ) then
			-- return y;
			-- end
		
		-- else
		
			-- if ( obid ~= 0 and imageparam(obid,"rot") == 270 and imageparam(obid,"path"):find("meal_frames") )  then
			-- return true;
			-- end
		
		-- end
		
	-- end

-- end

-- function meal_get_id(x,y,return_type)
-- -- return_type: [1] - image id / [2] - table key value
-- dine_clear_area(x,x,y,y,2);
-- local obid = objectat(x,y,40);

-- return_type = return_type or 1;

	-- if ( imageparam(obid,"path"):find("meal_frame") ) then
		
		-- if ( return_type == 1 ) then
		-- return obid;
		
		-- elseif ( return_type == 2 ) then
		
			-- for i = 1, #smap.rooms.kitchen.tables[2] do
		
				-- if ( smap.rooms.kitchen.tables[2][i][1] == obid ) then
			
				-- return i;
				-- end
				
			-- end
			
		-- end
	
	-- end
		
-- end

-- function meal_spawn(mode, id, x, y, tray_frame)
-- --[[
		-- Parameter details
		-- mode: [1] - Player pickup action | [2] - Spawn at X,Y Coordinates
		-- id: Player id | table type ( 1 = distribute / 2 = Dining Table ) 
		-- x, y: Does nothing | Coordinate ( in tile ) 
		-- tray_frame: Frame

-- ]]
	-- if ( mode == 0 ) then 
		
		-- if not( slient[id].rooms.kitchen[2] ) then
			
			-- slient[id].rooms.kitchen[2], slient[id].rooms.kitchen[3] = true, tray_frame;
			-- slient[id].rooms.kitchen[1] = image("<spritesheet:gfx/Sanrok_jail/models/player/meal_onhand.png:64:64>",3,0,200+id)
			-- imageframe(slient[id].rooms.kitchen[1],tray_frame)
			-- parse("setweapon "..id.." 50")
			
		-- end
		
	-- elseif ( mode == 1 ) then
		
		-- local k, frame, EP = #smap.rooms.kitchen.tables[id]+1, tray_frame or math.random(2,5) 
		-- EP = ( id == 2 and frame ~= 1 ) and 2 or nil;
		-- table.insert(smap.rooms.kitchen.tables[id],k,{image("<spritesheet:gfx/Sanrok_jail/object/meal_frames.png:32:32>",0,0,1), x, y, EP})
		-- -- { image , x, y, EP }
		-- image_effect(0,smap.rooms.kitchen.tables[id][k][1],"pos"..(x*32+16)..","..(y*32+16)..","..convert_bangle(x,y),"frame"..frame)
		
		-- if ( id == 2 and frame ~= 1) then
			-- image_effect(0,smap.rooms.kitchen.tables[id][k][1],"hitzone103,-16,-18,32,34")
		-- end
		
	-- end
	
-- end

-- function meal_check(t_type,x,y)
-- -- t_type ( 1. Distribute / 2. Dine Tables )
-- dine_clear_area(x,x,y,y,t_type);
	
-- local obid = objectat(x,y,40);

	-- if ( obid ~= 0 ) then
	-- return true;
	-- end

-- return false;	
-- end

-- function meal_remove(t_type, x,y,id)
-- -- t_type ( 1. Distribute / 2. Dine Tables )

	-- if not id then 
	-- t_type = tonumber(t_type);		
		
		-- if ( #smap.rooms.kitchen.tables[t_type] ~= 0 ) then
		
			-- for k, trays in pairs(smap.rooms.kitchen.tables[t_type]) do
				-- if ( trays[2] == x and trays[3] == y ) then
				-- freeimage(trays[1]);
				-- table.remove(smap.rooms.kitchen.tables[t_type], k);
				-- break;
				-- end
				
			-- end
			
		-- end
		
	-- else
	
	-- slient[id].rooms.kitchen[2] = false;
	-- slient[id].rooms.kitchen[3]=0;
	-- freeimage(slient[id].rooms.kitchen[1]);
	
	-- end
	
-- end

-- addhook("usebutton","kitchen_use_button")
-- addhook("attack2","meal_throw")

-- function meal_throw(id, x, y) -- attack2

	-- if ( slient[id].rooms.kitchen[2] ) then 
	-- freeimage(slient[id].rooms.kitchen[1])
	-- slient[id].rooms.kitchen[2] = false;
		
		-- if ( #smap.rooms.kitchen.thrown <= 50 ) then
		-- smap.rooms.kitchen.thrown[#smap.rooms.kitchen.thrown+1] = image("<spritesheet:gfx/Sanrok_jail/object/meal_frames.png:32:32>",0,0,1) 
		
		-- local hx, hy = player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*6), player(id,"y")+math.floor(3*math.sin(Angle(player(id,"rot")))*6)
		-- local tx, ty, con = player(id,"x")+math.floor(3*math.cos(Angle(player(id,"rot")))*12), player(id,"y")+math.floor(3*math.sin(Angle(player(id,"rot")))*12)
			
			-- if ( math.floor(tx/32) >= 8 and math.floor(tx/32) <= 9 and math.floor(ty/32) >= 7 and math.floor(ty/32) <= 12 ) then
			-- freeimage(smap.rooms.kitchen.thrown[#smap.rooms.kitchen.thrown]);
			-- else
			
			-- image_effect(id,smap.rooms.kitchen.thrown[#smap.rooms.kitchen.thrown],"tconstant5","frame"..slient[id].rooms.kitchen[3],"pos"..hx..","..hy..","..player(id,"rot"),"tmove800,"..(tx)..","..(ty),"talpha1000,0.0")
			-- end
			
		-- end
		
	-- end
	
-- end

-- function kitchen_use_button(id, x, y) -- use button
	
	-- if ( entity(x,y,"name") == "distribute" ) then
		
		-- if not ( entity(1,9,"state") ) then -- Check NPC is not dead | This condition pass when he is alive.
			
			-- if ( meal_check(1,x,y) and slient[id].rooms.kitchen[2] == false ) then -- Pick up only
			-- local m_id, frame= objectat(x,y,40);
			-- frame = imageparam(m_id,"frame")+1;
			-- meal_spawn(0, id, x, y, frame)
			-- meal_remove(1,x,y)
			-- end
			
			-- local npc = find_NPC({5,8},{7,12},"chef")
			-- if ( sanrok_npcs[npc][8][1] == false and smap.rooms.kitchen.food_stock > 0 and sanrok_npcs[npc][4] > 0 and not(find_empty_distribute(true)) ) then
			-- local des_y = entity(1,7,"state") and 7 or 8;
			-- local rot = math.deg(-math.atan2( (6*32+16) - (sanrok_npcs[npc][6][1]*32+16), (des_y*32+16) - (sanrok_npcs[npc][6][2]*32+16) ))	
			-- image_effect(0,{sanrok_npcs[npc][1],sanrok_npcs[npc][2]},"trotate300,"..rot);
			
			-- timer(500,"parse","lua sanrok_npc.chef.Animator[18]("..npc..");")
			-- end
			
		-- else -- When dead, player can place tray on distribute table.
			-- if ( meal_check(1,x,y) and slient[id].rooms.kitchen[2] == false ) then -- 
				
				-- local m_id, frame= objectat(x,y,40);
				-- frame = imageparam(m_id,"frame")+1;
				-- meal_spawn(0, id, x, y, frame)
				-- meal_remove(1,x,y)
			
			-- elseif ( meal_check(1,x,y) == false and slient[id].rooms.kitchen[2] and (imageparam(slient[id].rooms.kitchen[1],"frame")+1 ~= 1) ) then
				
				-- local frame = imageparam(slient[id].rooms.kitchen[1],"frame")+1
				-- meal_spawn(1, 1, x, y, frame)
				-- meal_remove(1,0,0,id)
				
		 	-- end
		-- end
		
	-- elseif ( entity(x,y,"name") == "table" ) then

		-- if ( meal_check(2,x,y)==false and slient[id].rooms.kitchen[2] == true ) then -- placing tray 
			
			-- local frame = imageparam(slient[id].rooms.kitchen[1],"frame")+1
			-- meal_spawn(1, 2, x, y, frame)
			-- meal_remove(2,0,0,id)
		
		-- elseif ( meal_check(2,x,y) and slient[id].rooms.kitchen[2] == false ) then -- Removing tray from table, only empty trays.
		-- local m_id = meal_get_id(x,y,2); 
		
			-- if ( ( smap.rooms.kitchen.tables[2][m_id][4] ~= nil and smap.rooms.kitchen.tables[2][m_id][4] <= 0) or imageparam(smap.rooms.kitchen.tables[2][m_id][1],"frame")+1 == 1 ) then
			-- meal_remove(2,x,y);
			-- meal_spawn(0, id, 0, 0, 1);
			-- end
		-- end
	
	-- elseif ( entity(x,y,"name") == "meal_remove") then
	 
	 -- slient[id].rooms.kitchen[2] = false;
	 -- freeimage(slient[id].rooms.kitchen[1])
	 
	-- end
	
-- end


-- ----
-- addhook("second","_second")
-- function _second()
-- sanrok_npc.configuration.idle_timer = sanrok_npc.configuration.idle_timer +1;

	-- for i = 1, #sanrok_npcs do

	-- local Tag = sanrok_npcs[i][3];

		-- if ( sanrok_npcs[i][4] > 0 ) then

			-- if ( sanrok_npc.configuration.idle_timer%3 == 0 ) then
				
				-- if ( sanrok_npc[Tag].animated_idle and sanrok_npcs[i][7] == 0 and not(sanrok_npcs[i][8][1]) ) then	
					-- tween_rotate(sanrok_npcs[i][1],math.random(200,600),sanrok_npcs[i][6][3]+math.random(-45,45));
				-- end
				
			-- end	
			
			-- if ( sanrok_npc.configuration.idle_timer%15 == 0 ) then
				
				-- if ( sanrok_npc[Tag].sound.idle and sanrok_npcs[i][7] == 0 and not(sanrok_npcs[i][8][1]) ) then
					-- parse("sv_soundpos \""..sanrok_npc[Tag].sound.idle[math.random(1,#sanrok_npc[Tag].sound.idle)].."\" "..(sanrok_npcs[i][6][1]*32+16).." "..(sanrok_npcs[i][6][2]*32+16))
				-- end
				
			-- end
			
		-- end
		
	-- sanrok_npc.configuration.idle_timer = sanrok_npc.configuration.idle_timer >= 100 and 0 or sanrok_npc.configuration.idle_timer;
	-- end
	
-- end

-- addhook("hitzone","_hitzone")
-- function _hitzone(img,id,dynid,wid,ix,iy,dmg)
	-- -- NPC Parts
	-- for i = 1, #sanrok_npcs do

		-- if ( img == sanrok_npcs[i][1] ) then
		-- local Tag, team = sanrok_npcs[i][3];
		-- team = sanrok_npc[Tag].team;
			
			-- if ( player(id,"team") ~= team and sanrok_npcs[i][4] ~= 9999 ) then 
			-- sanrok_npcs[i][4] = sanrok_npcs[i][4] - dmg;
				
				-- if ( sanrok_npc[Tag].sound.pain and sanrok_npcs[i][4] > 0 ) then
				-- parse("sv_soundpos \""..sanrok_npc[Tag].sound.pain[math.random(1,#sanrok_npc[Tag].sound.pain)].."\" "..ix.." "..iy)
				-- end
				
				-- if ( sanrok_npc[Tag].Animator["emergency"] ) then
				-- sanrok_npc[Tag].Animator["emergency"](i,0)
				-- end
				
				-- if ( sanrok_npc[Tag].sound.death and sanrok_npcs[i][4] < 0 ) then
				-- local death_snd = ( sanrok_npc[Tag].sound.death == "DEFAULT" ) and "player/die"..math.random(1,3)..".wav" or sanrok_npc[Tag].sound.death[math.random(1,#sanrok_npc[Tag].sound.death)];
				-- parse("sv_soundpos \""..death_snd.."\" "..ix.." "..iy);
				-- image_effect(0,{sanrok_npcs[i][1],sanrok_npcs[i][2]},"freeimage","hitzone0,0,0,0,0");
					
					-- if ( sanrok_npc[Tag].death.trigger ) then
					-- parse("trigger "..sanrok_npc[Tag].death.trigger);
					-- end
					
					-- if ( sanrok_npc[Tag].death.score ) then
					-- parse("setscore "..id.." "..(player(id,"score")+1)); 
					-- end
					
					-- if ( sanrok_npc[Tag].death.wanted_list and player(id,"team") == 1 ) then
					-- fws_add_wantedlist(id);
					-- end

					-- if ( sanrok_npc[Tag].death.drop ) then
					-- local drop, dx, dy = sanrok_npc[Tag].death.drop[math.random(1,#sanrok_npc[Tag].death.drop)];
					-- dx, dy = math.floor(ix/32), math.floor(iy/32);	
						
						-- if not( tile(dx,dy,"walkable") ) then
						-- local trial = 9;
						
							-- while ( tile(dx,dy,"walkable")== false ) do
								
								-- trial = trial -1;
								
								-- dx = math.random(math.floor(ix/32)-1,math.floor(ix/32)+1);
								-- dy = math.random(math.floor(iy/32)-1,math.floor(iy/32)+1);
								
								-- if ( trial < 0 ) then
								-- break;
								-- end
								
							-- end
						
						-- end
						
						-- if ( type(drop) ~= "string" ) then
						-- parse("spawnitem "..drop.." "..dx.." "..dy);
						-- end
					
					-- end
					
				-- end
				
			-- end
		
		-- end
		
	-- end
	-- -- NPC Part ends here
	
	-- -- Dine Room Table
	-- for i = 1, #smap.rooms.kitchen.tables[2] do
		
		-- if ( img == smap.rooms.kitchen.tables[2][i][1] ) then
		
			-- if ( wid == 50 ) then
	
			-- smap.rooms.kitchen.tables[2][i][4] = smap.rooms.kitchen.tables[2][i][4] -1
			-- parse("sethealth "..id.." "..(player(id,"health")+math.random(10,15)))
			-- parse("sv_soundpos \"sanrok_jail/player/eat"..math.random(4)..".ogg\" "..ix.." "..iy)
				
				-- if ( smap.rooms.kitchen.tables[2][i][4] == 0 ) then
				-- image_effect(0,smap.rooms.kitchen.tables[2][i][1],"frame0","hitzone0")
				-- end
				
				
			-- end
		
		-- end
	
	-- end
	
-- end

-- addhook("use","_use")
-- function _use(id,event,data,x,y)

	-- if ( event == 0 ) then
		
		-- for i = 1, #sanrok_npcs do
		-- local nx, ny, Tag = sanrok_npcs[i][6][1], sanrok_npcs[i][6][2]
		-- Tag = sanrok_npcs[i][3];
		
			-- if ( sanrok_npcs[i][7] == 0 and sanrok_npcs[i][4] > 0 and sanrok_npc[Tag].interact and player(id,"team") == sanrok_npc[Tag].team and check_area(player(id,"tilex"), player(id,"tiley"), nx-1, ny-1, nx+1, ny+1) ) then
			-- local angle = math.deg(-math.atan2(nx*32+16 - player(id,"x"), ny*32+16 - player(id,"y")))
			-- tween_rotate(sanrok_npcs[i][1],300,angle);
			-- sanrok_npcs[i][7] = 1;	sanrok_npcs[i][8][20] = id;
			-- NPC_StopSounds(Tag)
				
				-- if ( sanrok_npc[Tag].sound.interact ) then
					-- parse("sv_sound2 "..id.." "..sanrok_npc[Tag].sound.interact[math.random(1,#sanrok_npc[Tag].sound.interact)])
				-- end
				
			-- end
		
		-- end
		
	-- end
	
-- end

-- addhook("movetile","_movetile")
-- function _movetile(id,x,y)

	-- for i = 1, #sanrok_npcs do
		
		-- if ( sanrok_npcs[i][8][20] == id and sanrok_npcs[i][7] == 1 ) then 
		-- local Tag = sanrok_npcs[i][3];
		-- sanrok_npcs[i][7] = 0;	sanrok_npcs[i][8][20] = 0;
		-- NPC_StopSounds(Tag)
			-- if ( sanrok_npc[Tag].sound.interact_leave ) then
				-- parse("sv_sound2 "..id.." \""..sanrok_npc[Tag].sound.interact_leave[math.random(1,#sanrok_npc[Tag].sound.interact_leave)])
			-- end
				
		-- end
		
	-- end
	
-- end


-- init_NPC()


--=======================================================================--
--[[
	
	97th. Elevator Quick test
	
	
]]--
-- dofile("sys/lua/Testscript_Assist.lua");
-- pl = {};
-- elevator = 
-- {
	-- config = {
		-- current_floor = 1,
		
	-- },
-- }

-- for id = 1,32 do
-- pl[id] = 
-- {
	-- evl = { image("gfx/sprites/block.bmp",0,0,3,id), image("gfx/sprites/block.bmp",0,0,3,id), image("gfx/sprites/block.bmp",0,0,3,id), image("gfx/sprites/block.bmp",0,0,3,id) },
	-- map_elevator = {},
-- }

-- image_effect(0,{pl[id].evl[1],pl[id].evl[2],pl[id].evl[3],pl[id].evl[4]},"color0,0,0","alpha0.0");
-- image_effect(0,{pl[id].evl[1],pl[id].evl[2]},"scale12,18");
-- image_effect(0,{pl[id].evl[3],pl[id].evl[4]},"scale5,7");

-- end
-- --[[ Position
	-- Sides = (EV_CenterX-8.5)*32+16, EV_CenterY*32+16
	-- Top / Bottom = EV_CenterX*32+16, (EV_CenterY-6)*32+16
-- ]]

-- function Set_Elevator_Zone(tbl)
-- --[[
	-- Table Detail
	-- 1. Name
	-- 2. Button Target
	-- 3. x coordinate
	-- 4. y coordinate
	-- 5. state

-- ]]
	-- table.insert(elevator,tbl);
-- end

-- Set_Elevator_Zone({"1st Floor","e_use1",6,10,true});
-- Set_Elevator_Zone({"2nd Floor","e_use2",17,10,false});
-- -- function init_elevator()
	-- -- for _,e in pairs(entitylist()) do
	
		-- -- if ( entity(e.x,e.y,"name"):sub(1,8) == "Elevator" ) then
		-- -- local hypen, name = entity(e.x,e.y,"name"):find("-");
		-- -- name = entity(e.x,e.y,"name"):sub(hypen+1);
		-- -- table.insert(elevator,{name,entity(e.x,e.y,"trigger"),e.x,e.y});
		-- -- end
		
	-- -- end
-- -- end


-- function find_elevator_key(str)
	
	-- for i = 1, #elevator do
		-- if ( elevator[i][2] == str ) then
		-- return i;
		-- end
	-- end
	
-- return false;
-- end

-- addhook("usebutton","_usebutton")
-- function _usebutton(id,x,y)
	-- if ( entity(x,y,"name"):sub(1,5)=="e_use" ) then
	-- local k = find_elevator_key(entity(x,y,"name"))
	-- image_effect(0,pl[id].evl[1],"pos"..((elevator[k][3]-8.5)*32+16)..","..(elevator[k][4]*32+16)..",0","talpha3000,1.0");
	-- image_effect(0,pl[id].evl[2],"pos"..((elevator[k][3]+8.5)*32+16)..","..(elevator[k][4]*32+16)..",0","talpha3000,1.0");
	-- image_effect(0,pl[id].evl[3],"pos"..(elevator[k][3]*32+16)..","..((elevator[k][4]-6)*32+16)..",0","talpha3000,1.0");
	-- image_effect(0,pl[id].evl[4],"pos"..(elevator[k][3]*32+16)..","..((elevator[k][4]+6)*32+16)..",0","talpha3000,1.0");
	-- end
-- end

-- -- init_elevator();
--=======================================================================--
--[[
	
	98th. C4 prevent
	
	
]]--
-- state = false
-- addhook("bombplant","np")
-- addhook("bombplant","_bp")
-- function _bp(id,x,y)
-- local state =
-- {
	-- player(id,'health'),
	-- player(id,'armor'),

	-- {},
	-- player(id,"x"),
	-- player(id,"y"),
-- }
	-- for _, w in pairs(playerweapons(id)) do
	 -- table.insert(state[3],{w,playerammo(id,w)});
	-- end

	-- parse("spawnplayer "..id.." 0 0")
	-- parse("setpos "..id.." "..state[4].." "..state[5]);
	
	-- parse("sethealth "..id.." "..state[1])
	-- parse("setarmor "..id.." "..state[2])
	
	-- for i = 1, #state[3] do
	-- parse("equip "..id.." "..state[3][i][1]);
	-- parse("setammo "..id.." "..state[3][i][1].." "..state[3][i][2].." "..state[3][i][3]);
	-- end
	
	-- return 1
	-- state = true
-- 	if state==false then
-- 	return 1
-- 	end
-- end

-- function np(id,x,y)
-- msg("hi")
-- return 0
-- end

-- bt = tonumber(game("mp_c4timer"))
-- v = ((bt*10)*3)*0.05;
-- addhook("second","_s")
-- function _s()

	-- if state then 
	-- bt = bt-1; 
	-- msg(bt)
	-- end
-- end
-- addhook("always","_al")
-- function _al()
	-- if state then
	-- v = v -1;
		-- if ( v <= 0 ) then
		-- play_sound(1)
		-- v = ((bt*10)*8)*0.05;
		-- end
		-- if ( bt <= 0 ) then
		-- state =false;
		-- end
	-- end
-- end

-- function play_sound(id)
 -- parse("sv_soundpos \"weapons/click.wav\" "..(player(id,"x")).." "..player(id,"y"))
-- end
--=======================================================================--
--[[
	
	99th. Elevator teleportaion
	
]]--
-- ev = 
-- {
-- 	{5*32,8*32+16,5*32,7*32+16}, -- first
-- 	{15*32,18*32+16,5*32,7*32+16}, -- second
-- 	tpzone = {10*32,13*32+16,13*32,15*32+16} -- center
	
-- }
-- dofile("sys/lua/Testscript_Assist.lua");

-- function tp(id)
	
-- 	for i = 1,#ev do
-- 		if check_area(player(id,"x"), player(id,"y"), ev[i][1], ev[i][3], ev[i][2], ev[i][4]) then
-- 		local px, py = math.abs(ev[i][1] - player(id,"x")), math.abs(ev[i][3] - player(id,"y"))
-- 		parse("setpos "..id.." "..(ev.tpzone[1]+px).." "..(ev.tpzone[3]+py))
-- 		end
-- 	end
	
-- end

-- function cvt_pos(id)

-- end
--=======================================================================--
--[[
	
	100th. Elfing yo, map cycle
	
]]--
--[[ 
		Temporary map cycle script
		Written in Feb. 17th. 2020
]]

-- function hudtxt3(mode, auto_scale, player_id, text_color, hud_id, text, x, y , ali, vali, size, ... )
	
	-- if ( string.find(text,"\174") ) then
	-- x = x+75;
	-- end
			
-- local game_scale = tonumber(game("mp_hudscale")); 
-- local temp_x = x;
	-- if ( game_scale == 1 ) then 
	-- auto_scale = false
	-- end
			
	-- if ( ... ) then 
	
		-- for k, cmd in pairs{...} do
		
			-- if ( cmd:sub(1,6) == "fadein" ) then
			-- x = -999
			-- end
					
		-- end
		
	-- end
				
-- ali = ali or 0; vali = vali or 0;
-- text_color = ( type(text_color) == "string" ) and text_color or "255220000" --// Set default CS2D color if type is not string
	
	-- if ( mode == 0 ) then --// default hudtxt function
		
		-- if ( player_id == 0 ) then --// Parse hudtxt function for everyone in game.
			
			-- for _, aid in pairs(player(0,"table")) do
			-- local t_size = size or 13;
			-- t_size = ( type(t_size) == "string" and t_size:find("a") and game_scale ~= 1 ) and (tonumber(t_size:sub(2))*player(aid,"screenw"))/850 or t_size:sub(2)
			
			-- local nx, ny;
			-- nx = ( auto_scale ) and (x/850) * player(aid,"screenw") or x;
			-- ny = ( auto_scale ) and (y/480) * player(aid,"screenh") or y;
			
			-- hudtxt3(0, false, aid, text_color, hud_id, text,nx, ny, ali, vali, t_size);
			-- end
		
		-- else
		
		-- temp_x = ( auto_scale ) and ( temp_x/850 ) * player(player_id,"screenw") or temp_x;
		-- x = ( auto_scale ) and ( x/850 ) * player(player_id,"screenw") or x;
		-- y = ( auto_scale ) and ( y/480 ) * player(player_id,"screenh") or y;
		
		-- size = size or 13; 
		
			-- if ( type(size) == "string" and size:find("a") ) then
				
				-- if ( game_scale ~= 1 ) then
				-- size = ( tonumber(size:sub(2)) * player(player_id,"screenw"))/850
				-- else
				
				-- size = size:gsub("a","");
				-- end
				
			-- end
			
		-- -- size = ( type(size) == "string" and size:find("a") and game_scale ~= 1 ) and ( tonumber(size:sub(2)) * player(player_id,"screenw"))/850 or size;
		
		-- parse("hudtxt2 "..player_id.." "..hud_id.." \"\169"..text_color..""..text.."\" "..x.." "..y.." "..ali.." "..vali.." "..size);
		
		-- end
	
	-- elseif ( mode == 1 ) then --// set hudtxt in specific position
	-- auto_scale = false;
		-- if ( player_id == 0 ) then
			
			-- for _, aid in pairs(player(0,"table")) do
			-- local t_size = size or 13;
			-- -- t_size = ( type(t_size) == "string" and t_size:find("a") ) and (tonumber(t_size:sub(2))*player(aid,"screenw"))/850 or t_size
			-- -- msg(t_size)
			-- hudtxt3(1, false, aid, text_color, hud_id, text, x, y, ali, vali, t_size);
			-- end
			
		-- else
			
			-- --// Tweak coordinates depend on hudscale
			-- if ( game_scale == 0 ) then
			-- x = ( x - player(player_id,"x"))*(player(player_id,"screenw")/850)+(player(player_id,"screenw")/2)
			-- y = ( y - player(player_id,"y"))*(player(player_id,"screenh")/480)+(player(player_id,"screenh")/2)
			-- size = size or 13; 
			-- size = ( type(size) == "string" and size:find("a") ) and ( tonumber(size:sub(2)) * player(player_id,"screenw"))/850 or size;
			
			
			-- elseif ( game_scale == 1 ) then
			-- x = ( x - player(player_id,"x"))+424.5
			-- y = ( y - player(player_id,"y"))+240.5
			-- size = ( type(size) == "string" and size:find("a") ) and tonumber(size:sub(2))-6 or size-6;
			-- else --// I didn't set for other scale, just use 0 and 1 
			
			-- x = ( x - player(player_id,"x"))
			-- y = ( y - player(player_id,"y"))
			
			-- end
		
		-- parse("hudtxt2 "..player_id.." "..hud_id.." \"\169"..text_color..""..text.."\" "..x.." "..y.." "..ali.." "..vali.." "..size);
		-- end
		
	-- end
	
-- local tbl , command , comma = {}
-- local effects = {"alpha","color","move","fadein","fadeout"}
	
	-- local function cvt_tbl(n,cmd)
	-- command, comma = cmd:sub(n)
		-- while ( #command ~= 0 ) do
		-- comma = command:find(",") or #command+1
				  
		-- tbl[#tbl+1] = command:sub(1,comma-1)
		-- command = command:sub(comma+1)
		-- end
			
		-- if ( cmd:sub(1,5) == "alpha" ) then
		-- parse("hudtxtalphafade "..player_id.." "..hud_id.." "..tbl[1].." "..tbl[2]);
		
		-- elseif ( cmd:sub(1,5) == "color" ) then
		-- parse("hudtxtcolorfade "..player_id.." "..hud_id.." "..tbl[1].." "..tbl[2].." "..tbl[3].." "..tbl[4]);
		
		-- elseif ( cmd:sub(1,4) == "move" ) then
			-- if ( auto_scale ) then
			-- tbl[2], tbl[3] = convertXY(player_id,tbl[2],tbl[3]);
			-- end
		-- parse("hudtxtmove "..player_id.." "..hud_id.." "..tbl[1].." "..tbl[2].." "..tbl[3]);
			
		-- elseif ( cmd:sub(1,6) == "fadein" ) then
		-- --[[ fade in parameter 
			-- 1. Appearing Duration
			-- 2. Alpha
		-- --]]
		-- parse("hudtxtalphafade "..player_id.." "..hud_id.." 1 0.0");
		-- parse("hudtxtmove "..player_id.." "..hud_id.." 1 -9999 -9999");
		-- timer(1,"parse","hudtxtmove "..player_id.." "..hud_id.." 1 "..temp_x.." "..y);
		-- timer(100,"parse", "hudtxtalphafade "..player_id.." "..hud_id.." "..tbl[1].." "..tbl[2]);
			
		
		-- elseif ( cmd:sub(1,7) == "fadeout" ) then
		-- --[[ fade-out parameter
			-- 1. Disappear after x miliseecond
			-- 2. Disappear Duration
			-- 3. Alpha
		-- ]]
		
		-- timer(tbl[1],"parse","hudtxtalphafade "..player_id.." "..hud_id.." "..tbl[2].." "..tbl[3]);
		-- end
		
	-- tbl = {};		
	-- end
	
	-- if ( ... ) then 
	
		-- for k, cmd in pairs{...} do
		
			-- for _, list in pairs(effects) do
	
				-- if ( cmd:sub(1,#list) == list ) then
				-- cvt_tbl(#list+1,cmd);
			
				-- break
				-- end
				
			-- end
		
		-- end
	
	-- end
	
-- end
-- t_TwoMaps = {"Sanrok_jail v1.0a", "California jail v2.1.2"}
-- t_Rounds = 2;
-- t_Map = (game("sv_map")==t_TwoMaps[1]) and t_TwoMaps[2] or t_TwoMaps[1];

-- function Display_NR_Info()
	-- if t_Rounds > 0 then
	 -- hudtxt3(0, true, 0, "230230230", 60, "Next map ['\169250220000"..t_Map.."\169230230230'] in "..t_Rounds.." round(s)", 10, 435 , 0, 1, "a13");
	-- else
	 -- parse("hudtxt 60 \"\" 0 0 0");
	-- end
-- end

-- addhook("join","t_Join")
-- function t_Join(id)
 -- Display_NR_Info()
-- end

-- addhook("endround","t_Endround")
-- function t_Endround(mode)
 -- local pass_type = {1,20,2,21,22};
	
	 -- for i = 1, #pass_type do
		-- if mode == pass_type[i] then
		 -- t_Rounds = t_Rounds-1;
			-- if t_Rounds <= 0 then
			 -- msg("Next map: "..t_Map.."@C");
			-- else
			 -- Display_NR_Info();
			-- end
			
		-- end

	-- end

-- end

-- addhook("startround","t_Startround")
-- function t_Startround()
	-- if t_Rounds <= 0 then
	 -- parse("sv_map "..t_Map);
	-- end
-- end

--=======================================================================--
--[[
	
	101st. Hook returning test
	
	
]]--
-- addhook("always","_always")
-- function _always()
	-- for _, id in pairs(player(0,"tableliving")) do
		-- if inentityzone(player(id,"tilex"),player(id,"tiley"),27)  then
		-- msg("YAY")
		-- end
	-- end
-- end
	
--=======================================================================--
--[[
	
	102nd. Hover message test
	
	
]]--

-- addhook("always","_always")
-- function _always()
	
	-- for _, id in pairs(player(0,"table")) do
	 -- local x, y = math.floor(player(id,"mousemapx")/32), math.floor(player(id,"mousemapy")/32);
		
		-- for k, e in pairs(entitylist(95)) do
		
			-- if ( entity(e.x,e.y,"exists") and e.x == x and e.y == y and entity(e.x,e.y,"name") == "hover_msg") then
			 -- local context = entity(e.x,e.y,"trigger");
			 -- parse("hudtxt2 "..id.." 0 \""..context.."\" "..(player(id,"mousex")+15).." "..(player(id,"mousey")+15).." 0");
			 -- break;
			-- end
		
		-- end
	-- end
-- end
--=======================================================================--
--[[
	
	103rd. File format changer
	-- Protection system
	
]]--

-- addhook("mapchange","_mapchange")
-- function _mapchange(mname)
	-- if mname == "test_nextmap" then
	-- os.rename("gfx/test.dat","gfx/test.png");
	-- else
	-- os.rename("gfx/test.png","gfx/test.dat");
	-- end
-- end

--[[
	
	104th. AI test
	
]]--

parse("bot_freeze 1")

--[[
	
	105th. Light off
	
]]--

function F()
	for _,e in pairs(entitylist(33)) do
		if ( entity(e.x,e.y,"int1") == 205 and entity(e.x,e.y,"int2") == 226 and entity(e.x,e.y,"int3") == 255 ) or ( entity(e.x,e.y,"int1") == 94 and entity(e.x,e.y,"int2") == 129 and entity(e.x,e.y,"int3") == 162 ) then
		parse("triggerposition "..e.x.." "..e.y);
		end
	end
	
	for _,e in pairs(entitylist(22)) do
		
		if ( entity(e.x,e.y,"int5") == 197 and entity(e.x,e.y,"int6") == 228 and entity(e.x,e.y,"int7") == 255 ) then
		parse("triggerposition "..e.x.." "..e.y);
		end
		
	end
	
end

